
AVR_DRIVERS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000696e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000196  00800060  0000696e  00006a02  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000039  008001f6  008001f6  00006b98  2**0
                  ALLOC
  3 .stab         0000606c  00000000  00000000  00006b98  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00002633  00000000  00000000  0000cc04  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000220  00000000  00000000  0000f237  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000276  00000000  00000000  0000f457  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003fdf  00000000  00000000  0000f6cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001957  00000000  00000000  000136ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001aec  00000000  00000000  00015003  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000240  00000000  00000000  00016af0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000003ac  00000000  00000000  00016d30  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00003db2  00000000  00000000  000170dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000b0  00000000  00000000  0001ae8e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 99 2a 	jmp	0x5532	; 0x5532 <__vector_1>
       8:	0c 94 cc 2a 	jmp	0x5598	; 0x5598 <__vector_2>
       c:	0c 94 ff 2a 	jmp	0x55fe	; 0x55fe <__vector_3>
      10:	0c 94 af 28 	jmp	0x515e	; 0x515e <__vector_4>
      14:	0c 94 86 28 	jmp	0x510c	; 0x510c <__vector_5>
      18:	0c 94 5d 28 	jmp	0x50ba	; 0x50ba <__vector_6>
      1c:	0c 94 34 28 	jmp	0x5068	; 0x5068 <__vector_7>
      20:	0c 94 0b 28 	jmp	0x5016	; 0x5016 <__vector_8>
      24:	0c 94 e2 27 	jmp	0x4fc4	; 0x4fc4 <__vector_9>
      28:	0c 94 b9 27 	jmp	0x4f72	; 0x4f72 <__vector_10>
      2c:	0c 94 90 27 	jmp	0x4f20	; 0x4f20 <__vector_11>
      30:	0c 94 da 29 	jmp	0x53b4	; 0x53b4 <__vector_12>
      34:	0c 94 e2 25 	jmp	0x4bc4	; 0x4bc4 <__vector_13>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 1f 26 	jmp	0x4c3e	; 0x4c3e <__vector_15>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee e6       	ldi	r30, 0x6E	; 110
      68:	f9 e6       	ldi	r31, 0x69	; 105
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a6 3f       	cpi	r26, 0xF6	; 246
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	12 e0       	ldi	r17, 0x02	; 2
      78:	a6 ef       	ldi	r26, 0xF6	; 246
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	af 32       	cpi	r26, 0x2F	; 47
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 a6 32 	call	0x654c	; 0x654c <main>
      8a:	0c 94 b5 34 	jmp	0x696a	; 0x696a <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__ashldi3>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	df 93       	push	r29
      9a:	cf 93       	push	r28
      9c:	cd b7       	in	r28, 0x3d	; 61
      9e:	de b7       	in	r29, 0x3e	; 62
      a0:	60 97       	sbiw	r28, 0x10	; 16
      a2:	0f b6       	in	r0, 0x3f	; 63
      a4:	f8 94       	cli
      a6:	de bf       	out	0x3e, r29	; 62
      a8:	0f be       	out	0x3f, r0	; 63
      aa:	cd bf       	out	0x3d, r28	; 61
      ac:	a8 2f       	mov	r26, r24
      ae:	00 23       	and	r16, r16
      b0:	09 f4       	brne	.+2      	; 0xb4 <__ashldi3+0x22>
      b2:	61 c0       	rjmp	.+194    	; 0x176 <__ashldi3+0xe4>
      b4:	7e 01       	movw	r14, r28
      b6:	08 94       	sec
      b8:	e1 1c       	adc	r14, r1
      ba:	f1 1c       	adc	r15, r1
      bc:	88 e0       	ldi	r24, 0x08	; 8
      be:	f7 01       	movw	r30, r14
      c0:	11 92       	st	Z+, r1
      c2:	8a 95       	dec	r24
      c4:	e9 f7       	brne	.-6      	; 0xc0 <__ashldi3+0x2e>
      c6:	29 83       	std	Y+1, r18	; 0x01
      c8:	3a 83       	std	Y+2, r19	; 0x02
      ca:	4b 83       	std	Y+3, r20	; 0x03
      cc:	5c 83       	std	Y+4, r21	; 0x04
      ce:	6d 83       	std	Y+5, r22	; 0x05
      d0:	7e 83       	std	Y+6, r23	; 0x06
      d2:	af 83       	std	Y+7, r26	; 0x07
      d4:	98 87       	std	Y+8, r25	; 0x08
      d6:	80 e2       	ldi	r24, 0x20	; 32
      d8:	80 1b       	sub	r24, r16
      da:	e8 2f       	mov	r30, r24
      dc:	ff 27       	eor	r31, r31
      de:	e7 fd       	sbrc	r30, 7
      e0:	f0 95       	com	r31
      e2:	49 81       	ldd	r20, Y+1	; 0x01
      e4:	5a 81       	ldd	r21, Y+2	; 0x02
      e6:	6b 81       	ldd	r22, Y+3	; 0x03
      e8:	7c 81       	ldd	r23, Y+4	; 0x04
      ea:	18 16       	cp	r1, r24
      ec:	84 f0       	brlt	.+32     	; 0x10e <__ashldi3+0x7c>
      ee:	19 86       	std	Y+9, r1	; 0x09
      f0:	1a 86       	std	Y+10, r1	; 0x0a
      f2:	1b 86       	std	Y+11, r1	; 0x0b
      f4:	1c 86       	std	Y+12, r1	; 0x0c
      f6:	88 27       	eor	r24, r24
      f8:	99 27       	eor	r25, r25
      fa:	8e 1b       	sub	r24, r30
      fc:	9f 0b       	sbc	r25, r31
      fe:	04 c0       	rjmp	.+8      	; 0x108 <__ashldi3+0x76>
     100:	44 0f       	add	r20, r20
     102:	55 1f       	adc	r21, r21
     104:	66 1f       	adc	r22, r22
     106:	77 1f       	adc	r23, r23
     108:	8a 95       	dec	r24
     10a:	d2 f7       	brpl	.-12     	; 0x100 <__ashldi3+0x6e>
     10c:	28 c0       	rjmp	.+80     	; 0x15e <__ashldi3+0xcc>
     10e:	20 2f       	mov	r18, r16
     110:	33 27       	eor	r19, r19
     112:	27 fd       	sbrc	r18, 7
     114:	30 95       	com	r19
     116:	db 01       	movw	r26, r22
     118:	ca 01       	movw	r24, r20
     11a:	02 2e       	mov	r0, r18
     11c:	04 c0       	rjmp	.+8      	; 0x126 <__ashldi3+0x94>
     11e:	88 0f       	add	r24, r24
     120:	99 1f       	adc	r25, r25
     122:	aa 1f       	adc	r26, r26
     124:	bb 1f       	adc	r27, r27
     126:	0a 94       	dec	r0
     128:	d2 f7       	brpl	.-12     	; 0x11e <__ashldi3+0x8c>
     12a:	89 87       	std	Y+9, r24	; 0x09
     12c:	9a 87       	std	Y+10, r25	; 0x0a
     12e:	ab 87       	std	Y+11, r26	; 0x0b
     130:	bc 87       	std	Y+12, r27	; 0x0c
     132:	04 c0       	rjmp	.+8      	; 0x13c <__ashldi3+0xaa>
     134:	76 95       	lsr	r23
     136:	67 95       	ror	r22
     138:	57 95       	ror	r21
     13a:	47 95       	ror	r20
     13c:	ea 95       	dec	r30
     13e:	d2 f7       	brpl	.-12     	; 0x134 <__ashldi3+0xa2>
     140:	8d 81       	ldd	r24, Y+5	; 0x05
     142:	9e 81       	ldd	r25, Y+6	; 0x06
     144:	af 81       	ldd	r26, Y+7	; 0x07
     146:	b8 85       	ldd	r27, Y+8	; 0x08
     148:	04 c0       	rjmp	.+8      	; 0x152 <__ashldi3+0xc0>
     14a:	88 0f       	add	r24, r24
     14c:	99 1f       	adc	r25, r25
     14e:	aa 1f       	adc	r26, r26
     150:	bb 1f       	adc	r27, r27
     152:	2a 95       	dec	r18
     154:	d2 f7       	brpl	.-12     	; 0x14a <__ashldi3+0xb8>
     156:	48 2b       	or	r20, r24
     158:	59 2b       	or	r21, r25
     15a:	6a 2b       	or	r22, r26
     15c:	7b 2b       	or	r23, r27
     15e:	4d 87       	std	Y+13, r20	; 0x0d
     160:	5e 87       	std	Y+14, r21	; 0x0e
     162:	6f 87       	std	Y+15, r22	; 0x0f
     164:	78 8b       	std	Y+16, r23	; 0x10
     166:	29 85       	ldd	r18, Y+9	; 0x09
     168:	3a 85       	ldd	r19, Y+10	; 0x0a
     16a:	4b 85       	ldd	r20, Y+11	; 0x0b
     16c:	5c 85       	ldd	r21, Y+12	; 0x0c
     16e:	6d 85       	ldd	r22, Y+13	; 0x0d
     170:	7e 85       	ldd	r23, Y+14	; 0x0e
     172:	af 85       	ldd	r26, Y+15	; 0x0f
     174:	98 89       	ldd	r25, Y+16	; 0x10
     176:	8a 2f       	mov	r24, r26
     178:	60 96       	adiw	r28, 0x10	; 16
     17a:	0f b6       	in	r0, 0x3f	; 63
     17c:	f8 94       	cli
     17e:	de bf       	out	0x3e, r29	; 62
     180:	0f be       	out	0x3f, r0	; 63
     182:	cd bf       	out	0x3d, r28	; 61
     184:	cf 91       	pop	r28
     186:	df 91       	pop	r29
     188:	0f 91       	pop	r16
     18a:	ff 90       	pop	r15
     18c:	ef 90       	pop	r14
     18e:	08 95       	ret

00000190 <__fixunssfsi>:
     190:	ef 92       	push	r14
     192:	ff 92       	push	r15
     194:	0f 93       	push	r16
     196:	1f 93       	push	r17
     198:	7b 01       	movw	r14, r22
     19a:	8c 01       	movw	r16, r24
     19c:	20 e0       	ldi	r18, 0x00	; 0
     19e:	30 e0       	ldi	r19, 0x00	; 0
     1a0:	40 e0       	ldi	r20, 0x00	; 0
     1a2:	5f e4       	ldi	r21, 0x4F	; 79
     1a4:	0e 94 8e 21 	call	0x431c	; 0x431c <__gesf2>
     1a8:	88 23       	and	r24, r24
     1aa:	8c f0       	brlt	.+34     	; 0x1ce <__fixunssfsi+0x3e>
     1ac:	c8 01       	movw	r24, r16
     1ae:	b7 01       	movw	r22, r14
     1b0:	20 e0       	ldi	r18, 0x00	; 0
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	40 e0       	ldi	r20, 0x00	; 0
     1b6:	5f e4       	ldi	r21, 0x4F	; 79
     1b8:	0e 94 8a 1f 	call	0x3f14	; 0x3f14 <__subsf3>
     1bc:	0e 94 1c 22 	call	0x4438	; 0x4438 <__fixsfsi>
     1c0:	9b 01       	movw	r18, r22
     1c2:	ac 01       	movw	r20, r24
     1c4:	20 50       	subi	r18, 0x00	; 0
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 48       	sbci	r21, 0x80	; 128
     1cc:	06 c0       	rjmp	.+12     	; 0x1da <__fixunssfsi+0x4a>
     1ce:	c8 01       	movw	r24, r16
     1d0:	b7 01       	movw	r22, r14
     1d2:	0e 94 1c 22 	call	0x4438	; 0x4438 <__fixsfsi>
     1d6:	9b 01       	movw	r18, r22
     1d8:	ac 01       	movw	r20, r24
     1da:	b9 01       	movw	r22, r18
     1dc:	ca 01       	movw	r24, r20
     1de:	1f 91       	pop	r17
     1e0:	0f 91       	pop	r16
     1e2:	ff 90       	pop	r15
     1e4:	ef 90       	pop	r14
     1e6:	08 95       	ret

000001e8 <__divdi3>:
     1e8:	a2 e7       	ldi	r26, 0x72	; 114
     1ea:	b0 e0       	ldi	r27, 0x00	; 0
     1ec:	ea ef       	ldi	r30, 0xFA	; 250
     1ee:	f0 e0       	ldi	r31, 0x00	; 0
     1f0:	0c 94 75 34 	jmp	0x68ea	; 0x68ea <__prologue_saves__>
     1f4:	98 2e       	mov	r9, r24
     1f6:	89 2e       	mov	r8, r25
     1f8:	71 2e       	mov	r7, r17
     1fa:	88 e0       	ldi	r24, 0x08	; 8
     1fc:	fe 01       	movw	r30, r28
     1fe:	31 96       	adiw	r30, 0x01	; 1
     200:	df 01       	movw	r26, r30
     202:	68 2e       	mov	r6, r24
     204:	1d 92       	st	X+, r1
     206:	6a 94       	dec	r6
     208:	e9 f7       	brne	.-6      	; 0x204 <__divdi3+0x1c>
     20a:	29 83       	std	Y+1, r18	; 0x01
     20c:	3a 83       	std	Y+2, r19	; 0x02
     20e:	4b 83       	std	Y+3, r20	; 0x03
     210:	5c 83       	std	Y+4, r21	; 0x04
     212:	6d 83       	std	Y+5, r22	; 0x05
     214:	7e 83       	std	Y+6, r23	; 0x06
     216:	9f 82       	std	Y+7, r9	; 0x07
     218:	98 87       	std	Y+8, r25	; 0x08
     21a:	fe 01       	movw	r30, r28
     21c:	39 96       	adiw	r30, 0x09	; 9
     21e:	df 01       	movw	r26, r30
     220:	1d 92       	st	X+, r1
     222:	8a 95       	dec	r24
     224:	e9 f7       	brne	.-6      	; 0x220 <__divdi3+0x38>
     226:	a9 86       	std	Y+9, r10	; 0x09
     228:	ba 86       	std	Y+10, r11	; 0x0a
     22a:	cb 86       	std	Y+11, r12	; 0x0b
     22c:	dc 86       	std	Y+12, r13	; 0x0c
     22e:	ed 86       	std	Y+13, r14	; 0x0d
     230:	fe 86       	std	Y+14, r15	; 0x0e
     232:	0f 87       	std	Y+15, r16	; 0x0f
     234:	18 8b       	std	Y+16, r17	; 0x10
     236:	8d 81       	ldd	r24, Y+5	; 0x05
     238:	9e 81       	ldd	r25, Y+6	; 0x06
     23a:	af 81       	ldd	r26, Y+7	; 0x07
     23c:	b8 85       	ldd	r27, Y+8	; 0x08
     23e:	b7 fd       	sbrc	r27, 7
     240:	07 c0       	rjmp	.+14     	; 0x250 <__divdi3+0x68>
     242:	e1 96       	adiw	r28, 0x31	; 49
     244:	1c ae       	std	Y+60, r1	; 0x3c
     246:	1d ae       	std	Y+61, r1	; 0x3d
     248:	1e ae       	std	Y+62, r1	; 0x3e
     24a:	1f ae       	std	Y+63, r1	; 0x3f
     24c:	e1 97       	sbiw	r28, 0x31	; 49
     24e:	64 c0       	rjmp	.+200    	; 0x318 <__divdi3+0x130>
     250:	21 95       	neg	r18
     252:	81 e0       	ldi	r24, 0x01	; 1
     254:	12 16       	cp	r1, r18
     256:	08 f0       	brcs	.+2      	; 0x25a <__divdi3+0x72>
     258:	80 e0       	ldi	r24, 0x00	; 0
     25a:	31 95       	neg	r19
     25c:	91 e0       	ldi	r25, 0x01	; 1
     25e:	13 16       	cp	r1, r19
     260:	08 f0       	brcs	.+2      	; 0x264 <__divdi3+0x7c>
     262:	90 e0       	ldi	r25, 0x00	; 0
     264:	b3 2f       	mov	r27, r19
     266:	b8 1b       	sub	r27, r24
     268:	81 e0       	ldi	r24, 0x01	; 1
     26a:	3b 17       	cp	r19, r27
     26c:	08 f0       	brcs	.+2      	; 0x270 <__divdi3+0x88>
     26e:	80 e0       	ldi	r24, 0x00	; 0
     270:	98 2b       	or	r25, r24
     272:	41 95       	neg	r20
     274:	31 e0       	ldi	r19, 0x01	; 1
     276:	14 16       	cp	r1, r20
     278:	08 f0       	brcs	.+2      	; 0x27c <__divdi3+0x94>
     27a:	30 e0       	ldi	r19, 0x00	; 0
     27c:	a4 2f       	mov	r26, r20
     27e:	a9 1b       	sub	r26, r25
     280:	81 e0       	ldi	r24, 0x01	; 1
     282:	4a 17       	cp	r20, r26
     284:	08 f0       	brcs	.+2      	; 0x288 <__divdi3+0xa0>
     286:	80 e0       	ldi	r24, 0x00	; 0
     288:	38 2b       	or	r19, r24
     28a:	51 95       	neg	r21
     28c:	91 e0       	ldi	r25, 0x01	; 1
     28e:	15 16       	cp	r1, r21
     290:	08 f0       	brcs	.+2      	; 0x294 <__divdi3+0xac>
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	f5 2f       	mov	r31, r21
     296:	f3 1b       	sub	r31, r19
     298:	81 e0       	ldi	r24, 0x01	; 1
     29a:	5f 17       	cp	r21, r31
     29c:	08 f0       	brcs	.+2      	; 0x2a0 <__divdi3+0xb8>
     29e:	80 e0       	ldi	r24, 0x00	; 0
     2a0:	98 2b       	or	r25, r24
     2a2:	61 95       	neg	r22
     2a4:	31 e0       	ldi	r19, 0x01	; 1
     2a6:	16 16       	cp	r1, r22
     2a8:	08 f0       	brcs	.+2      	; 0x2ac <__divdi3+0xc4>
     2aa:	30 e0       	ldi	r19, 0x00	; 0
     2ac:	e6 2f       	mov	r30, r22
     2ae:	e9 1b       	sub	r30, r25
     2b0:	81 e0       	ldi	r24, 0x01	; 1
     2b2:	6e 17       	cp	r22, r30
     2b4:	08 f0       	brcs	.+2      	; 0x2b8 <__divdi3+0xd0>
     2b6:	80 e0       	ldi	r24, 0x00	; 0
     2b8:	38 2b       	or	r19, r24
     2ba:	71 95       	neg	r23
     2bc:	41 e0       	ldi	r20, 0x01	; 1
     2be:	17 16       	cp	r1, r23
     2c0:	08 f0       	brcs	.+2      	; 0x2c4 <__divdi3+0xdc>
     2c2:	40 e0       	ldi	r20, 0x00	; 0
     2c4:	57 2f       	mov	r21, r23
     2c6:	53 1b       	sub	r21, r19
     2c8:	81 e0       	ldi	r24, 0x01	; 1
     2ca:	75 17       	cp	r23, r21
     2cc:	08 f0       	brcs	.+2      	; 0x2d0 <__divdi3+0xe8>
     2ce:	80 e0       	ldi	r24, 0x00	; 0
     2d0:	48 2b       	or	r20, r24
     2d2:	89 2d       	mov	r24, r9
     2d4:	81 95       	neg	r24
     2d6:	91 e0       	ldi	r25, 0x01	; 1
     2d8:	18 16       	cp	r1, r24
     2da:	08 f0       	brcs	.+2      	; 0x2de <__divdi3+0xf6>
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	68 2e       	mov	r6, r24
     2e0:	64 1a       	sub	r6, r20
     2e2:	46 2d       	mov	r20, r6
     2e4:	31 e0       	ldi	r19, 0x01	; 1
     2e6:	86 15       	cp	r24, r6
     2e8:	08 f0       	brcs	.+2      	; 0x2ec <__divdi3+0x104>
     2ea:	30 e0       	ldi	r19, 0x00	; 0
     2ec:	93 2b       	or	r25, r19
     2ee:	88 2d       	mov	r24, r8
     2f0:	81 95       	neg	r24
     2f2:	89 1b       	sub	r24, r25
     2f4:	29 83       	std	Y+1, r18	; 0x01
     2f6:	ba 83       	std	Y+2, r27	; 0x02
     2f8:	ab 83       	std	Y+3, r26	; 0x03
     2fa:	fc 83       	std	Y+4, r31	; 0x04
     2fc:	ed 83       	std	Y+5, r30	; 0x05
     2fe:	5e 83       	std	Y+6, r21	; 0x06
     300:	4f 83       	std	Y+7, r20	; 0x07
     302:	88 87       	std	Y+8, r24	; 0x08
     304:	2f ef       	ldi	r18, 0xFF	; 255
     306:	3f ef       	ldi	r19, 0xFF	; 255
     308:	4f ef       	ldi	r20, 0xFF	; 255
     30a:	5f ef       	ldi	r21, 0xFF	; 255
     30c:	e1 96       	adiw	r28, 0x31	; 49
     30e:	2c af       	std	Y+60, r18	; 0x3c
     310:	3d af       	std	Y+61, r19	; 0x3d
     312:	4e af       	std	Y+62, r20	; 0x3e
     314:	5f af       	std	Y+63, r21	; 0x3f
     316:	e1 97       	sbiw	r28, 0x31	; 49
     318:	8d 85       	ldd	r24, Y+13	; 0x0d
     31a:	9e 85       	ldd	r25, Y+14	; 0x0e
     31c:	af 85       	ldd	r26, Y+15	; 0x0f
     31e:	b8 89       	ldd	r27, Y+16	; 0x10
     320:	b7 ff       	sbrs	r27, 7
     322:	6a c0       	rjmp	.+212    	; 0x3f8 <__divdi3+0x210>
     324:	e1 96       	adiw	r28, 0x31	; 49
     326:	4c ad       	ldd	r20, Y+60	; 0x3c
     328:	5d ad       	ldd	r21, Y+61	; 0x3d
     32a:	6e ad       	ldd	r22, Y+62	; 0x3e
     32c:	7f ad       	ldd	r23, Y+63	; 0x3f
     32e:	e1 97       	sbiw	r28, 0x31	; 49
     330:	40 95       	com	r20
     332:	50 95       	com	r21
     334:	60 95       	com	r22
     336:	70 95       	com	r23
     338:	e1 96       	adiw	r28, 0x31	; 49
     33a:	4c af       	std	Y+60, r20	; 0x3c
     33c:	5d af       	std	Y+61, r21	; 0x3d
     33e:	6e af       	std	Y+62, r22	; 0x3e
     340:	7f af       	std	Y+63, r23	; 0x3f
     342:	e1 97       	sbiw	r28, 0x31	; 49
     344:	a1 94       	neg	r10
     346:	81 e0       	ldi	r24, 0x01	; 1
     348:	1a 14       	cp	r1, r10
     34a:	08 f0       	brcs	.+2      	; 0x34e <__divdi3+0x166>
     34c:	80 e0       	ldi	r24, 0x00	; 0
     34e:	b1 94       	neg	r11
     350:	91 e0       	ldi	r25, 0x01	; 1
     352:	1b 14       	cp	r1, r11
     354:	08 f0       	brcs	.+2      	; 0x358 <__divdi3+0x170>
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	6b 2d       	mov	r22, r11
     35a:	68 1b       	sub	r22, r24
     35c:	81 e0       	ldi	r24, 0x01	; 1
     35e:	b6 16       	cp	r11, r22
     360:	08 f0       	brcs	.+2      	; 0x364 <__divdi3+0x17c>
     362:	80 e0       	ldi	r24, 0x00	; 0
     364:	98 2b       	or	r25, r24
     366:	c1 94       	neg	r12
     368:	21 e0       	ldi	r18, 0x01	; 1
     36a:	1c 14       	cp	r1, r12
     36c:	08 f0       	brcs	.+2      	; 0x370 <__divdi3+0x188>
     36e:	20 e0       	ldi	r18, 0x00	; 0
     370:	5c 2d       	mov	r21, r12
     372:	59 1b       	sub	r21, r25
     374:	81 e0       	ldi	r24, 0x01	; 1
     376:	c5 16       	cp	r12, r21
     378:	08 f0       	brcs	.+2      	; 0x37c <__divdi3+0x194>
     37a:	80 e0       	ldi	r24, 0x00	; 0
     37c:	28 2b       	or	r18, r24
     37e:	d1 94       	neg	r13
     380:	91 e0       	ldi	r25, 0x01	; 1
     382:	1d 14       	cp	r1, r13
     384:	08 f0       	brcs	.+2      	; 0x388 <__divdi3+0x1a0>
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	4d 2d       	mov	r20, r13
     38a:	42 1b       	sub	r20, r18
     38c:	81 e0       	ldi	r24, 0x01	; 1
     38e:	d4 16       	cp	r13, r20
     390:	08 f0       	brcs	.+2      	; 0x394 <__divdi3+0x1ac>
     392:	80 e0       	ldi	r24, 0x00	; 0
     394:	98 2b       	or	r25, r24
     396:	e1 94       	neg	r14
     398:	21 e0       	ldi	r18, 0x01	; 1
     39a:	1e 14       	cp	r1, r14
     39c:	08 f0       	brcs	.+2      	; 0x3a0 <__divdi3+0x1b8>
     39e:	20 e0       	ldi	r18, 0x00	; 0
     3a0:	3e 2d       	mov	r19, r14
     3a2:	39 1b       	sub	r19, r25
     3a4:	81 e0       	ldi	r24, 0x01	; 1
     3a6:	e3 16       	cp	r14, r19
     3a8:	08 f0       	brcs	.+2      	; 0x3ac <__divdi3+0x1c4>
     3aa:	80 e0       	ldi	r24, 0x00	; 0
     3ac:	28 2b       	or	r18, r24
     3ae:	f1 94       	neg	r15
     3b0:	91 e0       	ldi	r25, 0x01	; 1
     3b2:	1f 14       	cp	r1, r15
     3b4:	08 f0       	brcs	.+2      	; 0x3b8 <__divdi3+0x1d0>
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	7f 2d       	mov	r23, r15
     3ba:	72 1b       	sub	r23, r18
     3bc:	27 2f       	mov	r18, r23
     3be:	81 e0       	ldi	r24, 0x01	; 1
     3c0:	f7 16       	cp	r15, r23
     3c2:	08 f0       	brcs	.+2      	; 0x3c6 <__divdi3+0x1de>
     3c4:	80 e0       	ldi	r24, 0x00	; 0
     3c6:	98 2b       	or	r25, r24
     3c8:	01 95       	neg	r16
     3ca:	11 e0       	ldi	r17, 0x01	; 1
     3cc:	10 16       	cp	r1, r16
     3ce:	08 f0       	brcs	.+2      	; 0x3d2 <__divdi3+0x1ea>
     3d0:	10 e0       	ldi	r17, 0x00	; 0
     3d2:	80 2f       	mov	r24, r16
     3d4:	89 1b       	sub	r24, r25
     3d6:	98 2f       	mov	r25, r24
     3d8:	81 e0       	ldi	r24, 0x01	; 1
     3da:	09 17       	cp	r16, r25
     3dc:	08 f0       	brcs	.+2      	; 0x3e0 <__divdi3+0x1f8>
     3de:	80 e0       	ldi	r24, 0x00	; 0
     3e0:	18 2b       	or	r17, r24
     3e2:	87 2d       	mov	r24, r7
     3e4:	81 95       	neg	r24
     3e6:	81 1b       	sub	r24, r17
     3e8:	a9 86       	std	Y+9, r10	; 0x09
     3ea:	6a 87       	std	Y+10, r22	; 0x0a
     3ec:	5b 87       	std	Y+11, r21	; 0x0b
     3ee:	4c 87       	std	Y+12, r20	; 0x0c
     3f0:	3d 87       	std	Y+13, r19	; 0x0d
     3f2:	2e 87       	std	Y+14, r18	; 0x0e
     3f4:	9f 87       	std	Y+15, r25	; 0x0f
     3f6:	88 8b       	std	Y+16, r24	; 0x10
     3f8:	99 81       	ldd	r25, Y+1	; 0x01
     3fa:	2a 81       	ldd	r18, Y+2	; 0x02
     3fc:	3b 81       	ldd	r19, Y+3	; 0x03
     3fe:	4c 81       	ldd	r20, Y+4	; 0x04
     400:	5d 81       	ldd	r21, Y+5	; 0x05
     402:	6e 81       	ldd	r22, Y+6	; 0x06
     404:	7f 81       	ldd	r23, Y+7	; 0x07
     406:	a8 85       	ldd	r26, Y+8	; 0x08
     408:	b9 85       	ldd	r27, Y+9	; 0x09
     40a:	1a 85       	ldd	r17, Y+10	; 0x0a
     40c:	0b 85       	ldd	r16, Y+11	; 0x0b
     40e:	fc 84       	ldd	r15, Y+12	; 0x0c
     410:	ed 84       	ldd	r14, Y+13	; 0x0d
     412:	de 84       	ldd	r13, Y+14	; 0x0e
     414:	cf 84       	ldd	r12, Y+15	; 0x0f
     416:	b8 88       	ldd	r11, Y+16	; 0x10
     418:	88 e0       	ldi	r24, 0x08	; 8
     41a:	e1 e1       	ldi	r30, 0x11	; 17
     41c:	8e 2e       	mov	r8, r30
     41e:	91 2c       	mov	r9, r1
     420:	8c 0e       	add	r8, r28
     422:	9d 1e       	adc	r9, r29
     424:	f4 01       	movw	r30, r8
     426:	68 2e       	mov	r6, r24
     428:	11 92       	st	Z+, r1
     42a:	6a 94       	dec	r6
     42c:	e9 f7       	brne	.-6      	; 0x428 <__divdi3+0x240>
     42e:	99 8b       	std	Y+17, r25	; 0x11
     430:	2a 8b       	std	Y+18, r18	; 0x12
     432:	3b 8b       	std	Y+19, r19	; 0x13
     434:	4c 8b       	std	Y+20, r20	; 0x14
     436:	5d 8b       	std	Y+21, r21	; 0x15
     438:	6e 8b       	std	Y+22, r22	; 0x16
     43a:	7f 8b       	std	Y+23, r23	; 0x17
     43c:	a8 8f       	std	Y+24, r26	; 0x18
     43e:	9e 01       	movw	r18, r28
     440:	27 5e       	subi	r18, 0xE7	; 231
     442:	3f 4f       	sbci	r19, 0xFF	; 255
     444:	f9 01       	movw	r30, r18
     446:	11 92       	st	Z+, r1
     448:	8a 95       	dec	r24
     44a:	e9 f7       	brne	.-6      	; 0x446 <__divdi3+0x25e>
     44c:	b9 8f       	std	Y+25, r27	; 0x19
     44e:	1a 8f       	std	Y+26, r17	; 0x1a
     450:	0b 8f       	std	Y+27, r16	; 0x1b
     452:	fc 8e       	std	Y+28, r15	; 0x1c
     454:	ed 8e       	std	Y+29, r14	; 0x1d
     456:	de 8e       	std	Y+30, r13	; 0x1e
     458:	cf 8e       	std	Y+31, r12	; 0x1f
     45a:	b8 a2       	std	Y+32, r11	; 0x20
     45c:	29 8c       	ldd	r2, Y+25	; 0x19
     45e:	3a 8c       	ldd	r3, Y+26	; 0x1a
     460:	4b 8c       	ldd	r4, Y+27	; 0x1b
     462:	5c 8c       	ldd	r5, Y+28	; 0x1c
     464:	ed 8c       	ldd	r14, Y+29	; 0x1d
     466:	fe 8c       	ldd	r15, Y+30	; 0x1e
     468:	0f 8d       	ldd	r16, Y+31	; 0x1f
     46a:	18 a1       	ldd	r17, Y+32	; 0x20
     46c:	69 88       	ldd	r6, Y+17	; 0x11
     46e:	7a 88       	ldd	r7, Y+18	; 0x12
     470:	8b 88       	ldd	r8, Y+19	; 0x13
     472:	9c 88       	ldd	r9, Y+20	; 0x14
     474:	21 96       	adiw	r28, 0x01	; 1
     476:	6c ae       	std	Y+60, r6	; 0x3c
     478:	7d ae       	std	Y+61, r7	; 0x3d
     47a:	8e ae       	std	Y+62, r8	; 0x3e
     47c:	9f ae       	std	Y+63, r9	; 0x3f
     47e:	21 97       	sbiw	r28, 0x01	; 1
     480:	6d 88       	ldd	r6, Y+21	; 0x15
     482:	7e 88       	ldd	r7, Y+22	; 0x16
     484:	8f 88       	ldd	r8, Y+23	; 0x17
     486:	98 8c       	ldd	r9, Y+24	; 0x18
     488:	e1 14       	cp	r14, r1
     48a:	f1 04       	cpc	r15, r1
     48c:	01 05       	cpc	r16, r1
     48e:	11 05       	cpc	r17, r1
     490:	09 f0       	breq	.+2      	; 0x494 <__divdi3+0x2ac>
     492:	d9 c3       	rjmp	.+1970   	; 0xc46 <__stack+0x3e7>
     494:	62 14       	cp	r6, r2
     496:	73 04       	cpc	r7, r3
     498:	84 04       	cpc	r8, r4
     49a:	95 04       	cpc	r9, r5
     49c:	08 f0       	brcs	.+2      	; 0x4a0 <__divdi3+0x2b8>
     49e:	57 c1       	rjmp	.+686    	; 0x74e <__divdi3+0x566>
     4a0:	00 e0       	ldi	r16, 0x00	; 0
     4a2:	20 16       	cp	r2, r16
     4a4:	00 e0       	ldi	r16, 0x00	; 0
     4a6:	30 06       	cpc	r3, r16
     4a8:	01 e0       	ldi	r16, 0x01	; 1
     4aa:	40 06       	cpc	r4, r16
     4ac:	00 e0       	ldi	r16, 0x00	; 0
     4ae:	50 06       	cpc	r5, r16
     4b0:	88 f4       	brcc	.+34     	; 0x4d4 <__divdi3+0x2ec>
     4b2:	1f ef       	ldi	r17, 0xFF	; 255
     4b4:	21 16       	cp	r2, r17
     4b6:	31 04       	cpc	r3, r1
     4b8:	41 04       	cpc	r4, r1
     4ba:	51 04       	cpc	r5, r1
     4bc:	39 f0       	breq	.+14     	; 0x4cc <__divdi3+0x2e4>
     4be:	30 f0       	brcs	.+12     	; 0x4cc <__divdi3+0x2e4>
     4c0:	48 e0       	ldi	r20, 0x08	; 8
     4c2:	e4 2e       	mov	r14, r20
     4c4:	f1 2c       	mov	r15, r1
     4c6:	01 2d       	mov	r16, r1
     4c8:	11 2d       	mov	r17, r1
     4ca:	18 c0       	rjmp	.+48     	; 0x4fc <__divdi3+0x314>
     4cc:	ee 24       	eor	r14, r14
     4ce:	ff 24       	eor	r15, r15
     4d0:	87 01       	movw	r16, r14
     4d2:	14 c0       	rjmp	.+40     	; 0x4fc <__divdi3+0x314>
     4d4:	20 e0       	ldi	r18, 0x00	; 0
     4d6:	22 16       	cp	r2, r18
     4d8:	20 e0       	ldi	r18, 0x00	; 0
     4da:	32 06       	cpc	r3, r18
     4dc:	20 e0       	ldi	r18, 0x00	; 0
     4de:	42 06       	cpc	r4, r18
     4e0:	21 e0       	ldi	r18, 0x01	; 1
     4e2:	52 06       	cpc	r5, r18
     4e4:	30 f0       	brcs	.+12     	; 0x4f2 <__divdi3+0x30a>
     4e6:	38 e1       	ldi	r19, 0x18	; 24
     4e8:	e3 2e       	mov	r14, r19
     4ea:	f1 2c       	mov	r15, r1
     4ec:	01 2d       	mov	r16, r1
     4ee:	11 2d       	mov	r17, r1
     4f0:	05 c0       	rjmp	.+10     	; 0x4fc <__divdi3+0x314>
     4f2:	20 e1       	ldi	r18, 0x10	; 16
     4f4:	e2 2e       	mov	r14, r18
     4f6:	f1 2c       	mov	r15, r1
     4f8:	01 2d       	mov	r16, r1
     4fa:	11 2d       	mov	r17, r1
     4fc:	d2 01       	movw	r26, r4
     4fe:	c1 01       	movw	r24, r2
     500:	0e 2c       	mov	r0, r14
     502:	04 c0       	rjmp	.+8      	; 0x50c <__divdi3+0x324>
     504:	b6 95       	lsr	r27
     506:	a7 95       	ror	r26
     508:	97 95       	ror	r25
     50a:	87 95       	ror	r24
     50c:	0a 94       	dec	r0
     50e:	d2 f7       	brpl	.-12     	; 0x504 <__divdi3+0x31c>
     510:	8b 51       	subi	r24, 0x1B	; 27
     512:	9f 4f       	sbci	r25, 0xFF	; 255
     514:	dc 01       	movw	r26, r24
     516:	2c 91       	ld	r18, X
     518:	80 e2       	ldi	r24, 0x20	; 32
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	a0 e0       	ldi	r26, 0x00	; 0
     51e:	b0 e0       	ldi	r27, 0x00	; 0
     520:	8e 19       	sub	r24, r14
     522:	9f 09       	sbc	r25, r15
     524:	a0 0b       	sbc	r26, r16
     526:	b1 0b       	sbc	r27, r17
     528:	7c 01       	movw	r14, r24
     52a:	8d 01       	movw	r16, r26
     52c:	e2 1a       	sub	r14, r18
     52e:	f1 08       	sbc	r15, r1
     530:	01 09       	sbc	r16, r1
     532:	11 09       	sbc	r17, r1
     534:	e1 14       	cp	r14, r1
     536:	f1 04       	cpc	r15, r1
     538:	01 05       	cpc	r16, r1
     53a:	11 05       	cpc	r17, r1
     53c:	d1 f1       	breq	.+116    	; 0x5b2 <__divdi3+0x3ca>
     53e:	0e 2c       	mov	r0, r14
     540:	04 c0       	rjmp	.+8      	; 0x54a <__divdi3+0x362>
     542:	22 0c       	add	r2, r2
     544:	33 1c       	adc	r3, r3
     546:	44 1c       	adc	r4, r4
     548:	55 1c       	adc	r5, r5
     54a:	0a 94       	dec	r0
     54c:	d2 f7       	brpl	.-12     	; 0x542 <__divdi3+0x35a>
     54e:	a4 01       	movw	r20, r8
     550:	93 01       	movw	r18, r6
     552:	0e 2c       	mov	r0, r14
     554:	04 c0       	rjmp	.+8      	; 0x55e <__divdi3+0x376>
     556:	22 0f       	add	r18, r18
     558:	33 1f       	adc	r19, r19
     55a:	44 1f       	adc	r20, r20
     55c:	55 1f       	adc	r21, r21
     55e:	0a 94       	dec	r0
     560:	d2 f7       	brpl	.-12     	; 0x556 <__divdi3+0x36e>
     562:	80 e2       	ldi	r24, 0x20	; 32
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	8e 19       	sub	r24, r14
     568:	9f 09       	sbc	r25, r15
     56a:	21 96       	adiw	r28, 0x01	; 1
     56c:	6c ac       	ldd	r6, Y+60	; 0x3c
     56e:	7d ac       	ldd	r7, Y+61	; 0x3d
     570:	8e ac       	ldd	r8, Y+62	; 0x3e
     572:	9f ac       	ldd	r9, Y+63	; 0x3f
     574:	21 97       	sbiw	r28, 0x01	; 1
     576:	04 c0       	rjmp	.+8      	; 0x580 <__divdi3+0x398>
     578:	96 94       	lsr	r9
     57a:	87 94       	ror	r8
     57c:	77 94       	ror	r7
     57e:	67 94       	ror	r6
     580:	8a 95       	dec	r24
     582:	d2 f7       	brpl	.-12     	; 0x578 <__divdi3+0x390>
     584:	62 2a       	or	r6, r18
     586:	73 2a       	or	r7, r19
     588:	84 2a       	or	r8, r20
     58a:	95 2a       	or	r9, r21
     58c:	21 96       	adiw	r28, 0x01	; 1
     58e:	ac ac       	ldd	r10, Y+60	; 0x3c
     590:	bd ac       	ldd	r11, Y+61	; 0x3d
     592:	ce ac       	ldd	r12, Y+62	; 0x3e
     594:	df ac       	ldd	r13, Y+63	; 0x3f
     596:	21 97       	sbiw	r28, 0x01	; 1
     598:	04 c0       	rjmp	.+8      	; 0x5a2 <__divdi3+0x3ba>
     59a:	aa 0c       	add	r10, r10
     59c:	bb 1c       	adc	r11, r11
     59e:	cc 1c       	adc	r12, r12
     5a0:	dd 1c       	adc	r13, r13
     5a2:	ea 94       	dec	r14
     5a4:	d2 f7       	brpl	.-12     	; 0x59a <__divdi3+0x3b2>
     5a6:	21 96       	adiw	r28, 0x01	; 1
     5a8:	ac ae       	std	Y+60, r10	; 0x3c
     5aa:	bd ae       	std	Y+61, r11	; 0x3d
     5ac:	ce ae       	std	Y+62, r12	; 0x3e
     5ae:	df ae       	std	Y+63, r13	; 0x3f
     5b0:	21 97       	sbiw	r28, 0x01	; 1
     5b2:	62 01       	movw	r12, r4
     5b4:	ee 24       	eor	r14, r14
     5b6:	ff 24       	eor	r15, r15
     5b8:	29 96       	adiw	r28, 0x09	; 9
     5ba:	cc ae       	std	Y+60, r12	; 0x3c
     5bc:	dd ae       	std	Y+61, r13	; 0x3d
     5be:	ee ae       	std	Y+62, r14	; 0x3e
     5c0:	ff ae       	std	Y+63, r15	; 0x3f
     5c2:	29 97       	sbiw	r28, 0x09	; 9
     5c4:	92 01       	movw	r18, r4
     5c6:	81 01       	movw	r16, r2
     5c8:	20 70       	andi	r18, 0x00	; 0
     5ca:	30 70       	andi	r19, 0x00	; 0
     5cc:	2d 96       	adiw	r28, 0x0d	; 13
     5ce:	0c af       	std	Y+60, r16	; 0x3c
     5d0:	1d af       	std	Y+61, r17	; 0x3d
     5d2:	2e af       	std	Y+62, r18	; 0x3e
     5d4:	3f af       	std	Y+63, r19	; 0x3f
     5d6:	2d 97       	sbiw	r28, 0x0d	; 13
     5d8:	c4 01       	movw	r24, r8
     5da:	b3 01       	movw	r22, r6
     5dc:	a7 01       	movw	r20, r14
     5de:	96 01       	movw	r18, r12
     5e0:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
     5e4:	7b 01       	movw	r14, r22
     5e6:	8c 01       	movw	r16, r24
     5e8:	c4 01       	movw	r24, r8
     5ea:	b3 01       	movw	r22, r6
     5ec:	29 96       	adiw	r28, 0x09	; 9
     5ee:	2c ad       	ldd	r18, Y+60	; 0x3c
     5f0:	3d ad       	ldd	r19, Y+61	; 0x3d
     5f2:	4e ad       	ldd	r20, Y+62	; 0x3e
     5f4:	5f ad       	ldd	r21, Y+63	; 0x3f
     5f6:	29 97       	sbiw	r28, 0x09	; 9
     5f8:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
     5fc:	c9 01       	movw	r24, r18
     5fe:	da 01       	movw	r26, r20
     600:	3c 01       	movw	r6, r24
     602:	4d 01       	movw	r8, r26
     604:	c4 01       	movw	r24, r8
     606:	b3 01       	movw	r22, r6
     608:	2d 96       	adiw	r28, 0x0d	; 13
     60a:	2c ad       	ldd	r18, Y+60	; 0x3c
     60c:	3d ad       	ldd	r19, Y+61	; 0x3d
     60e:	4e ad       	ldd	r20, Y+62	; 0x3e
     610:	5f ad       	ldd	r21, Y+63	; 0x3f
     612:	2d 97       	sbiw	r28, 0x0d	; 13
     614:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
     618:	9b 01       	movw	r18, r22
     61a:	ac 01       	movw	r20, r24
     61c:	87 01       	movw	r16, r14
     61e:	ff 24       	eor	r15, r15
     620:	ee 24       	eor	r14, r14
     622:	21 96       	adiw	r28, 0x01	; 1
     624:	ac ac       	ldd	r10, Y+60	; 0x3c
     626:	bd ac       	ldd	r11, Y+61	; 0x3d
     628:	ce ac       	ldd	r12, Y+62	; 0x3e
     62a:	df ac       	ldd	r13, Y+63	; 0x3f
     62c:	21 97       	sbiw	r28, 0x01	; 1
     62e:	c6 01       	movw	r24, r12
     630:	aa 27       	eor	r26, r26
     632:	bb 27       	eor	r27, r27
     634:	57 01       	movw	r10, r14
     636:	68 01       	movw	r12, r16
     638:	a8 2a       	or	r10, r24
     63a:	b9 2a       	or	r11, r25
     63c:	ca 2a       	or	r12, r26
     63e:	db 2a       	or	r13, r27
     640:	a2 16       	cp	r10, r18
     642:	b3 06       	cpc	r11, r19
     644:	c4 06       	cpc	r12, r20
     646:	d5 06       	cpc	r13, r21
     648:	e0 f4       	brcc	.+56     	; 0x682 <__divdi3+0x49a>
     64a:	08 94       	sec
     64c:	61 08       	sbc	r6, r1
     64e:	71 08       	sbc	r7, r1
     650:	81 08       	sbc	r8, r1
     652:	91 08       	sbc	r9, r1
     654:	a2 0c       	add	r10, r2
     656:	b3 1c       	adc	r11, r3
     658:	c4 1c       	adc	r12, r4
     65a:	d5 1c       	adc	r13, r5
     65c:	a2 14       	cp	r10, r2
     65e:	b3 04       	cpc	r11, r3
     660:	c4 04       	cpc	r12, r4
     662:	d5 04       	cpc	r13, r5
     664:	70 f0       	brcs	.+28     	; 0x682 <__divdi3+0x49a>
     666:	a2 16       	cp	r10, r18
     668:	b3 06       	cpc	r11, r19
     66a:	c4 06       	cpc	r12, r20
     66c:	d5 06       	cpc	r13, r21
     66e:	48 f4       	brcc	.+18     	; 0x682 <__divdi3+0x49a>
     670:	08 94       	sec
     672:	61 08       	sbc	r6, r1
     674:	71 08       	sbc	r7, r1
     676:	81 08       	sbc	r8, r1
     678:	91 08       	sbc	r9, r1
     67a:	a2 0c       	add	r10, r2
     67c:	b3 1c       	adc	r11, r3
     67e:	c4 1c       	adc	r12, r4
     680:	d5 1c       	adc	r13, r5
     682:	a2 1a       	sub	r10, r18
     684:	b3 0a       	sbc	r11, r19
     686:	c4 0a       	sbc	r12, r20
     688:	d5 0a       	sbc	r13, r21
     68a:	c6 01       	movw	r24, r12
     68c:	b5 01       	movw	r22, r10
     68e:	29 96       	adiw	r28, 0x09	; 9
     690:	2c ad       	ldd	r18, Y+60	; 0x3c
     692:	3d ad       	ldd	r19, Y+61	; 0x3d
     694:	4e ad       	ldd	r20, Y+62	; 0x3e
     696:	5f ad       	ldd	r21, Y+63	; 0x3f
     698:	29 97       	sbiw	r28, 0x09	; 9
     69a:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
     69e:	7b 01       	movw	r14, r22
     6a0:	8c 01       	movw	r16, r24
     6a2:	c6 01       	movw	r24, r12
     6a4:	b5 01       	movw	r22, r10
     6a6:	29 96       	adiw	r28, 0x09	; 9
     6a8:	2c ad       	ldd	r18, Y+60	; 0x3c
     6aa:	3d ad       	ldd	r19, Y+61	; 0x3d
     6ac:	4e ad       	ldd	r20, Y+62	; 0x3e
     6ae:	5f ad       	ldd	r21, Y+63	; 0x3f
     6b0:	29 97       	sbiw	r28, 0x09	; 9
     6b2:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
     6b6:	c9 01       	movw	r24, r18
     6b8:	da 01       	movw	r26, r20
     6ba:	5c 01       	movw	r10, r24
     6bc:	6d 01       	movw	r12, r26
     6be:	c6 01       	movw	r24, r12
     6c0:	b5 01       	movw	r22, r10
     6c2:	2d 96       	adiw	r28, 0x0d	; 13
     6c4:	2c ad       	ldd	r18, Y+60	; 0x3c
     6c6:	3d ad       	ldd	r19, Y+61	; 0x3d
     6c8:	4e ad       	ldd	r20, Y+62	; 0x3e
     6ca:	5f ad       	ldd	r21, Y+63	; 0x3f
     6cc:	2d 97       	sbiw	r28, 0x0d	; 13
     6ce:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
     6d2:	9b 01       	movw	r18, r22
     6d4:	ac 01       	movw	r20, r24
     6d6:	87 01       	movw	r16, r14
     6d8:	ff 24       	eor	r15, r15
     6da:	ee 24       	eor	r14, r14
     6dc:	21 96       	adiw	r28, 0x01	; 1
     6de:	8c ad       	ldd	r24, Y+60	; 0x3c
     6e0:	9d ad       	ldd	r25, Y+61	; 0x3d
     6e2:	ae ad       	ldd	r26, Y+62	; 0x3e
     6e4:	bf ad       	ldd	r27, Y+63	; 0x3f
     6e6:	21 97       	sbiw	r28, 0x01	; 1
     6e8:	a0 70       	andi	r26, 0x00	; 0
     6ea:	b0 70       	andi	r27, 0x00	; 0
     6ec:	e8 2a       	or	r14, r24
     6ee:	f9 2a       	or	r15, r25
     6f0:	0a 2b       	or	r16, r26
     6f2:	1b 2b       	or	r17, r27
     6f4:	e2 16       	cp	r14, r18
     6f6:	f3 06       	cpc	r15, r19
     6f8:	04 07       	cpc	r16, r20
     6fa:	15 07       	cpc	r17, r21
     6fc:	c0 f4       	brcc	.+48     	; 0x72e <__divdi3+0x546>
     6fe:	08 94       	sec
     700:	a1 08       	sbc	r10, r1
     702:	b1 08       	sbc	r11, r1
     704:	c1 08       	sbc	r12, r1
     706:	d1 08       	sbc	r13, r1
     708:	e2 0c       	add	r14, r2
     70a:	f3 1c       	adc	r15, r3
     70c:	04 1d       	adc	r16, r4
     70e:	15 1d       	adc	r17, r5
     710:	e2 14       	cp	r14, r2
     712:	f3 04       	cpc	r15, r3
     714:	04 05       	cpc	r16, r4
     716:	15 05       	cpc	r17, r5
     718:	50 f0       	brcs	.+20     	; 0x72e <__divdi3+0x546>
     71a:	e2 16       	cp	r14, r18
     71c:	f3 06       	cpc	r15, r19
     71e:	04 07       	cpc	r16, r20
     720:	15 07       	cpc	r17, r21
     722:	28 f4       	brcc	.+10     	; 0x72e <__divdi3+0x546>
     724:	08 94       	sec
     726:	a1 08       	sbc	r10, r1
     728:	b1 08       	sbc	r11, r1
     72a:	c1 08       	sbc	r12, r1
     72c:	d1 08       	sbc	r13, r1
     72e:	d3 01       	movw	r26, r6
     730:	99 27       	eor	r25, r25
     732:	88 27       	eor	r24, r24
     734:	86 01       	movw	r16, r12
     736:	75 01       	movw	r14, r10
     738:	e8 2a       	or	r14, r24
     73a:	f9 2a       	or	r15, r25
     73c:	0a 2b       	or	r16, r26
     73e:	1b 2b       	or	r17, r27
     740:	25 96       	adiw	r28, 0x05	; 5
     742:	ec ae       	std	Y+60, r14	; 0x3c
     744:	fd ae       	std	Y+61, r15	; 0x3d
     746:	0e af       	std	Y+62, r16	; 0x3e
     748:	1f af       	std	Y+63, r17	; 0x3f
     74a:	25 97       	sbiw	r28, 0x05	; 5
     74c:	eb c4       	rjmp	.+2518   	; 0x1124 <__stack+0x8c5>
     74e:	21 14       	cp	r2, r1
     750:	31 04       	cpc	r3, r1
     752:	41 04       	cpc	r4, r1
     754:	51 04       	cpc	r5, r1
     756:	71 f4       	brne	.+28     	; 0x774 <__divdi3+0x58c>
     758:	61 e0       	ldi	r22, 0x01	; 1
     75a:	70 e0       	ldi	r23, 0x00	; 0
     75c:	80 e0       	ldi	r24, 0x00	; 0
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	20 e0       	ldi	r18, 0x00	; 0
     762:	30 e0       	ldi	r19, 0x00	; 0
     764:	40 e0       	ldi	r20, 0x00	; 0
     766:	50 e0       	ldi	r21, 0x00	; 0
     768:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
     76c:	c9 01       	movw	r24, r18
     76e:	da 01       	movw	r26, r20
     770:	1c 01       	movw	r2, r24
     772:	2d 01       	movw	r4, r26
     774:	00 e0       	ldi	r16, 0x00	; 0
     776:	20 16       	cp	r2, r16
     778:	00 e0       	ldi	r16, 0x00	; 0
     77a:	30 06       	cpc	r3, r16
     77c:	01 e0       	ldi	r16, 0x01	; 1
     77e:	40 06       	cpc	r4, r16
     780:	00 e0       	ldi	r16, 0x00	; 0
     782:	50 06       	cpc	r5, r16
     784:	88 f4       	brcc	.+34     	; 0x7a8 <__divdi3+0x5c0>
     786:	1f ef       	ldi	r17, 0xFF	; 255
     788:	21 16       	cp	r2, r17
     78a:	31 04       	cpc	r3, r1
     78c:	41 04       	cpc	r4, r1
     78e:	51 04       	cpc	r5, r1
     790:	31 f0       	breq	.+12     	; 0x79e <__divdi3+0x5b6>
     792:	28 f0       	brcs	.+10     	; 0x79e <__divdi3+0x5b6>
     794:	48 e0       	ldi	r20, 0x08	; 8
     796:	50 e0       	ldi	r21, 0x00	; 0
     798:	60 e0       	ldi	r22, 0x00	; 0
     79a:	70 e0       	ldi	r23, 0x00	; 0
     79c:	17 c0       	rjmp	.+46     	; 0x7cc <__divdi3+0x5e4>
     79e:	40 e0       	ldi	r20, 0x00	; 0
     7a0:	50 e0       	ldi	r21, 0x00	; 0
     7a2:	60 e0       	ldi	r22, 0x00	; 0
     7a4:	70 e0       	ldi	r23, 0x00	; 0
     7a6:	12 c0       	rjmp	.+36     	; 0x7cc <__divdi3+0x5e4>
     7a8:	20 e0       	ldi	r18, 0x00	; 0
     7aa:	22 16       	cp	r2, r18
     7ac:	20 e0       	ldi	r18, 0x00	; 0
     7ae:	32 06       	cpc	r3, r18
     7b0:	20 e0       	ldi	r18, 0x00	; 0
     7b2:	42 06       	cpc	r4, r18
     7b4:	21 e0       	ldi	r18, 0x01	; 1
     7b6:	52 06       	cpc	r5, r18
     7b8:	28 f0       	brcs	.+10     	; 0x7c4 <__divdi3+0x5dc>
     7ba:	48 e1       	ldi	r20, 0x18	; 24
     7bc:	50 e0       	ldi	r21, 0x00	; 0
     7be:	60 e0       	ldi	r22, 0x00	; 0
     7c0:	70 e0       	ldi	r23, 0x00	; 0
     7c2:	04 c0       	rjmp	.+8      	; 0x7cc <__divdi3+0x5e4>
     7c4:	40 e1       	ldi	r20, 0x10	; 16
     7c6:	50 e0       	ldi	r21, 0x00	; 0
     7c8:	60 e0       	ldi	r22, 0x00	; 0
     7ca:	70 e0       	ldi	r23, 0x00	; 0
     7cc:	d2 01       	movw	r26, r4
     7ce:	c1 01       	movw	r24, r2
     7d0:	04 2e       	mov	r0, r20
     7d2:	04 c0       	rjmp	.+8      	; 0x7dc <__divdi3+0x5f4>
     7d4:	b6 95       	lsr	r27
     7d6:	a7 95       	ror	r26
     7d8:	97 95       	ror	r25
     7da:	87 95       	ror	r24
     7dc:	0a 94       	dec	r0
     7de:	d2 f7       	brpl	.-12     	; 0x7d4 <__divdi3+0x5ec>
     7e0:	8b 51       	subi	r24, 0x1B	; 27
     7e2:	9f 4f       	sbci	r25, 0xFF	; 255
     7e4:	dc 01       	movw	r26, r24
     7e6:	2c 91       	ld	r18, X
     7e8:	e0 e2       	ldi	r30, 0x20	; 32
     7ea:	ee 2e       	mov	r14, r30
     7ec:	f1 2c       	mov	r15, r1
     7ee:	01 2d       	mov	r16, r1
     7f0:	11 2d       	mov	r17, r1
     7f2:	d8 01       	movw	r26, r16
     7f4:	c7 01       	movw	r24, r14
     7f6:	84 1b       	sub	r24, r20
     7f8:	95 0b       	sbc	r25, r21
     7fa:	a6 0b       	sbc	r26, r22
     7fc:	b7 0b       	sbc	r27, r23
     7fe:	82 1b       	sub	r24, r18
     800:	91 09       	sbc	r25, r1
     802:	a1 09       	sbc	r26, r1
     804:	b1 09       	sbc	r27, r1
     806:	00 97       	sbiw	r24, 0x00	; 0
     808:	a1 05       	cpc	r26, r1
     80a:	b1 05       	cpc	r27, r1
     80c:	61 f4       	brne	.+24     	; 0x826 <__divdi3+0x63e>
     80e:	64 01       	movw	r12, r8
     810:	53 01       	movw	r10, r6
     812:	a2 18       	sub	r10, r2
     814:	b3 08       	sbc	r11, r3
     816:	c4 08       	sbc	r12, r4
     818:	d5 08       	sbc	r13, r5
     81a:	31 e0       	ldi	r19, 0x01	; 1
     81c:	63 2e       	mov	r6, r19
     81e:	71 2c       	mov	r7, r1
     820:	81 2c       	mov	r8, r1
     822:	91 2c       	mov	r9, r1
     824:	24 c1       	rjmp	.+584    	; 0xa6e <__stack+0x20f>
     826:	e3 96       	adiw	r28, 0x33	; 51
     828:	8f af       	std	Y+63, r24	; 0x3f
     82a:	e3 97       	sbiw	r28, 0x33	; 51
     82c:	08 2e       	mov	r0, r24
     82e:	04 c0       	rjmp	.+8      	; 0x838 <__divdi3+0x650>
     830:	22 0c       	add	r2, r2
     832:	33 1c       	adc	r3, r3
     834:	44 1c       	adc	r4, r4
     836:	55 1c       	adc	r5, r5
     838:	0a 94       	dec	r0
     83a:	d2 f7       	brpl	.-12     	; 0x830 <__divdi3+0x648>
     83c:	ee 2d       	mov	r30, r14
     83e:	e8 1b       	sub	r30, r24
     840:	64 01       	movw	r12, r8
     842:	53 01       	movw	r10, r6
     844:	0e 2e       	mov	r0, r30
     846:	04 c0       	rjmp	.+8      	; 0x850 <__divdi3+0x668>
     848:	d6 94       	lsr	r13
     84a:	c7 94       	ror	r12
     84c:	b7 94       	ror	r11
     84e:	a7 94       	ror	r10
     850:	0a 94       	dec	r0
     852:	d2 f7       	brpl	.-12     	; 0x848 <__divdi3+0x660>
     854:	a4 01       	movw	r20, r8
     856:	93 01       	movw	r18, r6
     858:	e3 96       	adiw	r28, 0x33	; 51
     85a:	0f ac       	ldd	r0, Y+63	; 0x3f
     85c:	e3 97       	sbiw	r28, 0x33	; 51
     85e:	04 c0       	rjmp	.+8      	; 0x868 <__stack+0x9>
     860:	22 0f       	add	r18, r18
     862:	33 1f       	adc	r19, r19
     864:	44 1f       	adc	r20, r20
     866:	55 1f       	adc	r21, r21
     868:	0a 94       	dec	r0
     86a:	d2 f7       	brpl	.-12     	; 0x860 <__stack+0x1>
     86c:	21 96       	adiw	r28, 0x01	; 1
     86e:	6c ac       	ldd	r6, Y+60	; 0x3c
     870:	7d ac       	ldd	r7, Y+61	; 0x3d
     872:	8e ac       	ldd	r8, Y+62	; 0x3e
     874:	9f ac       	ldd	r9, Y+63	; 0x3f
     876:	21 97       	sbiw	r28, 0x01	; 1
     878:	0e 2e       	mov	r0, r30
     87a:	04 c0       	rjmp	.+8      	; 0x884 <__stack+0x25>
     87c:	96 94       	lsr	r9
     87e:	87 94       	ror	r8
     880:	77 94       	ror	r7
     882:	67 94       	ror	r6
     884:	0a 94       	dec	r0
     886:	d2 f7       	brpl	.-12     	; 0x87c <__stack+0x1d>
     888:	84 01       	movw	r16, r8
     88a:	73 01       	movw	r14, r6
     88c:	e2 2a       	or	r14, r18
     88e:	f3 2a       	or	r15, r19
     890:	04 2b       	or	r16, r20
     892:	15 2b       	or	r17, r21
     894:	e9 ae       	std	Y+57, r14	; 0x39
     896:	fa ae       	std	Y+58, r15	; 0x3a
     898:	0b af       	std	Y+59, r16	; 0x3b
     89a:	1c af       	std	Y+60, r17	; 0x3c
     89c:	32 01       	movw	r6, r4
     89e:	88 24       	eor	r8, r8
     8a0:	99 24       	eor	r9, r9
     8a2:	92 01       	movw	r18, r4
     8a4:	81 01       	movw	r16, r2
     8a6:	20 70       	andi	r18, 0x00	; 0
     8a8:	30 70       	andi	r19, 0x00	; 0
     8aa:	61 96       	adiw	r28, 0x11	; 17
     8ac:	0c af       	std	Y+60, r16	; 0x3c
     8ae:	1d af       	std	Y+61, r17	; 0x3d
     8b0:	2e af       	std	Y+62, r18	; 0x3e
     8b2:	3f af       	std	Y+63, r19	; 0x3f
     8b4:	61 97       	sbiw	r28, 0x11	; 17
     8b6:	c6 01       	movw	r24, r12
     8b8:	b5 01       	movw	r22, r10
     8ba:	a4 01       	movw	r20, r8
     8bc:	93 01       	movw	r18, r6
     8be:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
     8c2:	7b 01       	movw	r14, r22
     8c4:	8c 01       	movw	r16, r24
     8c6:	c6 01       	movw	r24, r12
     8c8:	b5 01       	movw	r22, r10
     8ca:	a4 01       	movw	r20, r8
     8cc:	93 01       	movw	r18, r6
     8ce:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
     8d2:	c9 01       	movw	r24, r18
     8d4:	da 01       	movw	r26, r20
     8d6:	65 96       	adiw	r28, 0x15	; 21
     8d8:	8c af       	std	Y+60, r24	; 0x3c
     8da:	9d af       	std	Y+61, r25	; 0x3d
     8dc:	ae af       	std	Y+62, r26	; 0x3e
     8de:	bf af       	std	Y+63, r27	; 0x3f
     8e0:	65 97       	sbiw	r28, 0x15	; 21
     8e2:	bc 01       	movw	r22, r24
     8e4:	cd 01       	movw	r24, r26
     8e6:	61 96       	adiw	r28, 0x11	; 17
     8e8:	2c ad       	ldd	r18, Y+60	; 0x3c
     8ea:	3d ad       	ldd	r19, Y+61	; 0x3d
     8ec:	4e ad       	ldd	r20, Y+62	; 0x3e
     8ee:	5f ad       	ldd	r21, Y+63	; 0x3f
     8f0:	61 97       	sbiw	r28, 0x11	; 17
     8f2:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
     8f6:	9b 01       	movw	r18, r22
     8f8:	ac 01       	movw	r20, r24
     8fa:	87 01       	movw	r16, r14
     8fc:	ff 24       	eor	r15, r15
     8fe:	ee 24       	eor	r14, r14
     900:	a9 ac       	ldd	r10, Y+57	; 0x39
     902:	ba ac       	ldd	r11, Y+58	; 0x3a
     904:	cb ac       	ldd	r12, Y+59	; 0x3b
     906:	dc ac       	ldd	r13, Y+60	; 0x3c
     908:	c6 01       	movw	r24, r12
     90a:	aa 27       	eor	r26, r26
     90c:	bb 27       	eor	r27, r27
     90e:	5c 01       	movw	r10, r24
     910:	6d 01       	movw	r12, r26
     912:	ae 28       	or	r10, r14
     914:	bf 28       	or	r11, r15
     916:	c0 2a       	or	r12, r16
     918:	d1 2a       	or	r13, r17
     91a:	a2 16       	cp	r10, r18
     91c:	b3 06       	cpc	r11, r19
     91e:	c4 06       	cpc	r12, r20
     920:	d5 06       	cpc	r13, r21
     922:	60 f5       	brcc	.+88     	; 0x97c <__stack+0x11d>
     924:	65 96       	adiw	r28, 0x15	; 21
     926:	6c ad       	ldd	r22, Y+60	; 0x3c
     928:	7d ad       	ldd	r23, Y+61	; 0x3d
     92a:	8e ad       	ldd	r24, Y+62	; 0x3e
     92c:	9f ad       	ldd	r25, Y+63	; 0x3f
     92e:	65 97       	sbiw	r28, 0x15	; 21
     930:	61 50       	subi	r22, 0x01	; 1
     932:	70 40       	sbci	r23, 0x00	; 0
     934:	80 40       	sbci	r24, 0x00	; 0
     936:	90 40       	sbci	r25, 0x00	; 0
     938:	65 96       	adiw	r28, 0x15	; 21
     93a:	6c af       	std	Y+60, r22	; 0x3c
     93c:	7d af       	std	Y+61, r23	; 0x3d
     93e:	8e af       	std	Y+62, r24	; 0x3e
     940:	9f af       	std	Y+63, r25	; 0x3f
     942:	65 97       	sbiw	r28, 0x15	; 21
     944:	a2 0c       	add	r10, r2
     946:	b3 1c       	adc	r11, r3
     948:	c4 1c       	adc	r12, r4
     94a:	d5 1c       	adc	r13, r5
     94c:	a2 14       	cp	r10, r2
     94e:	b3 04       	cpc	r11, r3
     950:	c4 04       	cpc	r12, r4
     952:	d5 04       	cpc	r13, r5
     954:	98 f0       	brcs	.+38     	; 0x97c <__stack+0x11d>
     956:	a2 16       	cp	r10, r18
     958:	b3 06       	cpc	r11, r19
     95a:	c4 06       	cpc	r12, r20
     95c:	d5 06       	cpc	r13, r21
     95e:	70 f4       	brcc	.+28     	; 0x97c <__stack+0x11d>
     960:	61 50       	subi	r22, 0x01	; 1
     962:	70 40       	sbci	r23, 0x00	; 0
     964:	80 40       	sbci	r24, 0x00	; 0
     966:	90 40       	sbci	r25, 0x00	; 0
     968:	65 96       	adiw	r28, 0x15	; 21
     96a:	6c af       	std	Y+60, r22	; 0x3c
     96c:	7d af       	std	Y+61, r23	; 0x3d
     96e:	8e af       	std	Y+62, r24	; 0x3e
     970:	9f af       	std	Y+63, r25	; 0x3f
     972:	65 97       	sbiw	r28, 0x15	; 21
     974:	a2 0c       	add	r10, r2
     976:	b3 1c       	adc	r11, r3
     978:	c4 1c       	adc	r12, r4
     97a:	d5 1c       	adc	r13, r5
     97c:	a2 1a       	sub	r10, r18
     97e:	b3 0a       	sbc	r11, r19
     980:	c4 0a       	sbc	r12, r20
     982:	d5 0a       	sbc	r13, r21
     984:	c6 01       	movw	r24, r12
     986:	b5 01       	movw	r22, r10
     988:	a4 01       	movw	r20, r8
     98a:	93 01       	movw	r18, r6
     98c:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
     990:	7b 01       	movw	r14, r22
     992:	8c 01       	movw	r16, r24
     994:	c6 01       	movw	r24, r12
     996:	b5 01       	movw	r22, r10
     998:	a4 01       	movw	r20, r8
     99a:	93 01       	movw	r18, r6
     99c:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
     9a0:	c9 01       	movw	r24, r18
     9a2:	da 01       	movw	r26, r20
     9a4:	3c 01       	movw	r6, r24
     9a6:	4d 01       	movw	r8, r26
     9a8:	c4 01       	movw	r24, r8
     9aa:	b3 01       	movw	r22, r6
     9ac:	61 96       	adiw	r28, 0x11	; 17
     9ae:	2c ad       	ldd	r18, Y+60	; 0x3c
     9b0:	3d ad       	ldd	r19, Y+61	; 0x3d
     9b2:	4e ad       	ldd	r20, Y+62	; 0x3e
     9b4:	5f ad       	ldd	r21, Y+63	; 0x3f
     9b6:	61 97       	sbiw	r28, 0x11	; 17
     9b8:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
     9bc:	9b 01       	movw	r18, r22
     9be:	ac 01       	movw	r20, r24
     9c0:	87 01       	movw	r16, r14
     9c2:	ff 24       	eor	r15, r15
     9c4:	ee 24       	eor	r14, r14
     9c6:	89 ad       	ldd	r24, Y+57	; 0x39
     9c8:	9a ad       	ldd	r25, Y+58	; 0x3a
     9ca:	ab ad       	ldd	r26, Y+59	; 0x3b
     9cc:	bc ad       	ldd	r27, Y+60	; 0x3c
     9ce:	a0 70       	andi	r26, 0x00	; 0
     9d0:	b0 70       	andi	r27, 0x00	; 0
     9d2:	57 01       	movw	r10, r14
     9d4:	68 01       	movw	r12, r16
     9d6:	a8 2a       	or	r10, r24
     9d8:	b9 2a       	or	r11, r25
     9da:	ca 2a       	or	r12, r26
     9dc:	db 2a       	or	r13, r27
     9de:	a2 16       	cp	r10, r18
     9e0:	b3 06       	cpc	r11, r19
     9e2:	c4 06       	cpc	r12, r20
     9e4:	d5 06       	cpc	r13, r21
     9e6:	e0 f4       	brcc	.+56     	; 0xa20 <__stack+0x1c1>
     9e8:	08 94       	sec
     9ea:	61 08       	sbc	r6, r1
     9ec:	71 08       	sbc	r7, r1
     9ee:	81 08       	sbc	r8, r1
     9f0:	91 08       	sbc	r9, r1
     9f2:	a2 0c       	add	r10, r2
     9f4:	b3 1c       	adc	r11, r3
     9f6:	c4 1c       	adc	r12, r4
     9f8:	d5 1c       	adc	r13, r5
     9fa:	a2 14       	cp	r10, r2
     9fc:	b3 04       	cpc	r11, r3
     9fe:	c4 04       	cpc	r12, r4
     a00:	d5 04       	cpc	r13, r5
     a02:	70 f0       	brcs	.+28     	; 0xa20 <__stack+0x1c1>
     a04:	a2 16       	cp	r10, r18
     a06:	b3 06       	cpc	r11, r19
     a08:	c4 06       	cpc	r12, r20
     a0a:	d5 06       	cpc	r13, r21
     a0c:	48 f4       	brcc	.+18     	; 0xa20 <__stack+0x1c1>
     a0e:	08 94       	sec
     a10:	61 08       	sbc	r6, r1
     a12:	71 08       	sbc	r7, r1
     a14:	81 08       	sbc	r8, r1
     a16:	91 08       	sbc	r9, r1
     a18:	a2 0c       	add	r10, r2
     a1a:	b3 1c       	adc	r11, r3
     a1c:	c4 1c       	adc	r12, r4
     a1e:	d5 1c       	adc	r13, r5
     a20:	21 96       	adiw	r28, 0x01	; 1
     a22:	8c ad       	ldd	r24, Y+60	; 0x3c
     a24:	9d ad       	ldd	r25, Y+61	; 0x3d
     a26:	ae ad       	ldd	r26, Y+62	; 0x3e
     a28:	bf ad       	ldd	r27, Y+63	; 0x3f
     a2a:	21 97       	sbiw	r28, 0x01	; 1
     a2c:	e3 96       	adiw	r28, 0x33	; 51
     a2e:	0f ac       	ldd	r0, Y+63	; 0x3f
     a30:	e3 97       	sbiw	r28, 0x33	; 51
     a32:	04 c0       	rjmp	.+8      	; 0xa3c <__stack+0x1dd>
     a34:	88 0f       	add	r24, r24
     a36:	99 1f       	adc	r25, r25
     a38:	aa 1f       	adc	r26, r26
     a3a:	bb 1f       	adc	r27, r27
     a3c:	0a 94       	dec	r0
     a3e:	d2 f7       	brpl	.-12     	; 0xa34 <__stack+0x1d5>
     a40:	21 96       	adiw	r28, 0x01	; 1
     a42:	8c af       	std	Y+60, r24	; 0x3c
     a44:	9d af       	std	Y+61, r25	; 0x3d
     a46:	ae af       	std	Y+62, r26	; 0x3e
     a48:	bf af       	std	Y+63, r27	; 0x3f
     a4a:	21 97       	sbiw	r28, 0x01	; 1
     a4c:	a2 1a       	sub	r10, r18
     a4e:	b3 0a       	sbc	r11, r19
     a50:	c4 0a       	sbc	r12, r20
     a52:	d5 0a       	sbc	r13, r21
     a54:	65 96       	adiw	r28, 0x15	; 21
     a56:	ec ac       	ldd	r14, Y+60	; 0x3c
     a58:	fd ac       	ldd	r15, Y+61	; 0x3d
     a5a:	0e ad       	ldd	r16, Y+62	; 0x3e
     a5c:	1f ad       	ldd	r17, Y+63	; 0x3f
     a5e:	65 97       	sbiw	r28, 0x15	; 21
     a60:	d7 01       	movw	r26, r14
     a62:	99 27       	eor	r25, r25
     a64:	88 27       	eor	r24, r24
     a66:	68 2a       	or	r6, r24
     a68:	79 2a       	or	r7, r25
     a6a:	8a 2a       	or	r8, r26
     a6c:	9b 2a       	or	r9, r27
     a6e:	82 01       	movw	r16, r4
     a70:	22 27       	eor	r18, r18
     a72:	33 27       	eor	r19, r19
     a74:	69 96       	adiw	r28, 0x19	; 25
     a76:	0c af       	std	Y+60, r16	; 0x3c
     a78:	1d af       	std	Y+61, r17	; 0x3d
     a7a:	2e af       	std	Y+62, r18	; 0x3e
     a7c:	3f af       	std	Y+63, r19	; 0x3f
     a7e:	69 97       	sbiw	r28, 0x19	; 25
     a80:	a2 01       	movw	r20, r4
     a82:	91 01       	movw	r18, r2
     a84:	40 70       	andi	r20, 0x00	; 0
     a86:	50 70       	andi	r21, 0x00	; 0
     a88:	6d 96       	adiw	r28, 0x1d	; 29
     a8a:	2c af       	std	Y+60, r18	; 0x3c
     a8c:	3d af       	std	Y+61, r19	; 0x3d
     a8e:	4e af       	std	Y+62, r20	; 0x3e
     a90:	5f af       	std	Y+63, r21	; 0x3f
     a92:	6d 97       	sbiw	r28, 0x1d	; 29
     a94:	c6 01       	movw	r24, r12
     a96:	b5 01       	movw	r22, r10
     a98:	69 96       	adiw	r28, 0x19	; 25
     a9a:	2c ad       	ldd	r18, Y+60	; 0x3c
     a9c:	3d ad       	ldd	r19, Y+61	; 0x3d
     a9e:	4e ad       	ldd	r20, Y+62	; 0x3e
     aa0:	5f ad       	ldd	r21, Y+63	; 0x3f
     aa2:	69 97       	sbiw	r28, 0x19	; 25
     aa4:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
     aa8:	7b 01       	movw	r14, r22
     aaa:	8c 01       	movw	r16, r24
     aac:	c6 01       	movw	r24, r12
     aae:	b5 01       	movw	r22, r10
     ab0:	69 96       	adiw	r28, 0x19	; 25
     ab2:	2c ad       	ldd	r18, Y+60	; 0x3c
     ab4:	3d ad       	ldd	r19, Y+61	; 0x3d
     ab6:	4e ad       	ldd	r20, Y+62	; 0x3e
     ab8:	5f ad       	ldd	r21, Y+63	; 0x3f
     aba:	69 97       	sbiw	r28, 0x19	; 25
     abc:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
     ac0:	c9 01       	movw	r24, r18
     ac2:	da 01       	movw	r26, r20
     ac4:	a1 96       	adiw	r28, 0x21	; 33
     ac6:	8c af       	std	Y+60, r24	; 0x3c
     ac8:	9d af       	std	Y+61, r25	; 0x3d
     aca:	ae af       	std	Y+62, r26	; 0x3e
     acc:	bf af       	std	Y+63, r27	; 0x3f
     ace:	a1 97       	sbiw	r28, 0x21	; 33
     ad0:	bc 01       	movw	r22, r24
     ad2:	cd 01       	movw	r24, r26
     ad4:	6d 96       	adiw	r28, 0x1d	; 29
     ad6:	2c ad       	ldd	r18, Y+60	; 0x3c
     ad8:	3d ad       	ldd	r19, Y+61	; 0x3d
     ada:	4e ad       	ldd	r20, Y+62	; 0x3e
     adc:	5f ad       	ldd	r21, Y+63	; 0x3f
     ade:	6d 97       	sbiw	r28, 0x1d	; 29
     ae0:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
     ae4:	9b 01       	movw	r18, r22
     ae6:	ac 01       	movw	r20, r24
     ae8:	87 01       	movw	r16, r14
     aea:	ff 24       	eor	r15, r15
     aec:	ee 24       	eor	r14, r14
     aee:	21 96       	adiw	r28, 0x01	; 1
     af0:	ac ac       	ldd	r10, Y+60	; 0x3c
     af2:	bd ac       	ldd	r11, Y+61	; 0x3d
     af4:	ce ac       	ldd	r12, Y+62	; 0x3e
     af6:	df ac       	ldd	r13, Y+63	; 0x3f
     af8:	21 97       	sbiw	r28, 0x01	; 1
     afa:	c6 01       	movw	r24, r12
     afc:	aa 27       	eor	r26, r26
     afe:	bb 27       	eor	r27, r27
     b00:	57 01       	movw	r10, r14
     b02:	68 01       	movw	r12, r16
     b04:	a8 2a       	or	r10, r24
     b06:	b9 2a       	or	r11, r25
     b08:	ca 2a       	or	r12, r26
     b0a:	db 2a       	or	r13, r27
     b0c:	a2 16       	cp	r10, r18
     b0e:	b3 06       	cpc	r11, r19
     b10:	c4 06       	cpc	r12, r20
     b12:	d5 06       	cpc	r13, r21
     b14:	60 f5       	brcc	.+88     	; 0xb6e <__stack+0x30f>
     b16:	a1 96       	adiw	r28, 0x21	; 33
     b18:	6c ad       	ldd	r22, Y+60	; 0x3c
     b1a:	7d ad       	ldd	r23, Y+61	; 0x3d
     b1c:	8e ad       	ldd	r24, Y+62	; 0x3e
     b1e:	9f ad       	ldd	r25, Y+63	; 0x3f
     b20:	a1 97       	sbiw	r28, 0x21	; 33
     b22:	61 50       	subi	r22, 0x01	; 1
     b24:	70 40       	sbci	r23, 0x00	; 0
     b26:	80 40       	sbci	r24, 0x00	; 0
     b28:	90 40       	sbci	r25, 0x00	; 0
     b2a:	a1 96       	adiw	r28, 0x21	; 33
     b2c:	6c af       	std	Y+60, r22	; 0x3c
     b2e:	7d af       	std	Y+61, r23	; 0x3d
     b30:	8e af       	std	Y+62, r24	; 0x3e
     b32:	9f af       	std	Y+63, r25	; 0x3f
     b34:	a1 97       	sbiw	r28, 0x21	; 33
     b36:	a2 0c       	add	r10, r2
     b38:	b3 1c       	adc	r11, r3
     b3a:	c4 1c       	adc	r12, r4
     b3c:	d5 1c       	adc	r13, r5
     b3e:	a2 14       	cp	r10, r2
     b40:	b3 04       	cpc	r11, r3
     b42:	c4 04       	cpc	r12, r4
     b44:	d5 04       	cpc	r13, r5
     b46:	98 f0       	brcs	.+38     	; 0xb6e <__stack+0x30f>
     b48:	a2 16       	cp	r10, r18
     b4a:	b3 06       	cpc	r11, r19
     b4c:	c4 06       	cpc	r12, r20
     b4e:	d5 06       	cpc	r13, r21
     b50:	70 f4       	brcc	.+28     	; 0xb6e <__stack+0x30f>
     b52:	61 50       	subi	r22, 0x01	; 1
     b54:	70 40       	sbci	r23, 0x00	; 0
     b56:	80 40       	sbci	r24, 0x00	; 0
     b58:	90 40       	sbci	r25, 0x00	; 0
     b5a:	a1 96       	adiw	r28, 0x21	; 33
     b5c:	6c af       	std	Y+60, r22	; 0x3c
     b5e:	7d af       	std	Y+61, r23	; 0x3d
     b60:	8e af       	std	Y+62, r24	; 0x3e
     b62:	9f af       	std	Y+63, r25	; 0x3f
     b64:	a1 97       	sbiw	r28, 0x21	; 33
     b66:	a2 0c       	add	r10, r2
     b68:	b3 1c       	adc	r11, r3
     b6a:	c4 1c       	adc	r12, r4
     b6c:	d5 1c       	adc	r13, r5
     b6e:	a2 1a       	sub	r10, r18
     b70:	b3 0a       	sbc	r11, r19
     b72:	c4 0a       	sbc	r12, r20
     b74:	d5 0a       	sbc	r13, r21
     b76:	c6 01       	movw	r24, r12
     b78:	b5 01       	movw	r22, r10
     b7a:	69 96       	adiw	r28, 0x19	; 25
     b7c:	2c ad       	ldd	r18, Y+60	; 0x3c
     b7e:	3d ad       	ldd	r19, Y+61	; 0x3d
     b80:	4e ad       	ldd	r20, Y+62	; 0x3e
     b82:	5f ad       	ldd	r21, Y+63	; 0x3f
     b84:	69 97       	sbiw	r28, 0x19	; 25
     b86:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
     b8a:	7b 01       	movw	r14, r22
     b8c:	8c 01       	movw	r16, r24
     b8e:	c6 01       	movw	r24, r12
     b90:	b5 01       	movw	r22, r10
     b92:	69 96       	adiw	r28, 0x19	; 25
     b94:	2c ad       	ldd	r18, Y+60	; 0x3c
     b96:	3d ad       	ldd	r19, Y+61	; 0x3d
     b98:	4e ad       	ldd	r20, Y+62	; 0x3e
     b9a:	5f ad       	ldd	r21, Y+63	; 0x3f
     b9c:	69 97       	sbiw	r28, 0x19	; 25
     b9e:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
     ba2:	c9 01       	movw	r24, r18
     ba4:	da 01       	movw	r26, r20
     ba6:	5c 01       	movw	r10, r24
     ba8:	6d 01       	movw	r12, r26
     baa:	c6 01       	movw	r24, r12
     bac:	b5 01       	movw	r22, r10
     bae:	6d 96       	adiw	r28, 0x1d	; 29
     bb0:	2c ad       	ldd	r18, Y+60	; 0x3c
     bb2:	3d ad       	ldd	r19, Y+61	; 0x3d
     bb4:	4e ad       	ldd	r20, Y+62	; 0x3e
     bb6:	5f ad       	ldd	r21, Y+63	; 0x3f
     bb8:	6d 97       	sbiw	r28, 0x1d	; 29
     bba:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
     bbe:	9b 01       	movw	r18, r22
     bc0:	ac 01       	movw	r20, r24
     bc2:	87 01       	movw	r16, r14
     bc4:	ff 24       	eor	r15, r15
     bc6:	ee 24       	eor	r14, r14
     bc8:	21 96       	adiw	r28, 0x01	; 1
     bca:	8c ad       	ldd	r24, Y+60	; 0x3c
     bcc:	9d ad       	ldd	r25, Y+61	; 0x3d
     bce:	ae ad       	ldd	r26, Y+62	; 0x3e
     bd0:	bf ad       	ldd	r27, Y+63	; 0x3f
     bd2:	21 97       	sbiw	r28, 0x01	; 1
     bd4:	a0 70       	andi	r26, 0x00	; 0
     bd6:	b0 70       	andi	r27, 0x00	; 0
     bd8:	e8 2a       	or	r14, r24
     bda:	f9 2a       	or	r15, r25
     bdc:	0a 2b       	or	r16, r26
     bde:	1b 2b       	or	r17, r27
     be0:	e2 16       	cp	r14, r18
     be2:	f3 06       	cpc	r15, r19
     be4:	04 07       	cpc	r16, r20
     be6:	15 07       	cpc	r17, r21
     be8:	c0 f4       	brcc	.+48     	; 0xc1a <__stack+0x3bb>
     bea:	08 94       	sec
     bec:	a1 08       	sbc	r10, r1
     bee:	b1 08       	sbc	r11, r1
     bf0:	c1 08       	sbc	r12, r1
     bf2:	d1 08       	sbc	r13, r1
     bf4:	e2 0c       	add	r14, r2
     bf6:	f3 1c       	adc	r15, r3
     bf8:	04 1d       	adc	r16, r4
     bfa:	15 1d       	adc	r17, r5
     bfc:	e2 14       	cp	r14, r2
     bfe:	f3 04       	cpc	r15, r3
     c00:	04 05       	cpc	r16, r4
     c02:	15 05       	cpc	r17, r5
     c04:	50 f0       	brcs	.+20     	; 0xc1a <__stack+0x3bb>
     c06:	e2 16       	cp	r14, r18
     c08:	f3 06       	cpc	r15, r19
     c0a:	04 07       	cpc	r16, r20
     c0c:	15 07       	cpc	r17, r21
     c0e:	28 f4       	brcc	.+10     	; 0xc1a <__stack+0x3bb>
     c10:	08 94       	sec
     c12:	a1 08       	sbc	r10, r1
     c14:	b1 08       	sbc	r11, r1
     c16:	c1 08       	sbc	r12, r1
     c18:	d1 08       	sbc	r13, r1
     c1a:	a1 96       	adiw	r28, 0x21	; 33
     c1c:	ec ac       	ldd	r14, Y+60	; 0x3c
     c1e:	fd ac       	ldd	r15, Y+61	; 0x3d
     c20:	0e ad       	ldd	r16, Y+62	; 0x3e
     c22:	1f ad       	ldd	r17, Y+63	; 0x3f
     c24:	a1 97       	sbiw	r28, 0x21	; 33
     c26:	d7 01       	movw	r26, r14
     c28:	99 27       	eor	r25, r25
     c2a:	88 27       	eor	r24, r24
     c2c:	96 01       	movw	r18, r12
     c2e:	85 01       	movw	r16, r10
     c30:	08 2b       	or	r16, r24
     c32:	19 2b       	or	r17, r25
     c34:	2a 2b       	or	r18, r26
     c36:	3b 2b       	or	r19, r27
     c38:	25 96       	adiw	r28, 0x05	; 5
     c3a:	0c af       	std	Y+60, r16	; 0x3c
     c3c:	1d af       	std	Y+61, r17	; 0x3d
     c3e:	2e af       	std	Y+62, r18	; 0x3e
     c40:	3f af       	std	Y+63, r19	; 0x3f
     c42:	25 97       	sbiw	r28, 0x05	; 5
     c44:	72 c2       	rjmp	.+1252   	; 0x112a <__stack+0x8cb>
     c46:	6e 14       	cp	r6, r14
     c48:	7f 04       	cpc	r7, r15
     c4a:	80 06       	cpc	r8, r16
     c4c:	91 06       	cpc	r9, r17
     c4e:	08 f4       	brcc	.+2      	; 0xc52 <__stack+0x3f3>
     c50:	5f c2       	rjmp	.+1214   	; 0x1110 <__stack+0x8b1>
     c52:	20 e0       	ldi	r18, 0x00	; 0
     c54:	e2 16       	cp	r14, r18
     c56:	20 e0       	ldi	r18, 0x00	; 0
     c58:	f2 06       	cpc	r15, r18
     c5a:	21 e0       	ldi	r18, 0x01	; 1
     c5c:	02 07       	cpc	r16, r18
     c5e:	20 e0       	ldi	r18, 0x00	; 0
     c60:	12 07       	cpc	r17, r18
     c62:	88 f4       	brcc	.+34     	; 0xc86 <__stack+0x427>
     c64:	3f ef       	ldi	r19, 0xFF	; 255
     c66:	e3 16       	cp	r14, r19
     c68:	f1 04       	cpc	r15, r1
     c6a:	01 05       	cpc	r16, r1
     c6c:	11 05       	cpc	r17, r1
     c6e:	31 f0       	breq	.+12     	; 0xc7c <__stack+0x41d>
     c70:	28 f0       	brcs	.+10     	; 0xc7c <__stack+0x41d>
     c72:	48 e0       	ldi	r20, 0x08	; 8
     c74:	50 e0       	ldi	r21, 0x00	; 0
     c76:	60 e0       	ldi	r22, 0x00	; 0
     c78:	70 e0       	ldi	r23, 0x00	; 0
     c7a:	17 c0       	rjmp	.+46     	; 0xcaa <__stack+0x44b>
     c7c:	40 e0       	ldi	r20, 0x00	; 0
     c7e:	50 e0       	ldi	r21, 0x00	; 0
     c80:	60 e0       	ldi	r22, 0x00	; 0
     c82:	70 e0       	ldi	r23, 0x00	; 0
     c84:	12 c0       	rjmp	.+36     	; 0xcaa <__stack+0x44b>
     c86:	40 e0       	ldi	r20, 0x00	; 0
     c88:	e4 16       	cp	r14, r20
     c8a:	40 e0       	ldi	r20, 0x00	; 0
     c8c:	f4 06       	cpc	r15, r20
     c8e:	40 e0       	ldi	r20, 0x00	; 0
     c90:	04 07       	cpc	r16, r20
     c92:	41 e0       	ldi	r20, 0x01	; 1
     c94:	14 07       	cpc	r17, r20
     c96:	28 f0       	brcs	.+10     	; 0xca2 <__stack+0x443>
     c98:	48 e1       	ldi	r20, 0x18	; 24
     c9a:	50 e0       	ldi	r21, 0x00	; 0
     c9c:	60 e0       	ldi	r22, 0x00	; 0
     c9e:	70 e0       	ldi	r23, 0x00	; 0
     ca0:	04 c0       	rjmp	.+8      	; 0xcaa <__stack+0x44b>
     ca2:	40 e1       	ldi	r20, 0x10	; 16
     ca4:	50 e0       	ldi	r21, 0x00	; 0
     ca6:	60 e0       	ldi	r22, 0x00	; 0
     ca8:	70 e0       	ldi	r23, 0x00	; 0
     caa:	d8 01       	movw	r26, r16
     cac:	c7 01       	movw	r24, r14
     cae:	04 2e       	mov	r0, r20
     cb0:	04 c0       	rjmp	.+8      	; 0xcba <__stack+0x45b>
     cb2:	b6 95       	lsr	r27
     cb4:	a7 95       	ror	r26
     cb6:	97 95       	ror	r25
     cb8:	87 95       	ror	r24
     cba:	0a 94       	dec	r0
     cbc:	d2 f7       	brpl	.-12     	; 0xcb2 <__stack+0x453>
     cbe:	8b 51       	subi	r24, 0x1B	; 27
     cc0:	9f 4f       	sbci	r25, 0xFF	; 255
     cc2:	dc 01       	movw	r26, r24
     cc4:	2c 91       	ld	r18, X
     cc6:	30 e2       	ldi	r19, 0x20	; 32
     cc8:	a3 2e       	mov	r10, r19
     cca:	b1 2c       	mov	r11, r1
     ccc:	c1 2c       	mov	r12, r1
     cce:	d1 2c       	mov	r13, r1
     cd0:	d6 01       	movw	r26, r12
     cd2:	c5 01       	movw	r24, r10
     cd4:	84 1b       	sub	r24, r20
     cd6:	95 0b       	sbc	r25, r21
     cd8:	a6 0b       	sbc	r26, r22
     cda:	b7 0b       	sbc	r27, r23
     cdc:	82 1b       	sub	r24, r18
     cde:	91 09       	sbc	r25, r1
     ce0:	a1 09       	sbc	r26, r1
     ce2:	b1 09       	sbc	r27, r1
     ce4:	00 97       	sbiw	r24, 0x00	; 0
     ce6:	a1 05       	cpc	r26, r1
     ce8:	b1 05       	cpc	r27, r1
     cea:	99 f4       	brne	.+38     	; 0xd12 <__stack+0x4b3>
     cec:	e6 14       	cp	r14, r6
     cee:	f7 04       	cpc	r15, r7
     cf0:	08 05       	cpc	r16, r8
     cf2:	19 05       	cpc	r17, r9
     cf4:	08 f4       	brcc	.+2      	; 0xcf8 <__stack+0x499>
     cf6:	fe c1       	rjmp	.+1020   	; 0x10f4 <__stack+0x895>
     cf8:	21 96       	adiw	r28, 0x01	; 1
     cfa:	6c ac       	ldd	r6, Y+60	; 0x3c
     cfc:	7d ac       	ldd	r7, Y+61	; 0x3d
     cfe:	8e ac       	ldd	r8, Y+62	; 0x3e
     d00:	9f ac       	ldd	r9, Y+63	; 0x3f
     d02:	21 97       	sbiw	r28, 0x01	; 1
     d04:	62 14       	cp	r6, r2
     d06:	73 04       	cpc	r7, r3
     d08:	84 04       	cpc	r8, r4
     d0a:	95 04       	cpc	r9, r5
     d0c:	08 f0       	brcs	.+2      	; 0xd10 <__stack+0x4b1>
     d0e:	f2 c1       	rjmp	.+996    	; 0x10f4 <__stack+0x895>
     d10:	ff c1       	rjmp	.+1022   	; 0x1110 <__stack+0x8b1>
     d12:	e2 96       	adiw	r28, 0x32	; 50
     d14:	8f af       	std	Y+63, r24	; 0x3f
     d16:	e2 97       	sbiw	r28, 0x32	; 50
     d18:	08 2e       	mov	r0, r24
     d1a:	04 c0       	rjmp	.+8      	; 0xd24 <__stack+0x4c5>
     d1c:	ee 0c       	add	r14, r14
     d1e:	ff 1c       	adc	r15, r15
     d20:	00 1f       	adc	r16, r16
     d22:	11 1f       	adc	r17, r17
     d24:	0a 94       	dec	r0
     d26:	d2 f7       	brpl	.-12     	; 0xd1c <__stack+0x4bd>
     d28:	6a 2d       	mov	r22, r10
     d2a:	68 1b       	sub	r22, r24
     d2c:	d2 01       	movw	r26, r4
     d2e:	c1 01       	movw	r24, r2
     d30:	06 2e       	mov	r0, r22
     d32:	04 c0       	rjmp	.+8      	; 0xd3c <__stack+0x4dd>
     d34:	b6 95       	lsr	r27
     d36:	a7 95       	ror	r26
     d38:	97 95       	ror	r25
     d3a:	87 95       	ror	r24
     d3c:	0a 94       	dec	r0
     d3e:	d2 f7       	brpl	.-12     	; 0xd34 <__stack+0x4d5>
     d40:	5c 01       	movw	r10, r24
     d42:	6d 01       	movw	r12, r26
     d44:	ae 28       	or	r10, r14
     d46:	bf 28       	or	r11, r15
     d48:	c0 2a       	or	r12, r16
     d4a:	d1 2a       	or	r13, r17
     d4c:	ad aa       	std	Y+53, r10	; 0x35
     d4e:	be aa       	std	Y+54, r11	; 0x36
     d50:	cf aa       	std	Y+55, r12	; 0x37
     d52:	d8 ae       	std	Y+56, r13	; 0x38
     d54:	72 01       	movw	r14, r4
     d56:	61 01       	movw	r12, r2
     d58:	e2 96       	adiw	r28, 0x32	; 50
     d5a:	0f ac       	ldd	r0, Y+63	; 0x3f
     d5c:	e2 97       	sbiw	r28, 0x32	; 50
     d5e:	04 c0       	rjmp	.+8      	; 0xd68 <__stack+0x509>
     d60:	cc 0c       	add	r12, r12
     d62:	dd 1c       	adc	r13, r13
     d64:	ee 1c       	adc	r14, r14
     d66:	ff 1c       	adc	r15, r15
     d68:	0a 94       	dec	r0
     d6a:	d2 f7       	brpl	.-12     	; 0xd60 <__stack+0x501>
     d6c:	c9 aa       	std	Y+49, r12	; 0x31
     d6e:	da aa       	std	Y+50, r13	; 0x32
     d70:	eb aa       	std	Y+51, r14	; 0x33
     d72:	fc aa       	std	Y+52, r15	; 0x34
     d74:	64 01       	movw	r12, r8
     d76:	53 01       	movw	r10, r6
     d78:	06 2e       	mov	r0, r22
     d7a:	04 c0       	rjmp	.+8      	; 0xd84 <__stack+0x525>
     d7c:	d6 94       	lsr	r13
     d7e:	c7 94       	ror	r12
     d80:	b7 94       	ror	r11
     d82:	a7 94       	ror	r10
     d84:	0a 94       	dec	r0
     d86:	d2 f7       	brpl	.-12     	; 0xd7c <__stack+0x51d>
     d88:	d4 01       	movw	r26, r8
     d8a:	c3 01       	movw	r24, r6
     d8c:	e2 96       	adiw	r28, 0x32	; 50
     d8e:	0f ac       	ldd	r0, Y+63	; 0x3f
     d90:	e2 97       	sbiw	r28, 0x32	; 50
     d92:	04 c0       	rjmp	.+8      	; 0xd9c <__stack+0x53d>
     d94:	88 0f       	add	r24, r24
     d96:	99 1f       	adc	r25, r25
     d98:	aa 1f       	adc	r26, r26
     d9a:	bb 1f       	adc	r27, r27
     d9c:	0a 94       	dec	r0
     d9e:	d2 f7       	brpl	.-12     	; 0xd94 <__stack+0x535>
     da0:	21 96       	adiw	r28, 0x01	; 1
     da2:	ec ac       	ldd	r14, Y+60	; 0x3c
     da4:	fd ac       	ldd	r15, Y+61	; 0x3d
     da6:	0e ad       	ldd	r16, Y+62	; 0x3e
     da8:	1f ad       	ldd	r17, Y+63	; 0x3f
     daa:	21 97       	sbiw	r28, 0x01	; 1
     dac:	04 c0       	rjmp	.+8      	; 0xdb6 <__stack+0x557>
     dae:	16 95       	lsr	r17
     db0:	07 95       	ror	r16
     db2:	f7 94       	ror	r15
     db4:	e7 94       	ror	r14
     db6:	6a 95       	dec	r22
     db8:	d2 f7       	brpl	.-12     	; 0xdae <__stack+0x54f>
     dba:	37 01       	movw	r6, r14
     dbc:	48 01       	movw	r8, r16
     dbe:	68 2a       	or	r6, r24
     dc0:	79 2a       	or	r7, r25
     dc2:	8a 2a       	or	r8, r26
     dc4:	9b 2a       	or	r9, r27
     dc6:	6d a6       	std	Y+45, r6	; 0x2d
     dc8:	7e a6       	std	Y+46, r7	; 0x2e
     dca:	8f a6       	std	Y+47, r8	; 0x2f
     dcc:	98 aa       	std	Y+48, r9	; 0x30
     dce:	ed a8       	ldd	r14, Y+53	; 0x35
     dd0:	fe a8       	ldd	r15, Y+54	; 0x36
     dd2:	0f a9       	ldd	r16, Y+55	; 0x37
     dd4:	18 ad       	ldd	r17, Y+56	; 0x38
     dd6:	38 01       	movw	r6, r16
     dd8:	88 24       	eor	r8, r8
     dda:	99 24       	eor	r9, r9
     ddc:	98 01       	movw	r18, r16
     dde:	87 01       	movw	r16, r14
     de0:	20 70       	andi	r18, 0x00	; 0
     de2:	30 70       	andi	r19, 0x00	; 0
     de4:	a5 96       	adiw	r28, 0x25	; 37
     de6:	0c af       	std	Y+60, r16	; 0x3c
     de8:	1d af       	std	Y+61, r17	; 0x3d
     dea:	2e af       	std	Y+62, r18	; 0x3e
     dec:	3f af       	std	Y+63, r19	; 0x3f
     dee:	a5 97       	sbiw	r28, 0x25	; 37
     df0:	c6 01       	movw	r24, r12
     df2:	b5 01       	movw	r22, r10
     df4:	a4 01       	movw	r20, r8
     df6:	93 01       	movw	r18, r6
     df8:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
     dfc:	7b 01       	movw	r14, r22
     dfe:	8c 01       	movw	r16, r24
     e00:	c6 01       	movw	r24, r12
     e02:	b5 01       	movw	r22, r10
     e04:	a4 01       	movw	r20, r8
     e06:	93 01       	movw	r18, r6
     e08:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
     e0c:	c9 01       	movw	r24, r18
     e0e:	da 01       	movw	r26, r20
     e10:	1c 01       	movw	r2, r24
     e12:	2d 01       	movw	r4, r26
     e14:	c2 01       	movw	r24, r4
     e16:	b1 01       	movw	r22, r2
     e18:	a5 96       	adiw	r28, 0x25	; 37
     e1a:	2c ad       	ldd	r18, Y+60	; 0x3c
     e1c:	3d ad       	ldd	r19, Y+61	; 0x3d
     e1e:	4e ad       	ldd	r20, Y+62	; 0x3e
     e20:	5f ad       	ldd	r21, Y+63	; 0x3f
     e22:	a5 97       	sbiw	r28, 0x25	; 37
     e24:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
     e28:	9b 01       	movw	r18, r22
     e2a:	ac 01       	movw	r20, r24
     e2c:	87 01       	movw	r16, r14
     e2e:	ff 24       	eor	r15, r15
     e30:	ee 24       	eor	r14, r14
     e32:	ad a4       	ldd	r10, Y+45	; 0x2d
     e34:	be a4       	ldd	r11, Y+46	; 0x2e
     e36:	cf a4       	ldd	r12, Y+47	; 0x2f
     e38:	d8 a8       	ldd	r13, Y+48	; 0x30
     e3a:	c6 01       	movw	r24, r12
     e3c:	aa 27       	eor	r26, r26
     e3e:	bb 27       	eor	r27, r27
     e40:	57 01       	movw	r10, r14
     e42:	68 01       	movw	r12, r16
     e44:	a8 2a       	or	r10, r24
     e46:	b9 2a       	or	r11, r25
     e48:	ca 2a       	or	r12, r26
     e4a:	db 2a       	or	r13, r27
     e4c:	a2 16       	cp	r10, r18
     e4e:	b3 06       	cpc	r11, r19
     e50:	c4 06       	cpc	r12, r20
     e52:	d5 06       	cpc	r13, r21
     e54:	00 f5       	brcc	.+64     	; 0xe96 <__stack+0x637>
     e56:	08 94       	sec
     e58:	21 08       	sbc	r2, r1
     e5a:	31 08       	sbc	r3, r1
     e5c:	41 08       	sbc	r4, r1
     e5e:	51 08       	sbc	r5, r1
     e60:	ed a8       	ldd	r14, Y+53	; 0x35
     e62:	fe a8       	ldd	r15, Y+54	; 0x36
     e64:	0f a9       	ldd	r16, Y+55	; 0x37
     e66:	18 ad       	ldd	r17, Y+56	; 0x38
     e68:	ae 0c       	add	r10, r14
     e6a:	bf 1c       	adc	r11, r15
     e6c:	c0 1e       	adc	r12, r16
     e6e:	d1 1e       	adc	r13, r17
     e70:	ae 14       	cp	r10, r14
     e72:	bf 04       	cpc	r11, r15
     e74:	c0 06       	cpc	r12, r16
     e76:	d1 06       	cpc	r13, r17
     e78:	70 f0       	brcs	.+28     	; 0xe96 <__stack+0x637>
     e7a:	a2 16       	cp	r10, r18
     e7c:	b3 06       	cpc	r11, r19
     e7e:	c4 06       	cpc	r12, r20
     e80:	d5 06       	cpc	r13, r21
     e82:	48 f4       	brcc	.+18     	; 0xe96 <__stack+0x637>
     e84:	08 94       	sec
     e86:	21 08       	sbc	r2, r1
     e88:	31 08       	sbc	r3, r1
     e8a:	41 08       	sbc	r4, r1
     e8c:	51 08       	sbc	r5, r1
     e8e:	ae 0c       	add	r10, r14
     e90:	bf 1c       	adc	r11, r15
     e92:	c0 1e       	adc	r12, r16
     e94:	d1 1e       	adc	r13, r17
     e96:	a2 1a       	sub	r10, r18
     e98:	b3 0a       	sbc	r11, r19
     e9a:	c4 0a       	sbc	r12, r20
     e9c:	d5 0a       	sbc	r13, r21
     e9e:	c6 01       	movw	r24, r12
     ea0:	b5 01       	movw	r22, r10
     ea2:	a4 01       	movw	r20, r8
     ea4:	93 01       	movw	r18, r6
     ea6:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
     eaa:	7b 01       	movw	r14, r22
     eac:	8c 01       	movw	r16, r24
     eae:	c6 01       	movw	r24, r12
     eb0:	b5 01       	movw	r22, r10
     eb2:	a4 01       	movw	r20, r8
     eb4:	93 01       	movw	r18, r6
     eb6:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
     eba:	c9 01       	movw	r24, r18
     ebc:	da 01       	movw	r26, r20
     ebe:	3c 01       	movw	r6, r24
     ec0:	4d 01       	movw	r8, r26
     ec2:	c4 01       	movw	r24, r8
     ec4:	b3 01       	movw	r22, r6
     ec6:	a5 96       	adiw	r28, 0x25	; 37
     ec8:	2c ad       	ldd	r18, Y+60	; 0x3c
     eca:	3d ad       	ldd	r19, Y+61	; 0x3d
     ecc:	4e ad       	ldd	r20, Y+62	; 0x3e
     ece:	5f ad       	ldd	r21, Y+63	; 0x3f
     ed0:	a5 97       	sbiw	r28, 0x25	; 37
     ed2:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
     ed6:	9b 01       	movw	r18, r22
     ed8:	ac 01       	movw	r20, r24
     eda:	87 01       	movw	r16, r14
     edc:	ff 24       	eor	r15, r15
     ede:	ee 24       	eor	r14, r14
     ee0:	8d a5       	ldd	r24, Y+45	; 0x2d
     ee2:	9e a5       	ldd	r25, Y+46	; 0x2e
     ee4:	af a5       	ldd	r26, Y+47	; 0x2f
     ee6:	b8 a9       	ldd	r27, Y+48	; 0x30
     ee8:	a0 70       	andi	r26, 0x00	; 0
     eea:	b0 70       	andi	r27, 0x00	; 0
     eec:	57 01       	movw	r10, r14
     eee:	68 01       	movw	r12, r16
     ef0:	a8 2a       	or	r10, r24
     ef2:	b9 2a       	or	r11, r25
     ef4:	ca 2a       	or	r12, r26
     ef6:	db 2a       	or	r13, r27
     ef8:	a2 16       	cp	r10, r18
     efa:	b3 06       	cpc	r11, r19
     efc:	c4 06       	cpc	r12, r20
     efe:	d5 06       	cpc	r13, r21
     f00:	00 f5       	brcc	.+64     	; 0xf42 <__stack+0x6e3>
     f02:	08 94       	sec
     f04:	61 08       	sbc	r6, r1
     f06:	71 08       	sbc	r7, r1
     f08:	81 08       	sbc	r8, r1
     f0a:	91 08       	sbc	r9, r1
     f0c:	6d a9       	ldd	r22, Y+53	; 0x35
     f0e:	7e a9       	ldd	r23, Y+54	; 0x36
     f10:	8f a9       	ldd	r24, Y+55	; 0x37
     f12:	98 ad       	ldd	r25, Y+56	; 0x38
     f14:	a6 0e       	add	r10, r22
     f16:	b7 1e       	adc	r11, r23
     f18:	c8 1e       	adc	r12, r24
     f1a:	d9 1e       	adc	r13, r25
     f1c:	a6 16       	cp	r10, r22
     f1e:	b7 06       	cpc	r11, r23
     f20:	c8 06       	cpc	r12, r24
     f22:	d9 06       	cpc	r13, r25
     f24:	70 f0       	brcs	.+28     	; 0xf42 <__stack+0x6e3>
     f26:	a2 16       	cp	r10, r18
     f28:	b3 06       	cpc	r11, r19
     f2a:	c4 06       	cpc	r12, r20
     f2c:	d5 06       	cpc	r13, r21
     f2e:	48 f4       	brcc	.+18     	; 0xf42 <__stack+0x6e3>
     f30:	08 94       	sec
     f32:	61 08       	sbc	r6, r1
     f34:	71 08       	sbc	r7, r1
     f36:	81 08       	sbc	r8, r1
     f38:	91 08       	sbc	r9, r1
     f3a:	a6 0e       	add	r10, r22
     f3c:	b7 1e       	adc	r11, r23
     f3e:	c8 1e       	adc	r12, r24
     f40:	d9 1e       	adc	r13, r25
     f42:	d6 01       	movw	r26, r12
     f44:	c5 01       	movw	r24, r10
     f46:	82 1b       	sub	r24, r18
     f48:	93 0b       	sbc	r25, r19
     f4a:	a4 0b       	sbc	r26, r20
     f4c:	b5 0b       	sbc	r27, r21
     f4e:	89 a7       	std	Y+41, r24	; 0x29
     f50:	9a a7       	std	Y+42, r25	; 0x2a
     f52:	ab a7       	std	Y+43, r26	; 0x2b
     f54:	bc a7       	std	Y+44, r27	; 0x2c
     f56:	d1 01       	movw	r26, r2
     f58:	99 27       	eor	r25, r25
     f5a:	88 27       	eor	r24, r24
     f5c:	64 01       	movw	r12, r8
     f5e:	53 01       	movw	r10, r6
     f60:	a8 2a       	or	r10, r24
     f62:	b9 2a       	or	r11, r25
     f64:	ca 2a       	or	r12, r26
     f66:	db 2a       	or	r13, r27
     f68:	25 96       	adiw	r28, 0x05	; 5
     f6a:	ac ae       	std	Y+60, r10	; 0x3c
     f6c:	bd ae       	std	Y+61, r11	; 0x3d
     f6e:	ce ae       	std	Y+62, r12	; 0x3e
     f70:	df ae       	std	Y+63, r13	; 0x3f
     f72:	25 97       	sbiw	r28, 0x05	; 5
     f74:	86 01       	movw	r16, r12
     f76:	75 01       	movw	r14, r10
     f78:	2f ef       	ldi	r18, 0xFF	; 255
     f7a:	3f ef       	ldi	r19, 0xFF	; 255
     f7c:	40 e0       	ldi	r20, 0x00	; 0
     f7e:	50 e0       	ldi	r21, 0x00	; 0
     f80:	e2 22       	and	r14, r18
     f82:	f3 22       	and	r15, r19
     f84:	04 23       	and	r16, r20
     f86:	15 23       	and	r17, r21
     f88:	a6 01       	movw	r20, r12
     f8a:	66 27       	eor	r22, r22
     f8c:	77 27       	eor	r23, r23
     f8e:	ad 96       	adiw	r28, 0x2d	; 45
     f90:	4c af       	std	Y+60, r20	; 0x3c
     f92:	5d af       	std	Y+61, r21	; 0x3d
     f94:	6e af       	std	Y+62, r22	; 0x3e
     f96:	7f af       	std	Y+63, r23	; 0x3f
     f98:	ad 97       	sbiw	r28, 0x2d	; 45
     f9a:	a9 a8       	ldd	r10, Y+49	; 0x31
     f9c:	ba a8       	ldd	r11, Y+50	; 0x32
     f9e:	cb a8       	ldd	r12, Y+51	; 0x33
     fa0:	dc a8       	ldd	r13, Y+52	; 0x34
     fa2:	6f ef       	ldi	r22, 0xFF	; 255
     fa4:	7f ef       	ldi	r23, 0xFF	; 255
     fa6:	80 e0       	ldi	r24, 0x00	; 0
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	a6 22       	and	r10, r22
     fac:	b7 22       	and	r11, r23
     fae:	c8 22       	and	r12, r24
     fb0:	d9 22       	and	r13, r25
     fb2:	89 a9       	ldd	r24, Y+49	; 0x31
     fb4:	9a a9       	ldd	r25, Y+50	; 0x32
     fb6:	ab a9       	ldd	r26, Y+51	; 0x33
     fb8:	bc a9       	ldd	r27, Y+52	; 0x34
     fba:	1d 01       	movw	r2, r26
     fbc:	44 24       	eor	r4, r4
     fbe:	55 24       	eor	r5, r5
     fc0:	c8 01       	movw	r24, r16
     fc2:	b7 01       	movw	r22, r14
     fc4:	a6 01       	movw	r20, r12
     fc6:	95 01       	movw	r18, r10
     fc8:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
     fcc:	a9 96       	adiw	r28, 0x29	; 41
     fce:	6c af       	std	Y+60, r22	; 0x3c
     fd0:	7d af       	std	Y+61, r23	; 0x3d
     fd2:	8e af       	std	Y+62, r24	; 0x3e
     fd4:	9f af       	std	Y+63, r25	; 0x3f
     fd6:	a9 97       	sbiw	r28, 0x29	; 41
     fd8:	c8 01       	movw	r24, r16
     fda:	b7 01       	movw	r22, r14
     fdc:	a2 01       	movw	r20, r4
     fde:	91 01       	movw	r18, r2
     fe0:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
     fe4:	3b 01       	movw	r6, r22
     fe6:	4c 01       	movw	r8, r24
     fe8:	ad 96       	adiw	r28, 0x2d	; 45
     fea:	6c ad       	ldd	r22, Y+60	; 0x3c
     fec:	7d ad       	ldd	r23, Y+61	; 0x3d
     fee:	8e ad       	ldd	r24, Y+62	; 0x3e
     ff0:	9f ad       	ldd	r25, Y+63	; 0x3f
     ff2:	ad 97       	sbiw	r28, 0x2d	; 45
     ff4:	a6 01       	movw	r20, r12
     ff6:	95 01       	movw	r18, r10
     ff8:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
     ffc:	7b 01       	movw	r14, r22
     ffe:	8c 01       	movw	r16, r24
    1000:	ad 96       	adiw	r28, 0x2d	; 45
    1002:	6c ad       	ldd	r22, Y+60	; 0x3c
    1004:	7d ad       	ldd	r23, Y+61	; 0x3d
    1006:	8e ad       	ldd	r24, Y+62	; 0x3e
    1008:	9f ad       	ldd	r25, Y+63	; 0x3f
    100a:	ad 97       	sbiw	r28, 0x2d	; 45
    100c:	a2 01       	movw	r20, r4
    100e:	91 01       	movw	r18, r2
    1010:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    1014:	5b 01       	movw	r10, r22
    1016:	6c 01       	movw	r12, r24
    1018:	a8 01       	movw	r20, r16
    101a:	97 01       	movw	r18, r14
    101c:	26 0d       	add	r18, r6
    101e:	37 1d       	adc	r19, r7
    1020:	48 1d       	adc	r20, r8
    1022:	59 1d       	adc	r21, r9
    1024:	a9 96       	adiw	r28, 0x29	; 41
    1026:	6c ac       	ldd	r6, Y+60	; 0x3c
    1028:	7d ac       	ldd	r7, Y+61	; 0x3d
    102a:	8e ac       	ldd	r8, Y+62	; 0x3e
    102c:	9f ac       	ldd	r9, Y+63	; 0x3f
    102e:	a9 97       	sbiw	r28, 0x29	; 41
    1030:	c4 01       	movw	r24, r8
    1032:	aa 27       	eor	r26, r26
    1034:	bb 27       	eor	r27, r27
    1036:	28 0f       	add	r18, r24
    1038:	39 1f       	adc	r19, r25
    103a:	4a 1f       	adc	r20, r26
    103c:	5b 1f       	adc	r21, r27
    103e:	2e 15       	cp	r18, r14
    1040:	3f 05       	cpc	r19, r15
    1042:	40 07       	cpc	r20, r16
    1044:	51 07       	cpc	r21, r17
    1046:	48 f4       	brcc	.+18     	; 0x105a <__stack+0x7fb>
    1048:	e1 2c       	mov	r14, r1
    104a:	f1 2c       	mov	r15, r1
    104c:	61 e0       	ldi	r22, 0x01	; 1
    104e:	06 2f       	mov	r16, r22
    1050:	11 2d       	mov	r17, r1
    1052:	ae 0c       	add	r10, r14
    1054:	bf 1c       	adc	r11, r15
    1056:	c0 1e       	adc	r12, r16
    1058:	d1 1e       	adc	r13, r17
    105a:	ca 01       	movw	r24, r20
    105c:	aa 27       	eor	r26, r26
    105e:	bb 27       	eor	r27, r27
    1060:	bc 01       	movw	r22, r24
    1062:	cd 01       	movw	r24, r26
    1064:	6a 0d       	add	r22, r10
    1066:	7b 1d       	adc	r23, r11
    1068:	8c 1d       	adc	r24, r12
    106a:	9d 1d       	adc	r25, r13
    106c:	69 a4       	ldd	r6, Y+41	; 0x29
    106e:	7a a4       	ldd	r7, Y+42	; 0x2a
    1070:	8b a4       	ldd	r8, Y+43	; 0x2b
    1072:	9c a4       	ldd	r9, Y+44	; 0x2c
    1074:	66 16       	cp	r6, r22
    1076:	77 06       	cpc	r7, r23
    1078:	88 06       	cpc	r8, r24
    107a:	99 06       	cpc	r9, r25
    107c:	50 f1       	brcs	.+84     	; 0x10d2 <__stack+0x873>
    107e:	66 15       	cp	r22, r6
    1080:	77 05       	cpc	r23, r7
    1082:	88 05       	cpc	r24, r8
    1084:	99 05       	cpc	r25, r9
    1086:	09 f0       	breq	.+2      	; 0x108a <__stack+0x82b>
    1088:	4d c0       	rjmp	.+154    	; 0x1124 <__stack+0x8c5>
    108a:	d9 01       	movw	r26, r18
    108c:	99 27       	eor	r25, r25
    108e:	88 27       	eor	r24, r24
    1090:	a9 96       	adiw	r28, 0x29	; 41
    1092:	2c ad       	ldd	r18, Y+60	; 0x3c
    1094:	3d ad       	ldd	r19, Y+61	; 0x3d
    1096:	4e ad       	ldd	r20, Y+62	; 0x3e
    1098:	5f ad       	ldd	r21, Y+63	; 0x3f
    109a:	a9 97       	sbiw	r28, 0x29	; 41
    109c:	40 70       	andi	r20, 0x00	; 0
    109e:	50 70       	andi	r21, 0x00	; 0
    10a0:	82 0f       	add	r24, r18
    10a2:	93 1f       	adc	r25, r19
    10a4:	a4 1f       	adc	r26, r20
    10a6:	b5 1f       	adc	r27, r21
    10a8:	21 96       	adiw	r28, 0x01	; 1
    10aa:	2c ad       	ldd	r18, Y+60	; 0x3c
    10ac:	3d ad       	ldd	r19, Y+61	; 0x3d
    10ae:	4e ad       	ldd	r20, Y+62	; 0x3e
    10b0:	5f ad       	ldd	r21, Y+63	; 0x3f
    10b2:	21 97       	sbiw	r28, 0x01	; 1
    10b4:	e2 96       	adiw	r28, 0x32	; 50
    10b6:	0f ac       	ldd	r0, Y+63	; 0x3f
    10b8:	e2 97       	sbiw	r28, 0x32	; 50
    10ba:	04 c0       	rjmp	.+8      	; 0x10c4 <__stack+0x865>
    10bc:	22 0f       	add	r18, r18
    10be:	33 1f       	adc	r19, r19
    10c0:	44 1f       	adc	r20, r20
    10c2:	55 1f       	adc	r21, r21
    10c4:	0a 94       	dec	r0
    10c6:	d2 f7       	brpl	.-12     	; 0x10bc <__stack+0x85d>
    10c8:	28 17       	cp	r18, r24
    10ca:	39 07       	cpc	r19, r25
    10cc:	4a 07       	cpc	r20, r26
    10ce:	5b 07       	cpc	r21, r27
    10d0:	48 f5       	brcc	.+82     	; 0x1124 <__stack+0x8c5>
    10d2:	25 96       	adiw	r28, 0x05	; 5
    10d4:	0c ad       	ldd	r16, Y+60	; 0x3c
    10d6:	1d ad       	ldd	r17, Y+61	; 0x3d
    10d8:	2e ad       	ldd	r18, Y+62	; 0x3e
    10da:	3f ad       	ldd	r19, Y+63	; 0x3f
    10dc:	25 97       	sbiw	r28, 0x05	; 5
    10de:	01 50       	subi	r16, 0x01	; 1
    10e0:	10 40       	sbci	r17, 0x00	; 0
    10e2:	20 40       	sbci	r18, 0x00	; 0
    10e4:	30 40       	sbci	r19, 0x00	; 0
    10e6:	25 96       	adiw	r28, 0x05	; 5
    10e8:	0c af       	std	Y+60, r16	; 0x3c
    10ea:	1d af       	std	Y+61, r17	; 0x3d
    10ec:	2e af       	std	Y+62, r18	; 0x3e
    10ee:	3f af       	std	Y+63, r19	; 0x3f
    10f0:	25 97       	sbiw	r28, 0x05	; 5
    10f2:	18 c0       	rjmp	.+48     	; 0x1124 <__stack+0x8c5>
    10f4:	66 24       	eor	r6, r6
    10f6:	77 24       	eor	r7, r7
    10f8:	43 01       	movw	r8, r6
    10fa:	21 e0       	ldi	r18, 0x01	; 1
    10fc:	30 e0       	ldi	r19, 0x00	; 0
    10fe:	40 e0       	ldi	r20, 0x00	; 0
    1100:	50 e0       	ldi	r21, 0x00	; 0
    1102:	25 96       	adiw	r28, 0x05	; 5
    1104:	2c af       	std	Y+60, r18	; 0x3c
    1106:	3d af       	std	Y+61, r19	; 0x3d
    1108:	4e af       	std	Y+62, r20	; 0x3e
    110a:	5f af       	std	Y+63, r21	; 0x3f
    110c:	25 97       	sbiw	r28, 0x05	; 5
    110e:	0d c0       	rjmp	.+26     	; 0x112a <__stack+0x8cb>
    1110:	66 24       	eor	r6, r6
    1112:	77 24       	eor	r7, r7
    1114:	43 01       	movw	r8, r6
    1116:	25 96       	adiw	r28, 0x05	; 5
    1118:	1c ae       	std	Y+60, r1	; 0x3c
    111a:	1d ae       	std	Y+61, r1	; 0x3d
    111c:	1e ae       	std	Y+62, r1	; 0x3e
    111e:	1f ae       	std	Y+63, r1	; 0x3f
    1120:	25 97       	sbiw	r28, 0x05	; 5
    1122:	03 c0       	rjmp	.+6      	; 0x112a <__stack+0x8cb>
    1124:	66 24       	eor	r6, r6
    1126:	77 24       	eor	r7, r7
    1128:	43 01       	movw	r8, r6
    112a:	fe 01       	movw	r30, r28
    112c:	b1 96       	adiw	r30, 0x21	; 33
    112e:	88 e0       	ldi	r24, 0x08	; 8
    1130:	df 01       	movw	r26, r30
    1132:	1d 92       	st	X+, r1
    1134:	8a 95       	dec	r24
    1136:	e9 f7       	brne	.-6      	; 0x1132 <__stack+0x8d3>
    1138:	25 96       	adiw	r28, 0x05	; 5
    113a:	ac ac       	ldd	r10, Y+60	; 0x3c
    113c:	bd ac       	ldd	r11, Y+61	; 0x3d
    113e:	ce ac       	ldd	r12, Y+62	; 0x3e
    1140:	df ac       	ldd	r13, Y+63	; 0x3f
    1142:	25 97       	sbiw	r28, 0x05	; 5
    1144:	a9 a2       	std	Y+33, r10	; 0x21
    1146:	ba a2       	std	Y+34, r11	; 0x22
    1148:	cb a2       	std	Y+35, r12	; 0x23
    114a:	dc a2       	std	Y+36, r13	; 0x24
    114c:	6d a2       	std	Y+37, r6	; 0x25
    114e:	7e a2       	std	Y+38, r7	; 0x26
    1150:	8f a2       	std	Y+39, r8	; 0x27
    1152:	98 a6       	std	Y+40, r9	; 0x28
    1154:	22 96       	adiw	r28, 0x02	; 2
    1156:	2f ad       	ldd	r18, Y+63	; 0x3f
    1158:	22 97       	sbiw	r28, 0x02	; 2
    115a:	3a a1       	ldd	r19, Y+34	; 0x22
    115c:	4b a1       	ldd	r20, Y+35	; 0x23
    115e:	5c a1       	ldd	r21, Y+36	; 0x24
    1160:	66 2d       	mov	r22, r6
    1162:	7e a1       	ldd	r23, Y+38	; 0x26
    1164:	df a0       	ldd	r13, Y+39	; 0x27
    1166:	98 a5       	ldd	r25, Y+40	; 0x28
    1168:	e1 96       	adiw	r28, 0x31	; 49
    116a:	ec ac       	ldd	r14, Y+60	; 0x3c
    116c:	fd ac       	ldd	r15, Y+61	; 0x3d
    116e:	0e ad       	ldd	r16, Y+62	; 0x3e
    1170:	1f ad       	ldd	r17, Y+63	; 0x3f
    1172:	e1 97       	sbiw	r28, 0x31	; 49
    1174:	e1 14       	cp	r14, r1
    1176:	f1 04       	cpc	r15, r1
    1178:	01 05       	cpc	r16, r1
    117a:	11 05       	cpc	r17, r1
    117c:	09 f4       	brne	.+2      	; 0x1180 <__stack+0x921>
    117e:	56 c0       	rjmp	.+172    	; 0x122c <__stack+0x9cd>
    1180:	21 95       	neg	r18
    1182:	81 e0       	ldi	r24, 0x01	; 1
    1184:	12 16       	cp	r1, r18
    1186:	08 f0       	brcs	.+2      	; 0x118a <__stack+0x92b>
    1188:	80 e0       	ldi	r24, 0x00	; 0
    118a:	31 95       	neg	r19
    118c:	e1 e0       	ldi	r30, 0x01	; 1
    118e:	13 16       	cp	r1, r19
    1190:	08 f0       	brcs	.+2      	; 0x1194 <__stack+0x935>
    1192:	e0 e0       	ldi	r30, 0x00	; 0
    1194:	93 2e       	mov	r9, r19
    1196:	98 1a       	sub	r9, r24
    1198:	81 e0       	ldi	r24, 0x01	; 1
    119a:	39 15       	cp	r19, r9
    119c:	08 f0       	brcs	.+2      	; 0x11a0 <__stack+0x941>
    119e:	80 e0       	ldi	r24, 0x00	; 0
    11a0:	e8 2b       	or	r30, r24
    11a2:	41 95       	neg	r20
    11a4:	f1 e0       	ldi	r31, 0x01	; 1
    11a6:	14 16       	cp	r1, r20
    11a8:	08 f0       	brcs	.+2      	; 0x11ac <__stack+0x94d>
    11aa:	f0 e0       	ldi	r31, 0x00	; 0
    11ac:	a4 2e       	mov	r10, r20
    11ae:	ae 1a       	sub	r10, r30
    11b0:	81 e0       	ldi	r24, 0x01	; 1
    11b2:	4a 15       	cp	r20, r10
    11b4:	08 f0       	brcs	.+2      	; 0x11b8 <__stack+0x959>
    11b6:	80 e0       	ldi	r24, 0x00	; 0
    11b8:	f8 2b       	or	r31, r24
    11ba:	51 95       	neg	r21
    11bc:	e1 e0       	ldi	r30, 0x01	; 1
    11be:	15 16       	cp	r1, r21
    11c0:	08 f0       	brcs	.+2      	; 0x11c4 <__stack+0x965>
    11c2:	e0 e0       	ldi	r30, 0x00	; 0
    11c4:	b5 2e       	mov	r11, r21
    11c6:	bf 1a       	sub	r11, r31
    11c8:	81 e0       	ldi	r24, 0x01	; 1
    11ca:	5b 15       	cp	r21, r11
    11cc:	08 f0       	brcs	.+2      	; 0x11d0 <__stack+0x971>
    11ce:	80 e0       	ldi	r24, 0x00	; 0
    11d0:	e8 2b       	or	r30, r24
    11d2:	61 95       	neg	r22
    11d4:	f1 e0       	ldi	r31, 0x01	; 1
    11d6:	16 16       	cp	r1, r22
    11d8:	08 f0       	brcs	.+2      	; 0x11dc <__stack+0x97d>
    11da:	f0 e0       	ldi	r31, 0x00	; 0
    11dc:	a6 2f       	mov	r26, r22
    11de:	ae 1b       	sub	r26, r30
    11e0:	81 e0       	ldi	r24, 0x01	; 1
    11e2:	6a 17       	cp	r22, r26
    11e4:	08 f0       	brcs	.+2      	; 0x11e8 <__stack+0x989>
    11e6:	80 e0       	ldi	r24, 0x00	; 0
    11e8:	f8 2b       	or	r31, r24
    11ea:	71 95       	neg	r23
    11ec:	e1 e0       	ldi	r30, 0x01	; 1
    11ee:	17 16       	cp	r1, r23
    11f0:	08 f0       	brcs	.+2      	; 0x11f4 <__stack+0x995>
    11f2:	e0 e0       	ldi	r30, 0x00	; 0
    11f4:	c7 2e       	mov	r12, r23
    11f6:	cf 1a       	sub	r12, r31
    11f8:	81 e0       	ldi	r24, 0x01	; 1
    11fa:	7c 15       	cp	r23, r12
    11fc:	08 f0       	brcs	.+2      	; 0x1200 <__stack+0x9a1>
    11fe:	80 e0       	ldi	r24, 0x00	; 0
    1200:	e8 2b       	or	r30, r24
    1202:	8d 2d       	mov	r24, r13
    1204:	81 95       	neg	r24
    1206:	f1 e0       	ldi	r31, 0x01	; 1
    1208:	18 16       	cp	r1, r24
    120a:	08 f0       	brcs	.+2      	; 0x120e <__stack+0x9af>
    120c:	f0 e0       	ldi	r31, 0x00	; 0
    120e:	d8 2e       	mov	r13, r24
    1210:	de 1a       	sub	r13, r30
    1212:	e1 e0       	ldi	r30, 0x01	; 1
    1214:	8d 15       	cp	r24, r13
    1216:	08 f0       	brcs	.+2      	; 0x121a <__stack+0x9bb>
    1218:	e0 e0       	ldi	r30, 0x00	; 0
    121a:	fe 2b       	or	r31, r30
    121c:	89 2f       	mov	r24, r25
    121e:	81 95       	neg	r24
    1220:	39 2d       	mov	r19, r9
    1222:	a5 01       	movw	r20, r10
    1224:	6a 2f       	mov	r22, r26
    1226:	7c 2d       	mov	r23, r12
    1228:	98 2f       	mov	r25, r24
    122a:	9f 1b       	sub	r25, r31
    122c:	8d 2d       	mov	r24, r13
    122e:	ce 58       	subi	r28, 0x8E	; 142
    1230:	df 4f       	sbci	r29, 0xFF	; 255
    1232:	e2 e1       	ldi	r30, 0x12	; 18
    1234:	0c 94 91 34 	jmp	0x6922	; 0x6922 <__epilogue_restores__>

00001238 <__moddi3>:
    1238:	a7 e7       	ldi	r26, 0x77	; 119
    123a:	b0 e0       	ldi	r27, 0x00	; 0
    123c:	e2 e2       	ldi	r30, 0x22	; 34
    123e:	f9 e0       	ldi	r31, 0x09	; 9
    1240:	0c 94 75 34 	jmp	0x68ea	; 0x68ea <__prologue_saves__>
    1244:	98 2e       	mov	r9, r24
    1246:	89 2e       	mov	r8, r25
    1248:	71 2e       	mov	r7, r17
    124a:	88 e0       	ldi	r24, 0x08	; 8
    124c:	fe 01       	movw	r30, r28
    124e:	31 96       	adiw	r30, 0x01	; 1
    1250:	df 01       	movw	r26, r30
    1252:	68 2e       	mov	r6, r24
    1254:	1d 92       	st	X+, r1
    1256:	6a 94       	dec	r6
    1258:	e9 f7       	brne	.-6      	; 0x1254 <__moddi3+0x1c>
    125a:	29 83       	std	Y+1, r18	; 0x01
    125c:	3a 83       	std	Y+2, r19	; 0x02
    125e:	4b 83       	std	Y+3, r20	; 0x03
    1260:	5c 83       	std	Y+4, r21	; 0x04
    1262:	6d 83       	std	Y+5, r22	; 0x05
    1264:	7e 83       	std	Y+6, r23	; 0x06
    1266:	9f 82       	std	Y+7, r9	; 0x07
    1268:	98 87       	std	Y+8, r25	; 0x08
    126a:	fe 01       	movw	r30, r28
    126c:	39 96       	adiw	r30, 0x09	; 9
    126e:	df 01       	movw	r26, r30
    1270:	1d 92       	st	X+, r1
    1272:	8a 95       	dec	r24
    1274:	e9 f7       	brne	.-6      	; 0x1270 <__moddi3+0x38>
    1276:	a9 86       	std	Y+9, r10	; 0x09
    1278:	ba 86       	std	Y+10, r11	; 0x0a
    127a:	cb 86       	std	Y+11, r12	; 0x0b
    127c:	dc 86       	std	Y+12, r13	; 0x0c
    127e:	ed 86       	std	Y+13, r14	; 0x0d
    1280:	fe 86       	std	Y+14, r15	; 0x0e
    1282:	0f 87       	std	Y+15, r16	; 0x0f
    1284:	18 8b       	std	Y+16, r17	; 0x10
    1286:	8d 81       	ldd	r24, Y+5	; 0x05
    1288:	9e 81       	ldd	r25, Y+6	; 0x06
    128a:	af 81       	ldd	r26, Y+7	; 0x07
    128c:	b8 85       	ldd	r27, Y+8	; 0x08
    128e:	b7 fd       	sbrc	r27, 7
    1290:	07 c0       	rjmp	.+14     	; 0x12a0 <__moddi3+0x68>
    1292:	e1 96       	adiw	r28, 0x31	; 49
    1294:	1c ae       	std	Y+60, r1	; 0x3c
    1296:	1d ae       	std	Y+61, r1	; 0x3d
    1298:	1e ae       	std	Y+62, r1	; 0x3e
    129a:	1f ae       	std	Y+63, r1	; 0x3f
    129c:	e1 97       	sbiw	r28, 0x31	; 49
    129e:	64 c0       	rjmp	.+200    	; 0x1368 <__moddi3+0x130>
    12a0:	21 95       	neg	r18
    12a2:	81 e0       	ldi	r24, 0x01	; 1
    12a4:	12 16       	cp	r1, r18
    12a6:	08 f0       	brcs	.+2      	; 0x12aa <__moddi3+0x72>
    12a8:	80 e0       	ldi	r24, 0x00	; 0
    12aa:	31 95       	neg	r19
    12ac:	91 e0       	ldi	r25, 0x01	; 1
    12ae:	13 16       	cp	r1, r19
    12b0:	08 f0       	brcs	.+2      	; 0x12b4 <__moddi3+0x7c>
    12b2:	90 e0       	ldi	r25, 0x00	; 0
    12b4:	b3 2f       	mov	r27, r19
    12b6:	b8 1b       	sub	r27, r24
    12b8:	81 e0       	ldi	r24, 0x01	; 1
    12ba:	3b 17       	cp	r19, r27
    12bc:	08 f0       	brcs	.+2      	; 0x12c0 <__moddi3+0x88>
    12be:	80 e0       	ldi	r24, 0x00	; 0
    12c0:	98 2b       	or	r25, r24
    12c2:	41 95       	neg	r20
    12c4:	31 e0       	ldi	r19, 0x01	; 1
    12c6:	14 16       	cp	r1, r20
    12c8:	08 f0       	brcs	.+2      	; 0x12cc <__moddi3+0x94>
    12ca:	30 e0       	ldi	r19, 0x00	; 0
    12cc:	a4 2f       	mov	r26, r20
    12ce:	a9 1b       	sub	r26, r25
    12d0:	81 e0       	ldi	r24, 0x01	; 1
    12d2:	4a 17       	cp	r20, r26
    12d4:	08 f0       	brcs	.+2      	; 0x12d8 <__moddi3+0xa0>
    12d6:	80 e0       	ldi	r24, 0x00	; 0
    12d8:	38 2b       	or	r19, r24
    12da:	51 95       	neg	r21
    12dc:	91 e0       	ldi	r25, 0x01	; 1
    12de:	15 16       	cp	r1, r21
    12e0:	08 f0       	brcs	.+2      	; 0x12e4 <__moddi3+0xac>
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	f5 2f       	mov	r31, r21
    12e6:	f3 1b       	sub	r31, r19
    12e8:	81 e0       	ldi	r24, 0x01	; 1
    12ea:	5f 17       	cp	r21, r31
    12ec:	08 f0       	brcs	.+2      	; 0x12f0 <__moddi3+0xb8>
    12ee:	80 e0       	ldi	r24, 0x00	; 0
    12f0:	98 2b       	or	r25, r24
    12f2:	61 95       	neg	r22
    12f4:	31 e0       	ldi	r19, 0x01	; 1
    12f6:	16 16       	cp	r1, r22
    12f8:	08 f0       	brcs	.+2      	; 0x12fc <__moddi3+0xc4>
    12fa:	30 e0       	ldi	r19, 0x00	; 0
    12fc:	e6 2f       	mov	r30, r22
    12fe:	e9 1b       	sub	r30, r25
    1300:	81 e0       	ldi	r24, 0x01	; 1
    1302:	6e 17       	cp	r22, r30
    1304:	08 f0       	brcs	.+2      	; 0x1308 <__moddi3+0xd0>
    1306:	80 e0       	ldi	r24, 0x00	; 0
    1308:	38 2b       	or	r19, r24
    130a:	71 95       	neg	r23
    130c:	41 e0       	ldi	r20, 0x01	; 1
    130e:	17 16       	cp	r1, r23
    1310:	08 f0       	brcs	.+2      	; 0x1314 <__moddi3+0xdc>
    1312:	40 e0       	ldi	r20, 0x00	; 0
    1314:	57 2f       	mov	r21, r23
    1316:	53 1b       	sub	r21, r19
    1318:	81 e0       	ldi	r24, 0x01	; 1
    131a:	75 17       	cp	r23, r21
    131c:	08 f0       	brcs	.+2      	; 0x1320 <__moddi3+0xe8>
    131e:	80 e0       	ldi	r24, 0x00	; 0
    1320:	48 2b       	or	r20, r24
    1322:	89 2d       	mov	r24, r9
    1324:	81 95       	neg	r24
    1326:	91 e0       	ldi	r25, 0x01	; 1
    1328:	18 16       	cp	r1, r24
    132a:	08 f0       	brcs	.+2      	; 0x132e <__moddi3+0xf6>
    132c:	90 e0       	ldi	r25, 0x00	; 0
    132e:	68 2e       	mov	r6, r24
    1330:	64 1a       	sub	r6, r20
    1332:	46 2d       	mov	r20, r6
    1334:	31 e0       	ldi	r19, 0x01	; 1
    1336:	86 15       	cp	r24, r6
    1338:	08 f0       	brcs	.+2      	; 0x133c <__moddi3+0x104>
    133a:	30 e0       	ldi	r19, 0x00	; 0
    133c:	93 2b       	or	r25, r19
    133e:	88 2d       	mov	r24, r8
    1340:	81 95       	neg	r24
    1342:	89 1b       	sub	r24, r25
    1344:	29 83       	std	Y+1, r18	; 0x01
    1346:	ba 83       	std	Y+2, r27	; 0x02
    1348:	ab 83       	std	Y+3, r26	; 0x03
    134a:	fc 83       	std	Y+4, r31	; 0x04
    134c:	ed 83       	std	Y+5, r30	; 0x05
    134e:	5e 83       	std	Y+6, r21	; 0x06
    1350:	4f 83       	std	Y+7, r20	; 0x07
    1352:	88 87       	std	Y+8, r24	; 0x08
    1354:	2f ef       	ldi	r18, 0xFF	; 255
    1356:	3f ef       	ldi	r19, 0xFF	; 255
    1358:	4f ef       	ldi	r20, 0xFF	; 255
    135a:	5f ef       	ldi	r21, 0xFF	; 255
    135c:	e1 96       	adiw	r28, 0x31	; 49
    135e:	2c af       	std	Y+60, r18	; 0x3c
    1360:	3d af       	std	Y+61, r19	; 0x3d
    1362:	4e af       	std	Y+62, r20	; 0x3e
    1364:	5f af       	std	Y+63, r21	; 0x3f
    1366:	e1 97       	sbiw	r28, 0x31	; 49
    1368:	8d 85       	ldd	r24, Y+13	; 0x0d
    136a:	9e 85       	ldd	r25, Y+14	; 0x0e
    136c:	af 85       	ldd	r26, Y+15	; 0x0f
    136e:	b8 89       	ldd	r27, Y+16	; 0x10
    1370:	b7 ff       	sbrs	r27, 7
    1372:	5a c0       	rjmp	.+180    	; 0x1428 <__moddi3+0x1f0>
    1374:	a1 94       	neg	r10
    1376:	81 e0       	ldi	r24, 0x01	; 1
    1378:	1a 14       	cp	r1, r10
    137a:	08 f0       	brcs	.+2      	; 0x137e <__moddi3+0x146>
    137c:	80 e0       	ldi	r24, 0x00	; 0
    137e:	b1 94       	neg	r11
    1380:	91 e0       	ldi	r25, 0x01	; 1
    1382:	1b 14       	cp	r1, r11
    1384:	08 f0       	brcs	.+2      	; 0x1388 <__moddi3+0x150>
    1386:	90 e0       	ldi	r25, 0x00	; 0
    1388:	6b 2d       	mov	r22, r11
    138a:	68 1b       	sub	r22, r24
    138c:	81 e0       	ldi	r24, 0x01	; 1
    138e:	b6 16       	cp	r11, r22
    1390:	08 f0       	brcs	.+2      	; 0x1394 <__moddi3+0x15c>
    1392:	80 e0       	ldi	r24, 0x00	; 0
    1394:	98 2b       	or	r25, r24
    1396:	c1 94       	neg	r12
    1398:	21 e0       	ldi	r18, 0x01	; 1
    139a:	1c 14       	cp	r1, r12
    139c:	08 f0       	brcs	.+2      	; 0x13a0 <__moddi3+0x168>
    139e:	20 e0       	ldi	r18, 0x00	; 0
    13a0:	5c 2d       	mov	r21, r12
    13a2:	59 1b       	sub	r21, r25
    13a4:	81 e0       	ldi	r24, 0x01	; 1
    13a6:	c5 16       	cp	r12, r21
    13a8:	08 f0       	brcs	.+2      	; 0x13ac <__moddi3+0x174>
    13aa:	80 e0       	ldi	r24, 0x00	; 0
    13ac:	28 2b       	or	r18, r24
    13ae:	d1 94       	neg	r13
    13b0:	91 e0       	ldi	r25, 0x01	; 1
    13b2:	1d 14       	cp	r1, r13
    13b4:	08 f0       	brcs	.+2      	; 0x13b8 <__moddi3+0x180>
    13b6:	90 e0       	ldi	r25, 0x00	; 0
    13b8:	4d 2d       	mov	r20, r13
    13ba:	42 1b       	sub	r20, r18
    13bc:	81 e0       	ldi	r24, 0x01	; 1
    13be:	d4 16       	cp	r13, r20
    13c0:	08 f0       	brcs	.+2      	; 0x13c4 <__moddi3+0x18c>
    13c2:	80 e0       	ldi	r24, 0x00	; 0
    13c4:	98 2b       	or	r25, r24
    13c6:	e1 94       	neg	r14
    13c8:	21 e0       	ldi	r18, 0x01	; 1
    13ca:	1e 14       	cp	r1, r14
    13cc:	08 f0       	brcs	.+2      	; 0x13d0 <__moddi3+0x198>
    13ce:	20 e0       	ldi	r18, 0x00	; 0
    13d0:	3e 2d       	mov	r19, r14
    13d2:	39 1b       	sub	r19, r25
    13d4:	81 e0       	ldi	r24, 0x01	; 1
    13d6:	e3 16       	cp	r14, r19
    13d8:	08 f0       	brcs	.+2      	; 0x13dc <__moddi3+0x1a4>
    13da:	80 e0       	ldi	r24, 0x00	; 0
    13dc:	28 2b       	or	r18, r24
    13de:	f1 94       	neg	r15
    13e0:	91 e0       	ldi	r25, 0x01	; 1
    13e2:	1f 14       	cp	r1, r15
    13e4:	08 f0       	brcs	.+2      	; 0x13e8 <__moddi3+0x1b0>
    13e6:	90 e0       	ldi	r25, 0x00	; 0
    13e8:	7f 2d       	mov	r23, r15
    13ea:	72 1b       	sub	r23, r18
    13ec:	27 2f       	mov	r18, r23
    13ee:	81 e0       	ldi	r24, 0x01	; 1
    13f0:	f7 16       	cp	r15, r23
    13f2:	08 f0       	brcs	.+2      	; 0x13f6 <__moddi3+0x1be>
    13f4:	80 e0       	ldi	r24, 0x00	; 0
    13f6:	98 2b       	or	r25, r24
    13f8:	01 95       	neg	r16
    13fa:	11 e0       	ldi	r17, 0x01	; 1
    13fc:	10 16       	cp	r1, r16
    13fe:	08 f0       	brcs	.+2      	; 0x1402 <__moddi3+0x1ca>
    1400:	10 e0       	ldi	r17, 0x00	; 0
    1402:	80 2f       	mov	r24, r16
    1404:	89 1b       	sub	r24, r25
    1406:	98 2f       	mov	r25, r24
    1408:	81 e0       	ldi	r24, 0x01	; 1
    140a:	09 17       	cp	r16, r25
    140c:	08 f0       	brcs	.+2      	; 0x1410 <__moddi3+0x1d8>
    140e:	80 e0       	ldi	r24, 0x00	; 0
    1410:	18 2b       	or	r17, r24
    1412:	87 2d       	mov	r24, r7
    1414:	81 95       	neg	r24
    1416:	81 1b       	sub	r24, r17
    1418:	a9 86       	std	Y+9, r10	; 0x09
    141a:	6a 87       	std	Y+10, r22	; 0x0a
    141c:	5b 87       	std	Y+11, r21	; 0x0b
    141e:	4c 87       	std	Y+12, r20	; 0x0c
    1420:	3d 87       	std	Y+13, r19	; 0x0d
    1422:	2e 87       	std	Y+14, r18	; 0x0e
    1424:	9f 87       	std	Y+15, r25	; 0x0f
    1426:	88 8b       	std	Y+16, r24	; 0x10
    1428:	99 81       	ldd	r25, Y+1	; 0x01
    142a:	2a 81       	ldd	r18, Y+2	; 0x02
    142c:	3b 81       	ldd	r19, Y+3	; 0x03
    142e:	4c 81       	ldd	r20, Y+4	; 0x04
    1430:	5d 81       	ldd	r21, Y+5	; 0x05
    1432:	6e 81       	ldd	r22, Y+6	; 0x06
    1434:	7f 81       	ldd	r23, Y+7	; 0x07
    1436:	a8 85       	ldd	r26, Y+8	; 0x08
    1438:	b9 85       	ldd	r27, Y+9	; 0x09
    143a:	1a 85       	ldd	r17, Y+10	; 0x0a
    143c:	0b 85       	ldd	r16, Y+11	; 0x0b
    143e:	fc 84       	ldd	r15, Y+12	; 0x0c
    1440:	ed 84       	ldd	r14, Y+13	; 0x0d
    1442:	de 84       	ldd	r13, Y+14	; 0x0e
    1444:	cf 84       	ldd	r12, Y+15	; 0x0f
    1446:	b8 88       	ldd	r11, Y+16	; 0x10
    1448:	88 e0       	ldi	r24, 0x08	; 8
    144a:	e9 e1       	ldi	r30, 0x19	; 25
    144c:	8e 2e       	mov	r8, r30
    144e:	91 2c       	mov	r9, r1
    1450:	8c 0e       	add	r8, r28
    1452:	9d 1e       	adc	r9, r29
    1454:	f4 01       	movw	r30, r8
    1456:	68 2e       	mov	r6, r24
    1458:	11 92       	st	Z+, r1
    145a:	6a 94       	dec	r6
    145c:	e9 f7       	brne	.-6      	; 0x1458 <__moddi3+0x220>
    145e:	99 8f       	std	Y+25, r25	; 0x19
    1460:	2a 8f       	std	Y+26, r18	; 0x1a
    1462:	3b 8f       	std	Y+27, r19	; 0x1b
    1464:	4c 8f       	std	Y+28, r20	; 0x1c
    1466:	5d 8f       	std	Y+29, r21	; 0x1d
    1468:	6e 8f       	std	Y+30, r22	; 0x1e
    146a:	7f 8f       	std	Y+31, r23	; 0x1f
    146c:	a8 a3       	std	Y+32, r26	; 0x20
    146e:	9e 01       	movw	r18, r28
    1470:	2f 5d       	subi	r18, 0xDF	; 223
    1472:	3f 4f       	sbci	r19, 0xFF	; 255
    1474:	f9 01       	movw	r30, r18
    1476:	11 92       	st	Z+, r1
    1478:	8a 95       	dec	r24
    147a:	e9 f7       	brne	.-6      	; 0x1476 <__moddi3+0x23e>
    147c:	b9 a3       	std	Y+33, r27	; 0x21
    147e:	1a a3       	std	Y+34, r17	; 0x22
    1480:	0b a3       	std	Y+35, r16	; 0x23
    1482:	fc a2       	std	Y+36, r15	; 0x24
    1484:	ed a2       	std	Y+37, r14	; 0x25
    1486:	de a2       	std	Y+38, r13	; 0x26
    1488:	cf a2       	std	Y+39, r12	; 0x27
    148a:	b8 a6       	std	Y+40, r11	; 0x28
    148c:	29 a0       	ldd	r2, Y+33	; 0x21
    148e:	3a a0       	ldd	r3, Y+34	; 0x22
    1490:	4b a0       	ldd	r4, Y+35	; 0x23
    1492:	5c a0       	ldd	r5, Y+36	; 0x24
    1494:	ad a0       	ldd	r10, Y+37	; 0x25
    1496:	be a0       	ldd	r11, Y+38	; 0x26
    1498:	cf a0       	ldd	r12, Y+39	; 0x27
    149a:	d8 a4       	ldd	r13, Y+40	; 0x28
    149c:	49 8d       	ldd	r20, Y+25	; 0x19
    149e:	5a 8d       	ldd	r21, Y+26	; 0x1a
    14a0:	6b 8d       	ldd	r22, Y+27	; 0x1b
    14a2:	7c 8d       	ldd	r23, Y+28	; 0x1c
    14a4:	e5 96       	adiw	r28, 0x35	; 53
    14a6:	4f af       	std	Y+63, r20	; 0x3f
    14a8:	e5 97       	sbiw	r28, 0x35	; 53
    14aa:	e6 96       	adiw	r28, 0x36	; 54
    14ac:	5f af       	std	Y+63, r21	; 0x3f
    14ae:	e6 97       	sbiw	r28, 0x36	; 54
    14b0:	e7 96       	adiw	r28, 0x37	; 55
    14b2:	6f af       	std	Y+63, r22	; 0x3f
    14b4:	e7 97       	sbiw	r28, 0x37	; 55
    14b6:	e8 96       	adiw	r28, 0x38	; 56
    14b8:	7f af       	std	Y+63, r23	; 0x3f
    14ba:	e8 97       	sbiw	r28, 0x38	; 56
    14bc:	e8 96       	adiw	r28, 0x38	; 56
    14be:	6c ac       	ldd	r6, Y+60	; 0x3c
    14c0:	7d ac       	ldd	r7, Y+61	; 0x3d
    14c2:	8e ac       	ldd	r8, Y+62	; 0x3e
    14c4:	9f ac       	ldd	r9, Y+63	; 0x3f
    14c6:	e8 97       	sbiw	r28, 0x38	; 56
    14c8:	2d 96       	adiw	r28, 0x0d	; 13
    14ca:	6c ae       	std	Y+60, r6	; 0x3c
    14cc:	7d ae       	std	Y+61, r7	; 0x3d
    14ce:	8e ae       	std	Y+62, r8	; 0x3e
    14d0:	9f ae       	std	Y+63, r9	; 0x3f
    14d2:	2d 97       	sbiw	r28, 0x0d	; 13
    14d4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    14d6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    14d8:	2f 8d       	ldd	r18, Y+31	; 0x1f
    14da:	38 a1       	ldd	r19, Y+32	; 0x20
    14dc:	3c 01       	movw	r6, r24
    14de:	49 01       	movw	r8, r18
    14e0:	61 96       	adiw	r28, 0x11	; 17
    14e2:	6c ae       	std	Y+60, r6	; 0x3c
    14e4:	7d ae       	std	Y+61, r7	; 0x3d
    14e6:	8e ae       	std	Y+62, r8	; 0x3e
    14e8:	9f ae       	std	Y+63, r9	; 0x3f
    14ea:	61 97       	sbiw	r28, 0x11	; 17
    14ec:	a1 14       	cp	r10, r1
    14ee:	b1 04       	cpc	r11, r1
    14f0:	c1 04       	cpc	r12, r1
    14f2:	d1 04       	cpc	r13, r1
    14f4:	09 f0       	breq	.+2      	; 0x14f8 <__moddi3+0x2c0>
    14f6:	28 c3       	rjmp	.+1616   	; 0x1b48 <__moddi3+0x910>
    14f8:	62 14       	cp	r6, r2
    14fa:	73 04       	cpc	r7, r3
    14fc:	84 04       	cpc	r8, r4
    14fe:	95 04       	cpc	r9, r5
    1500:	08 f0       	brcs	.+2      	; 0x1504 <__moddi3+0x2cc>
    1502:	0e c1       	rjmp	.+540    	; 0x1720 <__moddi3+0x4e8>
    1504:	00 e0       	ldi	r16, 0x00	; 0
    1506:	20 16       	cp	r2, r16
    1508:	00 e0       	ldi	r16, 0x00	; 0
    150a:	30 06       	cpc	r3, r16
    150c:	01 e0       	ldi	r16, 0x01	; 1
    150e:	40 06       	cpc	r4, r16
    1510:	00 e0       	ldi	r16, 0x00	; 0
    1512:	50 06       	cpc	r5, r16
    1514:	88 f4       	brcc	.+34     	; 0x1538 <__moddi3+0x300>
    1516:	1f ef       	ldi	r17, 0xFF	; 255
    1518:	21 16       	cp	r2, r17
    151a:	31 04       	cpc	r3, r1
    151c:	41 04       	cpc	r4, r1
    151e:	51 04       	cpc	r5, r1
    1520:	39 f0       	breq	.+14     	; 0x1530 <__moddi3+0x2f8>
    1522:	30 f0       	brcs	.+12     	; 0x1530 <__moddi3+0x2f8>
    1524:	88 e0       	ldi	r24, 0x08	; 8
    1526:	e8 2e       	mov	r14, r24
    1528:	f1 2c       	mov	r15, r1
    152a:	01 2d       	mov	r16, r1
    152c:	11 2d       	mov	r17, r1
    152e:	18 c0       	rjmp	.+48     	; 0x1560 <__moddi3+0x328>
    1530:	ee 24       	eor	r14, r14
    1532:	ff 24       	eor	r15, r15
    1534:	87 01       	movw	r16, r14
    1536:	14 c0       	rjmp	.+40     	; 0x1560 <__moddi3+0x328>
    1538:	20 e0       	ldi	r18, 0x00	; 0
    153a:	22 16       	cp	r2, r18
    153c:	20 e0       	ldi	r18, 0x00	; 0
    153e:	32 06       	cpc	r3, r18
    1540:	20 e0       	ldi	r18, 0x00	; 0
    1542:	42 06       	cpc	r4, r18
    1544:	21 e0       	ldi	r18, 0x01	; 1
    1546:	52 06       	cpc	r5, r18
    1548:	30 f0       	brcs	.+12     	; 0x1556 <__moddi3+0x31e>
    154a:	b8 e1       	ldi	r27, 0x18	; 24
    154c:	eb 2e       	mov	r14, r27
    154e:	f1 2c       	mov	r15, r1
    1550:	01 2d       	mov	r16, r1
    1552:	11 2d       	mov	r17, r1
    1554:	05 c0       	rjmp	.+10     	; 0x1560 <__moddi3+0x328>
    1556:	a0 e1       	ldi	r26, 0x10	; 16
    1558:	ea 2e       	mov	r14, r26
    155a:	f1 2c       	mov	r15, r1
    155c:	01 2d       	mov	r16, r1
    155e:	11 2d       	mov	r17, r1
    1560:	d2 01       	movw	r26, r4
    1562:	c1 01       	movw	r24, r2
    1564:	0e 2c       	mov	r0, r14
    1566:	04 c0       	rjmp	.+8      	; 0x1570 <__moddi3+0x338>
    1568:	b6 95       	lsr	r27
    156a:	a7 95       	ror	r26
    156c:	97 95       	ror	r25
    156e:	87 95       	ror	r24
    1570:	0a 94       	dec	r0
    1572:	d2 f7       	brpl	.-12     	; 0x1568 <__moddi3+0x330>
    1574:	8b 51       	subi	r24, 0x1B	; 27
    1576:	9f 4f       	sbci	r25, 0xFF	; 255
    1578:	dc 01       	movw	r26, r24
    157a:	2c 91       	ld	r18, X
    157c:	80 e2       	ldi	r24, 0x20	; 32
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	a0 e0       	ldi	r26, 0x00	; 0
    1582:	b0 e0       	ldi	r27, 0x00	; 0
    1584:	8e 19       	sub	r24, r14
    1586:	9f 09       	sbc	r25, r15
    1588:	a0 0b       	sbc	r26, r16
    158a:	b1 0b       	sbc	r27, r17
    158c:	5c 01       	movw	r10, r24
    158e:	6d 01       	movw	r12, r26
    1590:	a2 1a       	sub	r10, r18
    1592:	b1 08       	sbc	r11, r1
    1594:	c1 08       	sbc	r12, r1
    1596:	d1 08       	sbc	r13, r1
    1598:	65 96       	adiw	r28, 0x15	; 21
    159a:	ac ae       	std	Y+60, r10	; 0x3c
    159c:	bd ae       	std	Y+61, r11	; 0x3d
    159e:	ce ae       	std	Y+62, r12	; 0x3e
    15a0:	df ae       	std	Y+63, r13	; 0x3f
    15a2:	65 97       	sbiw	r28, 0x15	; 21
    15a4:	a1 14       	cp	r10, r1
    15a6:	b1 04       	cpc	r11, r1
    15a8:	c1 04       	cpc	r12, r1
    15aa:	d1 04       	cpc	r13, r1
    15ac:	09 f4       	brne	.+2      	; 0x15b0 <__moddi3+0x378>
    15ae:	45 c0       	rjmp	.+138    	; 0x163a <__moddi3+0x402>
    15b0:	62 96       	adiw	r28, 0x12	; 18
    15b2:	6f ad       	ldd	r22, Y+63	; 0x3f
    15b4:	62 97       	sbiw	r28, 0x12	; 18
    15b6:	06 2e       	mov	r0, r22
    15b8:	04 c0       	rjmp	.+8      	; 0x15c2 <__moddi3+0x38a>
    15ba:	22 0c       	add	r2, r2
    15bc:	33 1c       	adc	r3, r3
    15be:	44 1c       	adc	r4, r4
    15c0:	55 1c       	adc	r5, r5
    15c2:	0a 94       	dec	r0
    15c4:	d2 f7       	brpl	.-12     	; 0x15ba <__moddi3+0x382>
    15c6:	a4 01       	movw	r20, r8
    15c8:	93 01       	movw	r18, r6
    15ca:	06 2e       	mov	r0, r22
    15cc:	04 c0       	rjmp	.+8      	; 0x15d6 <__moddi3+0x39e>
    15ce:	22 0f       	add	r18, r18
    15d0:	33 1f       	adc	r19, r19
    15d2:	44 1f       	adc	r20, r20
    15d4:	55 1f       	adc	r21, r21
    15d6:	0a 94       	dec	r0
    15d8:	d2 f7       	brpl	.-12     	; 0x15ce <__moddi3+0x396>
    15da:	80 e2       	ldi	r24, 0x20	; 32
    15dc:	90 e0       	ldi	r25, 0x00	; 0
    15de:	8a 19       	sub	r24, r10
    15e0:	9b 09       	sbc	r25, r11
    15e2:	e8 96       	adiw	r28, 0x38	; 56
    15e4:	cc ac       	ldd	r12, Y+60	; 0x3c
    15e6:	dd ac       	ldd	r13, Y+61	; 0x3d
    15e8:	ee ac       	ldd	r14, Y+62	; 0x3e
    15ea:	ff ac       	ldd	r15, Y+63	; 0x3f
    15ec:	e8 97       	sbiw	r28, 0x38	; 56
    15ee:	04 c0       	rjmp	.+8      	; 0x15f8 <__moddi3+0x3c0>
    15f0:	f6 94       	lsr	r15
    15f2:	e7 94       	ror	r14
    15f4:	d7 94       	ror	r13
    15f6:	c7 94       	ror	r12
    15f8:	8a 95       	dec	r24
    15fa:	d2 f7       	brpl	.-12     	; 0x15f0 <__moddi3+0x3b8>
    15fc:	87 01       	movw	r16, r14
    15fe:	76 01       	movw	r14, r12
    1600:	e2 2a       	or	r14, r18
    1602:	f3 2a       	or	r15, r19
    1604:	04 2b       	or	r16, r20
    1606:	15 2b       	or	r17, r21
    1608:	61 96       	adiw	r28, 0x11	; 17
    160a:	ec ae       	std	Y+60, r14	; 0x3c
    160c:	fd ae       	std	Y+61, r15	; 0x3d
    160e:	0e af       	std	Y+62, r16	; 0x3e
    1610:	1f af       	std	Y+63, r17	; 0x3f
    1612:	61 97       	sbiw	r28, 0x11	; 17
    1614:	e8 96       	adiw	r28, 0x38	; 56
    1616:	0c ad       	ldd	r16, Y+60	; 0x3c
    1618:	1d ad       	ldd	r17, Y+61	; 0x3d
    161a:	2e ad       	ldd	r18, Y+62	; 0x3e
    161c:	3f ad       	ldd	r19, Y+63	; 0x3f
    161e:	e8 97       	sbiw	r28, 0x38	; 56
    1620:	04 c0       	rjmp	.+8      	; 0x162a <__moddi3+0x3f2>
    1622:	00 0f       	add	r16, r16
    1624:	11 1f       	adc	r17, r17
    1626:	22 1f       	adc	r18, r18
    1628:	33 1f       	adc	r19, r19
    162a:	6a 95       	dec	r22
    162c:	d2 f7       	brpl	.-12     	; 0x1622 <__moddi3+0x3ea>
    162e:	2d 96       	adiw	r28, 0x0d	; 13
    1630:	0c af       	std	Y+60, r16	; 0x3c
    1632:	1d af       	std	Y+61, r17	; 0x3d
    1634:	2e af       	std	Y+62, r18	; 0x3e
    1636:	3f af       	std	Y+63, r19	; 0x3f
    1638:	2d 97       	sbiw	r28, 0x0d	; 13
    163a:	32 01       	movw	r6, r4
    163c:	88 24       	eor	r8, r8
    163e:	99 24       	eor	r9, r9
    1640:	a2 01       	movw	r20, r4
    1642:	91 01       	movw	r18, r2
    1644:	40 70       	andi	r20, 0x00	; 0
    1646:	50 70       	andi	r21, 0x00	; 0
    1648:	69 96       	adiw	r28, 0x19	; 25
    164a:	2c af       	std	Y+60, r18	; 0x3c
    164c:	3d af       	std	Y+61, r19	; 0x3d
    164e:	4e af       	std	Y+62, r20	; 0x3e
    1650:	5f af       	std	Y+63, r21	; 0x3f
    1652:	69 97       	sbiw	r28, 0x19	; 25
    1654:	61 96       	adiw	r28, 0x11	; 17
    1656:	6c ad       	ldd	r22, Y+60	; 0x3c
    1658:	7d ad       	ldd	r23, Y+61	; 0x3d
    165a:	8e ad       	ldd	r24, Y+62	; 0x3e
    165c:	9f ad       	ldd	r25, Y+63	; 0x3f
    165e:	61 97       	sbiw	r28, 0x11	; 17
    1660:	a4 01       	movw	r20, r8
    1662:	93 01       	movw	r18, r6
    1664:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    1668:	7b 01       	movw	r14, r22
    166a:	8c 01       	movw	r16, r24
    166c:	61 96       	adiw	r28, 0x11	; 17
    166e:	6c ad       	ldd	r22, Y+60	; 0x3c
    1670:	7d ad       	ldd	r23, Y+61	; 0x3d
    1672:	8e ad       	ldd	r24, Y+62	; 0x3e
    1674:	9f ad       	ldd	r25, Y+63	; 0x3f
    1676:	61 97       	sbiw	r28, 0x11	; 17
    1678:	a4 01       	movw	r20, r8
    167a:	93 01       	movw	r18, r6
    167c:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    1680:	ca 01       	movw	r24, r20
    1682:	b9 01       	movw	r22, r18
    1684:	69 96       	adiw	r28, 0x19	; 25
    1686:	2c ad       	ldd	r18, Y+60	; 0x3c
    1688:	3d ad       	ldd	r19, Y+61	; 0x3d
    168a:	4e ad       	ldd	r20, Y+62	; 0x3e
    168c:	5f ad       	ldd	r21, Y+63	; 0x3f
    168e:	69 97       	sbiw	r28, 0x19	; 25
    1690:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    1694:	9b 01       	movw	r18, r22
    1696:	ac 01       	movw	r20, r24
    1698:	87 01       	movw	r16, r14
    169a:	ff 24       	eor	r15, r15
    169c:	ee 24       	eor	r14, r14
    169e:	2d 96       	adiw	r28, 0x0d	; 13
    16a0:	ac ac       	ldd	r10, Y+60	; 0x3c
    16a2:	bd ac       	ldd	r11, Y+61	; 0x3d
    16a4:	ce ac       	ldd	r12, Y+62	; 0x3e
    16a6:	df ac       	ldd	r13, Y+63	; 0x3f
    16a8:	2d 97       	sbiw	r28, 0x0d	; 13
    16aa:	c6 01       	movw	r24, r12
    16ac:	aa 27       	eor	r26, r26
    16ae:	bb 27       	eor	r27, r27
    16b0:	57 01       	movw	r10, r14
    16b2:	68 01       	movw	r12, r16
    16b4:	a8 2a       	or	r10, r24
    16b6:	b9 2a       	or	r11, r25
    16b8:	ca 2a       	or	r12, r26
    16ba:	db 2a       	or	r13, r27
    16bc:	a2 16       	cp	r10, r18
    16be:	b3 06       	cpc	r11, r19
    16c0:	c4 06       	cpc	r12, r20
    16c2:	d5 06       	cpc	r13, r21
    16c4:	90 f4       	brcc	.+36     	; 0x16ea <__moddi3+0x4b2>
    16c6:	a2 0c       	add	r10, r2
    16c8:	b3 1c       	adc	r11, r3
    16ca:	c4 1c       	adc	r12, r4
    16cc:	d5 1c       	adc	r13, r5
    16ce:	a2 14       	cp	r10, r2
    16d0:	b3 04       	cpc	r11, r3
    16d2:	c4 04       	cpc	r12, r4
    16d4:	d5 04       	cpc	r13, r5
    16d6:	48 f0       	brcs	.+18     	; 0x16ea <__moddi3+0x4b2>
    16d8:	a2 16       	cp	r10, r18
    16da:	b3 06       	cpc	r11, r19
    16dc:	c4 06       	cpc	r12, r20
    16de:	d5 06       	cpc	r13, r21
    16e0:	20 f4       	brcc	.+8      	; 0x16ea <__moddi3+0x4b2>
    16e2:	a2 0c       	add	r10, r2
    16e4:	b3 1c       	adc	r11, r3
    16e6:	c4 1c       	adc	r12, r4
    16e8:	d5 1c       	adc	r13, r5
    16ea:	a2 1a       	sub	r10, r18
    16ec:	b3 0a       	sbc	r11, r19
    16ee:	c4 0a       	sbc	r12, r20
    16f0:	d5 0a       	sbc	r13, r21
    16f2:	c6 01       	movw	r24, r12
    16f4:	b5 01       	movw	r22, r10
    16f6:	a4 01       	movw	r20, r8
    16f8:	93 01       	movw	r18, r6
    16fa:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    16fe:	7b 01       	movw	r14, r22
    1700:	8c 01       	movw	r16, r24
    1702:	c6 01       	movw	r24, r12
    1704:	b5 01       	movw	r22, r10
    1706:	a4 01       	movw	r20, r8
    1708:	93 01       	movw	r18, r6
    170a:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    170e:	ca 01       	movw	r24, r20
    1710:	b9 01       	movw	r22, r18
    1712:	69 96       	adiw	r28, 0x19	; 25
    1714:	2c ad       	ldd	r18, Y+60	; 0x3c
    1716:	3d ad       	ldd	r19, Y+61	; 0x3d
    1718:	4e ad       	ldd	r20, Y+62	; 0x3e
    171a:	5f ad       	ldd	r21, Y+63	; 0x3f
    171c:	69 97       	sbiw	r28, 0x19	; 25
    171e:	c8 c1       	rjmp	.+912    	; 0x1ab0 <__moddi3+0x878>
    1720:	21 14       	cp	r2, r1
    1722:	31 04       	cpc	r3, r1
    1724:	41 04       	cpc	r4, r1
    1726:	51 04       	cpc	r5, r1
    1728:	71 f4       	brne	.+28     	; 0x1746 <__moddi3+0x50e>
    172a:	61 e0       	ldi	r22, 0x01	; 1
    172c:	70 e0       	ldi	r23, 0x00	; 0
    172e:	80 e0       	ldi	r24, 0x00	; 0
    1730:	90 e0       	ldi	r25, 0x00	; 0
    1732:	20 e0       	ldi	r18, 0x00	; 0
    1734:	30 e0       	ldi	r19, 0x00	; 0
    1736:	40 e0       	ldi	r20, 0x00	; 0
    1738:	50 e0       	ldi	r21, 0x00	; 0
    173a:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    173e:	c9 01       	movw	r24, r18
    1740:	da 01       	movw	r26, r20
    1742:	1c 01       	movw	r2, r24
    1744:	2d 01       	movw	r4, r26
    1746:	00 e0       	ldi	r16, 0x00	; 0
    1748:	20 16       	cp	r2, r16
    174a:	00 e0       	ldi	r16, 0x00	; 0
    174c:	30 06       	cpc	r3, r16
    174e:	01 e0       	ldi	r16, 0x01	; 1
    1750:	40 06       	cpc	r4, r16
    1752:	00 e0       	ldi	r16, 0x00	; 0
    1754:	50 06       	cpc	r5, r16
    1756:	88 f4       	brcc	.+34     	; 0x177a <__moddi3+0x542>
    1758:	1f ef       	ldi	r17, 0xFF	; 255
    175a:	21 16       	cp	r2, r17
    175c:	31 04       	cpc	r3, r1
    175e:	41 04       	cpc	r4, r1
    1760:	51 04       	cpc	r5, r1
    1762:	39 f0       	breq	.+14     	; 0x1772 <__moddi3+0x53a>
    1764:	30 f0       	brcs	.+12     	; 0x1772 <__moddi3+0x53a>
    1766:	68 e0       	ldi	r22, 0x08	; 8
    1768:	e6 2e       	mov	r14, r22
    176a:	f1 2c       	mov	r15, r1
    176c:	01 2d       	mov	r16, r1
    176e:	11 2d       	mov	r17, r1
    1770:	18 c0       	rjmp	.+48     	; 0x17a2 <__moddi3+0x56a>
    1772:	ee 24       	eor	r14, r14
    1774:	ff 24       	eor	r15, r15
    1776:	87 01       	movw	r16, r14
    1778:	14 c0       	rjmp	.+40     	; 0x17a2 <__moddi3+0x56a>
    177a:	20 e0       	ldi	r18, 0x00	; 0
    177c:	22 16       	cp	r2, r18
    177e:	20 e0       	ldi	r18, 0x00	; 0
    1780:	32 06       	cpc	r3, r18
    1782:	20 e0       	ldi	r18, 0x00	; 0
    1784:	42 06       	cpc	r4, r18
    1786:	21 e0       	ldi	r18, 0x01	; 1
    1788:	52 06       	cpc	r5, r18
    178a:	30 f0       	brcs	.+12     	; 0x1798 <__moddi3+0x560>
    178c:	58 e1       	ldi	r21, 0x18	; 24
    178e:	e5 2e       	mov	r14, r21
    1790:	f1 2c       	mov	r15, r1
    1792:	01 2d       	mov	r16, r1
    1794:	11 2d       	mov	r17, r1
    1796:	05 c0       	rjmp	.+10     	; 0x17a2 <__moddi3+0x56a>
    1798:	40 e1       	ldi	r20, 0x10	; 16
    179a:	e4 2e       	mov	r14, r20
    179c:	f1 2c       	mov	r15, r1
    179e:	01 2d       	mov	r16, r1
    17a0:	11 2d       	mov	r17, r1
    17a2:	d2 01       	movw	r26, r4
    17a4:	c1 01       	movw	r24, r2
    17a6:	0e 2c       	mov	r0, r14
    17a8:	04 c0       	rjmp	.+8      	; 0x17b2 <__moddi3+0x57a>
    17aa:	b6 95       	lsr	r27
    17ac:	a7 95       	ror	r26
    17ae:	97 95       	ror	r25
    17b0:	87 95       	ror	r24
    17b2:	0a 94       	dec	r0
    17b4:	d2 f7       	brpl	.-12     	; 0x17aa <__moddi3+0x572>
    17b6:	8b 51       	subi	r24, 0x1B	; 27
    17b8:	9f 4f       	sbci	r25, 0xFF	; 255
    17ba:	dc 01       	movw	r26, r24
    17bc:	2c 91       	ld	r18, X
    17be:	30 e2       	ldi	r19, 0x20	; 32
    17c0:	a3 2e       	mov	r10, r19
    17c2:	b1 2c       	mov	r11, r1
    17c4:	c1 2c       	mov	r12, r1
    17c6:	d1 2c       	mov	r13, r1
    17c8:	d6 01       	movw	r26, r12
    17ca:	c5 01       	movw	r24, r10
    17cc:	8e 19       	sub	r24, r14
    17ce:	9f 09       	sbc	r25, r15
    17d0:	a0 0b       	sbc	r26, r16
    17d2:	b1 0b       	sbc	r27, r17
    17d4:	7c 01       	movw	r14, r24
    17d6:	8d 01       	movw	r16, r26
    17d8:	e2 1a       	sub	r14, r18
    17da:	f1 08       	sbc	r15, r1
    17dc:	01 09       	sbc	r16, r1
    17de:	11 09       	sbc	r17, r1
    17e0:	65 96       	adiw	r28, 0x15	; 21
    17e2:	ec ae       	std	Y+60, r14	; 0x3c
    17e4:	fd ae       	std	Y+61, r15	; 0x3d
    17e6:	0e af       	std	Y+62, r16	; 0x3e
    17e8:	1f af       	std	Y+63, r17	; 0x3f
    17ea:	65 97       	sbiw	r28, 0x15	; 21
    17ec:	e1 14       	cp	r14, r1
    17ee:	f1 04       	cpc	r15, r1
    17f0:	01 05       	cpc	r16, r1
    17f2:	11 05       	cpc	r17, r1
    17f4:	39 f4       	brne	.+14     	; 0x1804 <__moddi3+0x5cc>
    17f6:	64 01       	movw	r12, r8
    17f8:	53 01       	movw	r10, r6
    17fa:	a2 18       	sub	r10, r2
    17fc:	b3 08       	sbc	r11, r3
    17fe:	c4 08       	sbc	r12, r4
    1800:	d5 08       	sbc	r13, r5
    1802:	ec c0       	rjmp	.+472    	; 0x19dc <__moddi3+0x7a4>
    1804:	62 96       	adiw	r28, 0x12	; 18
    1806:	ff ac       	ldd	r15, Y+63	; 0x3f
    1808:	62 97       	sbiw	r28, 0x12	; 18
    180a:	e4 96       	adiw	r28, 0x34	; 52
    180c:	ff ae       	std	Y+63, r15	; 0x3f
    180e:	e4 97       	sbiw	r28, 0x34	; 52
    1810:	0f 2c       	mov	r0, r15
    1812:	04 c0       	rjmp	.+8      	; 0x181c <__moddi3+0x5e4>
    1814:	22 0c       	add	r2, r2
    1816:	33 1c       	adc	r3, r3
    1818:	44 1c       	adc	r4, r4
    181a:	55 1c       	adc	r5, r5
    181c:	0a 94       	dec	r0
    181e:	d2 f7       	brpl	.-12     	; 0x1814 <__moddi3+0x5dc>
    1820:	8a 2d       	mov	r24, r10
    1822:	8f 19       	sub	r24, r15
    1824:	64 01       	movw	r12, r8
    1826:	53 01       	movw	r10, r6
    1828:	08 2e       	mov	r0, r24
    182a:	04 c0       	rjmp	.+8      	; 0x1834 <__moddi3+0x5fc>
    182c:	d6 94       	lsr	r13
    182e:	c7 94       	ror	r12
    1830:	b7 94       	ror	r11
    1832:	a7 94       	ror	r10
    1834:	0a 94       	dec	r0
    1836:	d2 f7       	brpl	.-12     	; 0x182c <__moddi3+0x5f4>
    1838:	a4 01       	movw	r20, r8
    183a:	93 01       	movw	r18, r6
    183c:	04 c0       	rjmp	.+8      	; 0x1846 <__moddi3+0x60e>
    183e:	22 0f       	add	r18, r18
    1840:	33 1f       	adc	r19, r19
    1842:	44 1f       	adc	r20, r20
    1844:	55 1f       	adc	r21, r21
    1846:	fa 94       	dec	r15
    1848:	d2 f7       	brpl	.-12     	; 0x183e <__moddi3+0x606>
    184a:	e8 96       	adiw	r28, 0x38	; 56
    184c:	6c ac       	ldd	r6, Y+60	; 0x3c
    184e:	7d ac       	ldd	r7, Y+61	; 0x3d
    1850:	8e ac       	ldd	r8, Y+62	; 0x3e
    1852:	9f ac       	ldd	r9, Y+63	; 0x3f
    1854:	e8 97       	sbiw	r28, 0x38	; 56
    1856:	04 c0       	rjmp	.+8      	; 0x1860 <__moddi3+0x628>
    1858:	96 94       	lsr	r9
    185a:	87 94       	ror	r8
    185c:	77 94       	ror	r7
    185e:	67 94       	ror	r6
    1860:	8a 95       	dec	r24
    1862:	d2 f7       	brpl	.-12     	; 0x1858 <__moddi3+0x620>
    1864:	84 01       	movw	r16, r8
    1866:	73 01       	movw	r14, r6
    1868:	e2 2a       	or	r14, r18
    186a:	f3 2a       	or	r15, r19
    186c:	04 2b       	or	r16, r20
    186e:	15 2b       	or	r17, r21
    1870:	29 96       	adiw	r28, 0x09	; 9
    1872:	ec ae       	std	Y+60, r14	; 0x3c
    1874:	fd ae       	std	Y+61, r15	; 0x3d
    1876:	0e af       	std	Y+62, r16	; 0x3e
    1878:	1f af       	std	Y+63, r17	; 0x3f
    187a:	29 97       	sbiw	r28, 0x09	; 9
    187c:	32 01       	movw	r6, r4
    187e:	88 24       	eor	r8, r8
    1880:	99 24       	eor	r9, r9
    1882:	92 01       	movw	r18, r4
    1884:	81 01       	movw	r16, r2
    1886:	20 70       	andi	r18, 0x00	; 0
    1888:	30 70       	andi	r19, 0x00	; 0
    188a:	6d 96       	adiw	r28, 0x1d	; 29
    188c:	0c af       	std	Y+60, r16	; 0x3c
    188e:	1d af       	std	Y+61, r17	; 0x3d
    1890:	2e af       	std	Y+62, r18	; 0x3e
    1892:	3f af       	std	Y+63, r19	; 0x3f
    1894:	6d 97       	sbiw	r28, 0x1d	; 29
    1896:	c6 01       	movw	r24, r12
    1898:	b5 01       	movw	r22, r10
    189a:	a4 01       	movw	r20, r8
    189c:	93 01       	movw	r18, r6
    189e:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    18a2:	7b 01       	movw	r14, r22
    18a4:	8c 01       	movw	r16, r24
    18a6:	c6 01       	movw	r24, r12
    18a8:	b5 01       	movw	r22, r10
    18aa:	a4 01       	movw	r20, r8
    18ac:	93 01       	movw	r18, r6
    18ae:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    18b2:	ca 01       	movw	r24, r20
    18b4:	b9 01       	movw	r22, r18
    18b6:	6d 96       	adiw	r28, 0x1d	; 29
    18b8:	2c ad       	ldd	r18, Y+60	; 0x3c
    18ba:	3d ad       	ldd	r19, Y+61	; 0x3d
    18bc:	4e ad       	ldd	r20, Y+62	; 0x3e
    18be:	5f ad       	ldd	r21, Y+63	; 0x3f
    18c0:	6d 97       	sbiw	r28, 0x1d	; 29
    18c2:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    18c6:	9b 01       	movw	r18, r22
    18c8:	ac 01       	movw	r20, r24
    18ca:	87 01       	movw	r16, r14
    18cc:	ff 24       	eor	r15, r15
    18ce:	ee 24       	eor	r14, r14
    18d0:	29 96       	adiw	r28, 0x09	; 9
    18d2:	ac ac       	ldd	r10, Y+60	; 0x3c
    18d4:	bd ac       	ldd	r11, Y+61	; 0x3d
    18d6:	ce ac       	ldd	r12, Y+62	; 0x3e
    18d8:	df ac       	ldd	r13, Y+63	; 0x3f
    18da:	29 97       	sbiw	r28, 0x09	; 9
    18dc:	c6 01       	movw	r24, r12
    18de:	aa 27       	eor	r26, r26
    18e0:	bb 27       	eor	r27, r27
    18e2:	5c 01       	movw	r10, r24
    18e4:	6d 01       	movw	r12, r26
    18e6:	ae 28       	or	r10, r14
    18e8:	bf 28       	or	r11, r15
    18ea:	c0 2a       	or	r12, r16
    18ec:	d1 2a       	or	r13, r17
    18ee:	a2 16       	cp	r10, r18
    18f0:	b3 06       	cpc	r11, r19
    18f2:	c4 06       	cpc	r12, r20
    18f4:	d5 06       	cpc	r13, r21
    18f6:	90 f4       	brcc	.+36     	; 0x191c <__moddi3+0x6e4>
    18f8:	a2 0c       	add	r10, r2
    18fa:	b3 1c       	adc	r11, r3
    18fc:	c4 1c       	adc	r12, r4
    18fe:	d5 1c       	adc	r13, r5
    1900:	a2 14       	cp	r10, r2
    1902:	b3 04       	cpc	r11, r3
    1904:	c4 04       	cpc	r12, r4
    1906:	d5 04       	cpc	r13, r5
    1908:	48 f0       	brcs	.+18     	; 0x191c <__moddi3+0x6e4>
    190a:	a2 16       	cp	r10, r18
    190c:	b3 06       	cpc	r11, r19
    190e:	c4 06       	cpc	r12, r20
    1910:	d5 06       	cpc	r13, r21
    1912:	20 f4       	brcc	.+8      	; 0x191c <__moddi3+0x6e4>
    1914:	a2 0c       	add	r10, r2
    1916:	b3 1c       	adc	r11, r3
    1918:	c4 1c       	adc	r12, r4
    191a:	d5 1c       	adc	r13, r5
    191c:	a2 1a       	sub	r10, r18
    191e:	b3 0a       	sbc	r11, r19
    1920:	c4 0a       	sbc	r12, r20
    1922:	d5 0a       	sbc	r13, r21
    1924:	c6 01       	movw	r24, r12
    1926:	b5 01       	movw	r22, r10
    1928:	a4 01       	movw	r20, r8
    192a:	93 01       	movw	r18, r6
    192c:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    1930:	7b 01       	movw	r14, r22
    1932:	8c 01       	movw	r16, r24
    1934:	c6 01       	movw	r24, r12
    1936:	b5 01       	movw	r22, r10
    1938:	a4 01       	movw	r20, r8
    193a:	93 01       	movw	r18, r6
    193c:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    1940:	ca 01       	movw	r24, r20
    1942:	b9 01       	movw	r22, r18
    1944:	6d 96       	adiw	r28, 0x1d	; 29
    1946:	2c ad       	ldd	r18, Y+60	; 0x3c
    1948:	3d ad       	ldd	r19, Y+61	; 0x3d
    194a:	4e ad       	ldd	r20, Y+62	; 0x3e
    194c:	5f ad       	ldd	r21, Y+63	; 0x3f
    194e:	6d 97       	sbiw	r28, 0x1d	; 29
    1950:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    1954:	9b 01       	movw	r18, r22
    1956:	ac 01       	movw	r20, r24
    1958:	87 01       	movw	r16, r14
    195a:	ff 24       	eor	r15, r15
    195c:	ee 24       	eor	r14, r14
    195e:	29 96       	adiw	r28, 0x09	; 9
    1960:	8c ad       	ldd	r24, Y+60	; 0x3c
    1962:	9d ad       	ldd	r25, Y+61	; 0x3d
    1964:	ae ad       	ldd	r26, Y+62	; 0x3e
    1966:	bf ad       	ldd	r27, Y+63	; 0x3f
    1968:	29 97       	sbiw	r28, 0x09	; 9
    196a:	a0 70       	andi	r26, 0x00	; 0
    196c:	b0 70       	andi	r27, 0x00	; 0
    196e:	57 01       	movw	r10, r14
    1970:	68 01       	movw	r12, r16
    1972:	a8 2a       	or	r10, r24
    1974:	b9 2a       	or	r11, r25
    1976:	ca 2a       	or	r12, r26
    1978:	db 2a       	or	r13, r27
    197a:	a2 16       	cp	r10, r18
    197c:	b3 06       	cpc	r11, r19
    197e:	c4 06       	cpc	r12, r20
    1980:	d5 06       	cpc	r13, r21
    1982:	90 f4       	brcc	.+36     	; 0x19a8 <__moddi3+0x770>
    1984:	a2 0c       	add	r10, r2
    1986:	b3 1c       	adc	r11, r3
    1988:	c4 1c       	adc	r12, r4
    198a:	d5 1c       	adc	r13, r5
    198c:	a2 14       	cp	r10, r2
    198e:	b3 04       	cpc	r11, r3
    1990:	c4 04       	cpc	r12, r4
    1992:	d5 04       	cpc	r13, r5
    1994:	48 f0       	brcs	.+18     	; 0x19a8 <__moddi3+0x770>
    1996:	a2 16       	cp	r10, r18
    1998:	b3 06       	cpc	r11, r19
    199a:	c4 06       	cpc	r12, r20
    199c:	d5 06       	cpc	r13, r21
    199e:	20 f4       	brcc	.+8      	; 0x19a8 <__moddi3+0x770>
    19a0:	a2 0c       	add	r10, r2
    19a2:	b3 1c       	adc	r11, r3
    19a4:	c4 1c       	adc	r12, r4
    19a6:	d5 1c       	adc	r13, r5
    19a8:	e8 96       	adiw	r28, 0x38	; 56
    19aa:	ec ac       	ldd	r14, Y+60	; 0x3c
    19ac:	fd ac       	ldd	r15, Y+61	; 0x3d
    19ae:	0e ad       	ldd	r16, Y+62	; 0x3e
    19b0:	1f ad       	ldd	r17, Y+63	; 0x3f
    19b2:	e8 97       	sbiw	r28, 0x38	; 56
    19b4:	e4 96       	adiw	r28, 0x34	; 52
    19b6:	0f ac       	ldd	r0, Y+63	; 0x3f
    19b8:	e4 97       	sbiw	r28, 0x34	; 52
    19ba:	04 c0       	rjmp	.+8      	; 0x19c4 <__moddi3+0x78c>
    19bc:	ee 0c       	add	r14, r14
    19be:	ff 1c       	adc	r15, r15
    19c0:	00 1f       	adc	r16, r16
    19c2:	11 1f       	adc	r17, r17
    19c4:	0a 94       	dec	r0
    19c6:	d2 f7       	brpl	.-12     	; 0x19bc <__moddi3+0x784>
    19c8:	2d 96       	adiw	r28, 0x0d	; 13
    19ca:	ec ae       	std	Y+60, r14	; 0x3c
    19cc:	fd ae       	std	Y+61, r15	; 0x3d
    19ce:	0e af       	std	Y+62, r16	; 0x3e
    19d0:	1f af       	std	Y+63, r17	; 0x3f
    19d2:	2d 97       	sbiw	r28, 0x0d	; 13
    19d4:	a2 1a       	sub	r10, r18
    19d6:	b3 0a       	sbc	r11, r19
    19d8:	c4 0a       	sbc	r12, r20
    19da:	d5 0a       	sbc	r13, r21
    19dc:	32 01       	movw	r6, r4
    19de:	88 24       	eor	r8, r8
    19e0:	99 24       	eor	r9, r9
    19e2:	92 01       	movw	r18, r4
    19e4:	81 01       	movw	r16, r2
    19e6:	20 70       	andi	r18, 0x00	; 0
    19e8:	30 70       	andi	r19, 0x00	; 0
    19ea:	a1 96       	adiw	r28, 0x21	; 33
    19ec:	0c af       	std	Y+60, r16	; 0x3c
    19ee:	1d af       	std	Y+61, r17	; 0x3d
    19f0:	2e af       	std	Y+62, r18	; 0x3e
    19f2:	3f af       	std	Y+63, r19	; 0x3f
    19f4:	a1 97       	sbiw	r28, 0x21	; 33
    19f6:	c6 01       	movw	r24, r12
    19f8:	b5 01       	movw	r22, r10
    19fa:	a4 01       	movw	r20, r8
    19fc:	93 01       	movw	r18, r6
    19fe:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    1a02:	7b 01       	movw	r14, r22
    1a04:	8c 01       	movw	r16, r24
    1a06:	c6 01       	movw	r24, r12
    1a08:	b5 01       	movw	r22, r10
    1a0a:	a4 01       	movw	r20, r8
    1a0c:	93 01       	movw	r18, r6
    1a0e:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    1a12:	ca 01       	movw	r24, r20
    1a14:	b9 01       	movw	r22, r18
    1a16:	a1 96       	adiw	r28, 0x21	; 33
    1a18:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a1a:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a1c:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a1e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a20:	a1 97       	sbiw	r28, 0x21	; 33
    1a22:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    1a26:	9b 01       	movw	r18, r22
    1a28:	ac 01       	movw	r20, r24
    1a2a:	87 01       	movw	r16, r14
    1a2c:	ff 24       	eor	r15, r15
    1a2e:	ee 24       	eor	r14, r14
    1a30:	2d 96       	adiw	r28, 0x0d	; 13
    1a32:	ac ac       	ldd	r10, Y+60	; 0x3c
    1a34:	bd ac       	ldd	r11, Y+61	; 0x3d
    1a36:	ce ac       	ldd	r12, Y+62	; 0x3e
    1a38:	df ac       	ldd	r13, Y+63	; 0x3f
    1a3a:	2d 97       	sbiw	r28, 0x0d	; 13
    1a3c:	c6 01       	movw	r24, r12
    1a3e:	aa 27       	eor	r26, r26
    1a40:	bb 27       	eor	r27, r27
    1a42:	57 01       	movw	r10, r14
    1a44:	68 01       	movw	r12, r16
    1a46:	a8 2a       	or	r10, r24
    1a48:	b9 2a       	or	r11, r25
    1a4a:	ca 2a       	or	r12, r26
    1a4c:	db 2a       	or	r13, r27
    1a4e:	a2 16       	cp	r10, r18
    1a50:	b3 06       	cpc	r11, r19
    1a52:	c4 06       	cpc	r12, r20
    1a54:	d5 06       	cpc	r13, r21
    1a56:	90 f4       	brcc	.+36     	; 0x1a7c <__moddi3+0x844>
    1a58:	a2 0c       	add	r10, r2
    1a5a:	b3 1c       	adc	r11, r3
    1a5c:	c4 1c       	adc	r12, r4
    1a5e:	d5 1c       	adc	r13, r5
    1a60:	a2 14       	cp	r10, r2
    1a62:	b3 04       	cpc	r11, r3
    1a64:	c4 04       	cpc	r12, r4
    1a66:	d5 04       	cpc	r13, r5
    1a68:	48 f0       	brcs	.+18     	; 0x1a7c <__moddi3+0x844>
    1a6a:	a2 16       	cp	r10, r18
    1a6c:	b3 06       	cpc	r11, r19
    1a6e:	c4 06       	cpc	r12, r20
    1a70:	d5 06       	cpc	r13, r21
    1a72:	20 f4       	brcc	.+8      	; 0x1a7c <__moddi3+0x844>
    1a74:	a2 0c       	add	r10, r2
    1a76:	b3 1c       	adc	r11, r3
    1a78:	c4 1c       	adc	r12, r4
    1a7a:	d5 1c       	adc	r13, r5
    1a7c:	a2 1a       	sub	r10, r18
    1a7e:	b3 0a       	sbc	r11, r19
    1a80:	c4 0a       	sbc	r12, r20
    1a82:	d5 0a       	sbc	r13, r21
    1a84:	c6 01       	movw	r24, r12
    1a86:	b5 01       	movw	r22, r10
    1a88:	a4 01       	movw	r20, r8
    1a8a:	93 01       	movw	r18, r6
    1a8c:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    1a90:	7b 01       	movw	r14, r22
    1a92:	8c 01       	movw	r16, r24
    1a94:	c6 01       	movw	r24, r12
    1a96:	b5 01       	movw	r22, r10
    1a98:	a4 01       	movw	r20, r8
    1a9a:	93 01       	movw	r18, r6
    1a9c:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    1aa0:	ca 01       	movw	r24, r20
    1aa2:	b9 01       	movw	r22, r18
    1aa4:	a1 96       	adiw	r28, 0x21	; 33
    1aa6:	2c ad       	ldd	r18, Y+60	; 0x3c
    1aa8:	3d ad       	ldd	r19, Y+61	; 0x3d
    1aaa:	4e ad       	ldd	r20, Y+62	; 0x3e
    1aac:	5f ad       	ldd	r21, Y+63	; 0x3f
    1aae:	a1 97       	sbiw	r28, 0x21	; 33
    1ab0:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    1ab4:	9b 01       	movw	r18, r22
    1ab6:	ac 01       	movw	r20, r24
    1ab8:	87 01       	movw	r16, r14
    1aba:	ff 24       	eor	r15, r15
    1abc:	ee 24       	eor	r14, r14
    1abe:	2d 96       	adiw	r28, 0x0d	; 13
    1ac0:	8c ad       	ldd	r24, Y+60	; 0x3c
    1ac2:	9d ad       	ldd	r25, Y+61	; 0x3d
    1ac4:	ae ad       	ldd	r26, Y+62	; 0x3e
    1ac6:	bf ad       	ldd	r27, Y+63	; 0x3f
    1ac8:	2d 97       	sbiw	r28, 0x0d	; 13
    1aca:	a0 70       	andi	r26, 0x00	; 0
    1acc:	b0 70       	andi	r27, 0x00	; 0
    1ace:	e8 2a       	or	r14, r24
    1ad0:	f9 2a       	or	r15, r25
    1ad2:	0a 2b       	or	r16, r26
    1ad4:	1b 2b       	or	r17, r27
    1ad6:	e2 16       	cp	r14, r18
    1ad8:	f3 06       	cpc	r15, r19
    1ada:	04 07       	cpc	r16, r20
    1adc:	15 07       	cpc	r17, r21
    1ade:	90 f4       	brcc	.+36     	; 0x1b04 <__moddi3+0x8cc>
    1ae0:	e2 0c       	add	r14, r2
    1ae2:	f3 1c       	adc	r15, r3
    1ae4:	04 1d       	adc	r16, r4
    1ae6:	15 1d       	adc	r17, r5
    1ae8:	e2 14       	cp	r14, r2
    1aea:	f3 04       	cpc	r15, r3
    1aec:	04 05       	cpc	r16, r4
    1aee:	15 05       	cpc	r17, r5
    1af0:	48 f0       	brcs	.+18     	; 0x1b04 <__moddi3+0x8cc>
    1af2:	e2 16       	cp	r14, r18
    1af4:	f3 06       	cpc	r15, r19
    1af6:	04 07       	cpc	r16, r20
    1af8:	15 07       	cpc	r17, r21
    1afa:	20 f4       	brcc	.+8      	; 0x1b04 <__moddi3+0x8cc>
    1afc:	e2 0c       	add	r14, r2
    1afe:	f3 1c       	adc	r15, r3
    1b00:	04 1d       	adc	r16, r4
    1b02:	15 1d       	adc	r17, r5
    1b04:	e2 1a       	sub	r14, r18
    1b06:	f3 0a       	sbc	r15, r19
    1b08:	04 0b       	sbc	r16, r20
    1b0a:	15 0b       	sbc	r17, r21
    1b0c:	d8 01       	movw	r26, r16
    1b0e:	c7 01       	movw	r24, r14
    1b10:	62 96       	adiw	r28, 0x12	; 18
    1b12:	0f ac       	ldd	r0, Y+63	; 0x3f
    1b14:	62 97       	sbiw	r28, 0x12	; 18
    1b16:	04 c0       	rjmp	.+8      	; 0x1b20 <__moddi3+0x8e8>
    1b18:	b6 95       	lsr	r27
    1b1a:	a7 95       	ror	r26
    1b1c:	97 95       	ror	r25
    1b1e:	87 95       	ror	r24
    1b20:	0a 94       	dec	r0
    1b22:	d2 f7       	brpl	.-12     	; 0x1b18 <__moddi3+0x8e0>
    1b24:	89 a7       	std	Y+41, r24	; 0x29
    1b26:	9a a7       	std	Y+42, r25	; 0x2a
    1b28:	ab a7       	std	Y+43, r26	; 0x2b
    1b2a:	bc a7       	std	Y+44, r27	; 0x2c
    1b2c:	1d a6       	std	Y+45, r1	; 0x2d
    1b2e:	1e a6       	std	Y+46, r1	; 0x2e
    1b30:	1f a6       	std	Y+47, r1	; 0x2f
    1b32:	18 aa       	std	Y+48, r1	; 0x30
    1b34:	89 8b       	std	Y+17, r24	; 0x11
    1b36:	8a a5       	ldd	r24, Y+42	; 0x2a
    1b38:	8a 8b       	std	Y+18, r24	; 0x12
    1b3a:	8b a5       	ldd	r24, Y+43	; 0x2b
    1b3c:	8b 8b       	std	Y+19, r24	; 0x13
    1b3e:	8c a5       	ldd	r24, Y+44	; 0x2c
    1b40:	8c 8b       	std	Y+20, r24	; 0x14
    1b42:	8d a5       	ldd	r24, Y+45	; 0x2d
    1b44:	8d 8b       	std	Y+21, r24	; 0x15
    1b46:	2f c3       	rjmp	.+1630   	; 0x21a6 <__moddi3+0xf6e>
    1b48:	6a 14       	cp	r6, r10
    1b4a:	7b 04       	cpc	r7, r11
    1b4c:	8c 04       	cpc	r8, r12
    1b4e:	9d 04       	cpc	r9, r13
    1b50:	48 f4       	brcc	.+18     	; 0x1b64 <__moddi3+0x92c>
    1b52:	49 8b       	std	Y+17, r20	; 0x11
    1b54:	5a 8b       	std	Y+18, r21	; 0x12
    1b56:	6b 8b       	std	Y+19, r22	; 0x13
    1b58:	7c 8b       	std	Y+20, r23	; 0x14
    1b5a:	8d 8b       	std	Y+21, r24	; 0x15
    1b5c:	9e 8b       	std	Y+22, r25	; 0x16
    1b5e:	2f 8b       	std	Y+23, r18	; 0x17
    1b60:	38 8f       	std	Y+24, r19	; 0x18
    1b62:	27 c3       	rjmp	.+1614   	; 0x21b2 <__moddi3+0xf7a>
    1b64:	00 e0       	ldi	r16, 0x00	; 0
    1b66:	a0 16       	cp	r10, r16
    1b68:	00 e0       	ldi	r16, 0x00	; 0
    1b6a:	b0 06       	cpc	r11, r16
    1b6c:	01 e0       	ldi	r16, 0x01	; 1
    1b6e:	c0 06       	cpc	r12, r16
    1b70:	00 e0       	ldi	r16, 0x00	; 0
    1b72:	d0 06       	cpc	r13, r16
    1b74:	88 f4       	brcc	.+34     	; 0x1b98 <__moddi3+0x960>
    1b76:	1f ef       	ldi	r17, 0xFF	; 255
    1b78:	a1 16       	cp	r10, r17
    1b7a:	b1 04       	cpc	r11, r1
    1b7c:	c1 04       	cpc	r12, r1
    1b7e:	d1 04       	cpc	r13, r1
    1b80:	39 f0       	breq	.+14     	; 0x1b90 <__moddi3+0x958>
    1b82:	30 f0       	brcs	.+12     	; 0x1b90 <__moddi3+0x958>
    1b84:	28 e0       	ldi	r18, 0x08	; 8
    1b86:	e2 2e       	mov	r14, r18
    1b88:	f1 2c       	mov	r15, r1
    1b8a:	01 2d       	mov	r16, r1
    1b8c:	11 2d       	mov	r17, r1
    1b8e:	18 c0       	rjmp	.+48     	; 0x1bc0 <__moddi3+0x988>
    1b90:	ee 24       	eor	r14, r14
    1b92:	ff 24       	eor	r15, r15
    1b94:	87 01       	movw	r16, r14
    1b96:	14 c0       	rjmp	.+40     	; 0x1bc0 <__moddi3+0x988>
    1b98:	20 e0       	ldi	r18, 0x00	; 0
    1b9a:	a2 16       	cp	r10, r18
    1b9c:	20 e0       	ldi	r18, 0x00	; 0
    1b9e:	b2 06       	cpc	r11, r18
    1ba0:	20 e0       	ldi	r18, 0x00	; 0
    1ba2:	c2 06       	cpc	r12, r18
    1ba4:	21 e0       	ldi	r18, 0x01	; 1
    1ba6:	d2 06       	cpc	r13, r18
    1ba8:	30 f0       	brcs	.+12     	; 0x1bb6 <__moddi3+0x97e>
    1baa:	98 e1       	ldi	r25, 0x18	; 24
    1bac:	e9 2e       	mov	r14, r25
    1bae:	f1 2c       	mov	r15, r1
    1bb0:	01 2d       	mov	r16, r1
    1bb2:	11 2d       	mov	r17, r1
    1bb4:	05 c0       	rjmp	.+10     	; 0x1bc0 <__moddi3+0x988>
    1bb6:	80 e1       	ldi	r24, 0x10	; 16
    1bb8:	e8 2e       	mov	r14, r24
    1bba:	f1 2c       	mov	r15, r1
    1bbc:	01 2d       	mov	r16, r1
    1bbe:	11 2d       	mov	r17, r1
    1bc0:	d6 01       	movw	r26, r12
    1bc2:	c5 01       	movw	r24, r10
    1bc4:	0e 2c       	mov	r0, r14
    1bc6:	04 c0       	rjmp	.+8      	; 0x1bd0 <__moddi3+0x998>
    1bc8:	b6 95       	lsr	r27
    1bca:	a7 95       	ror	r26
    1bcc:	97 95       	ror	r25
    1bce:	87 95       	ror	r24
    1bd0:	0a 94       	dec	r0
    1bd2:	d2 f7       	brpl	.-12     	; 0x1bc8 <__moddi3+0x990>
    1bd4:	8b 51       	subi	r24, 0x1B	; 27
    1bd6:	9f 4f       	sbci	r25, 0xFF	; 255
    1bd8:	dc 01       	movw	r26, r24
    1bda:	2c 91       	ld	r18, X
    1bdc:	80 e2       	ldi	r24, 0x20	; 32
    1bde:	90 e0       	ldi	r25, 0x00	; 0
    1be0:	a0 e0       	ldi	r26, 0x00	; 0
    1be2:	b0 e0       	ldi	r27, 0x00	; 0
    1be4:	8e 19       	sub	r24, r14
    1be6:	9f 09       	sbc	r25, r15
    1be8:	a0 0b       	sbc	r26, r16
    1bea:	b1 0b       	sbc	r27, r17
    1bec:	82 1b       	sub	r24, r18
    1bee:	91 09       	sbc	r25, r1
    1bf0:	a1 09       	sbc	r26, r1
    1bf2:	b1 09       	sbc	r27, r1
    1bf4:	00 97       	sbiw	r24, 0x00	; 0
    1bf6:	a1 05       	cpc	r26, r1
    1bf8:	b1 05       	cpc	r27, r1
    1bfa:	09 f0       	breq	.+2      	; 0x1bfe <__moddi3+0x9c6>
    1bfc:	59 c0       	rjmp	.+178    	; 0x1cb0 <__moddi3+0xa78>
    1bfe:	a6 14       	cp	r10, r6
    1c00:	b7 04       	cpc	r11, r7
    1c02:	c8 04       	cpc	r12, r8
    1c04:	d9 04       	cpc	r13, r9
    1c06:	70 f0       	brcs	.+28     	; 0x1c24 <__moddi3+0x9ec>
    1c08:	e8 96       	adiw	r28, 0x38	; 56
    1c0a:	ec ac       	ldd	r14, Y+60	; 0x3c
    1c0c:	fd ac       	ldd	r15, Y+61	; 0x3d
    1c0e:	0e ad       	ldd	r16, Y+62	; 0x3e
    1c10:	1f ad       	ldd	r17, Y+63	; 0x3f
    1c12:	e8 97       	sbiw	r28, 0x38	; 56
    1c14:	e2 14       	cp	r14, r2
    1c16:	f3 04       	cpc	r15, r3
    1c18:	04 05       	cpc	r16, r4
    1c1a:	15 05       	cpc	r17, r5
    1c1c:	18 f4       	brcc	.+6      	; 0x1c24 <__moddi3+0x9ec>
    1c1e:	d8 01       	movw	r26, r16
    1c20:	c7 01       	movw	r24, r14
    1c22:	2f c0       	rjmp	.+94     	; 0x1c82 <__moddi3+0xa4a>
    1c24:	e8 96       	adiw	r28, 0x38	; 56
    1c26:	8c ad       	ldd	r24, Y+60	; 0x3c
    1c28:	9d ad       	ldd	r25, Y+61	; 0x3d
    1c2a:	ae ad       	ldd	r26, Y+62	; 0x3e
    1c2c:	bf ad       	ldd	r27, Y+63	; 0x3f
    1c2e:	e8 97       	sbiw	r28, 0x38	; 56
    1c30:	82 19       	sub	r24, r2
    1c32:	93 09       	sbc	r25, r3
    1c34:	a4 09       	sbc	r26, r4
    1c36:	b5 09       	sbc	r27, r5
    1c38:	a4 01       	movw	r20, r8
    1c3a:	93 01       	movw	r18, r6
    1c3c:	2a 19       	sub	r18, r10
    1c3e:	3b 09       	sbc	r19, r11
    1c40:	4c 09       	sbc	r20, r12
    1c42:	5d 09       	sbc	r21, r13
    1c44:	aa 24       	eor	r10, r10
    1c46:	bb 24       	eor	r11, r11
    1c48:	65 01       	movw	r12, r10
    1c4a:	e8 96       	adiw	r28, 0x38	; 56
    1c4c:	6c ac       	ldd	r6, Y+60	; 0x3c
    1c4e:	7d ac       	ldd	r7, Y+61	; 0x3d
    1c50:	8e ac       	ldd	r8, Y+62	; 0x3e
    1c52:	9f ac       	ldd	r9, Y+63	; 0x3f
    1c54:	e8 97       	sbiw	r28, 0x38	; 56
    1c56:	68 16       	cp	r6, r24
    1c58:	79 06       	cpc	r7, r25
    1c5a:	8a 06       	cpc	r8, r26
    1c5c:	9b 06       	cpc	r9, r27
    1c5e:	28 f4       	brcc	.+10     	; 0x1c6a <__moddi3+0xa32>
    1c60:	11 e0       	ldi	r17, 0x01	; 1
    1c62:	a1 2e       	mov	r10, r17
    1c64:	b1 2c       	mov	r11, r1
    1c66:	c1 2c       	mov	r12, r1
    1c68:	d1 2c       	mov	r13, r1
    1c6a:	79 01       	movw	r14, r18
    1c6c:	8a 01       	movw	r16, r20
    1c6e:	ea 18       	sub	r14, r10
    1c70:	fb 08       	sbc	r15, r11
    1c72:	0c 09       	sbc	r16, r12
    1c74:	1d 09       	sbc	r17, r13
    1c76:	61 96       	adiw	r28, 0x11	; 17
    1c78:	ec ae       	std	Y+60, r14	; 0x3c
    1c7a:	fd ae       	std	Y+61, r15	; 0x3d
    1c7c:	0e af       	std	Y+62, r16	; 0x3e
    1c7e:	1f af       	std	Y+63, r17	; 0x3f
    1c80:	61 97       	sbiw	r28, 0x11	; 17
    1c82:	89 a7       	std	Y+41, r24	; 0x29
    1c84:	9a a7       	std	Y+42, r25	; 0x2a
    1c86:	ab a7       	std	Y+43, r26	; 0x2b
    1c88:	bc a7       	std	Y+44, r27	; 0x2c
    1c8a:	61 96       	adiw	r28, 0x11	; 17
    1c8c:	0c ad       	ldd	r16, Y+60	; 0x3c
    1c8e:	1d ad       	ldd	r17, Y+61	; 0x3d
    1c90:	2e ad       	ldd	r18, Y+62	; 0x3e
    1c92:	3f ad       	ldd	r19, Y+63	; 0x3f
    1c94:	61 97       	sbiw	r28, 0x11	; 17
    1c96:	0d a7       	std	Y+45, r16	; 0x2d
    1c98:	1e a7       	std	Y+46, r17	; 0x2e
    1c9a:	2f a7       	std	Y+47, r18	; 0x2f
    1c9c:	38 ab       	std	Y+48, r19	; 0x30
    1c9e:	89 8b       	std	Y+17, r24	; 0x11
    1ca0:	8a a5       	ldd	r24, Y+42	; 0x2a
    1ca2:	8a 8b       	std	Y+18, r24	; 0x12
    1ca4:	8b a5       	ldd	r24, Y+43	; 0x2b
    1ca6:	8b 8b       	std	Y+19, r24	; 0x13
    1ca8:	8c a5       	ldd	r24, Y+44	; 0x2c
    1caa:	8c 8b       	std	Y+20, r24	; 0x14
    1cac:	0d 8b       	std	Y+21, r16	; 0x15
    1cae:	7b c2       	rjmp	.+1270   	; 0x21a6 <__moddi3+0xf6e>
    1cb0:	e3 96       	adiw	r28, 0x33	; 51
    1cb2:	8f af       	std	Y+63, r24	; 0x3f
    1cb4:	e3 97       	sbiw	r28, 0x33	; 51
    1cb6:	a6 01       	movw	r20, r12
    1cb8:	95 01       	movw	r18, r10
    1cba:	08 2e       	mov	r0, r24
    1cbc:	04 c0       	rjmp	.+8      	; 0x1cc6 <__moddi3+0xa8e>
    1cbe:	22 0f       	add	r18, r18
    1cc0:	33 1f       	adc	r19, r19
    1cc2:	44 1f       	adc	r20, r20
    1cc4:	55 1f       	adc	r21, r21
    1cc6:	0a 94       	dec	r0
    1cc8:	d2 f7       	brpl	.-12     	; 0x1cbe <__moddi3+0xa86>
    1cca:	10 e2       	ldi	r17, 0x20	; 32
    1ccc:	18 1b       	sub	r17, r24
    1cce:	e2 96       	adiw	r28, 0x32	; 50
    1cd0:	1f af       	std	Y+63, r17	; 0x3f
    1cd2:	e2 97       	sbiw	r28, 0x32	; 50
    1cd4:	d2 01       	movw	r26, r4
    1cd6:	c1 01       	movw	r24, r2
    1cd8:	01 2e       	mov	r0, r17
    1cda:	04 c0       	rjmp	.+8      	; 0x1ce4 <__moddi3+0xaac>
    1cdc:	b6 95       	lsr	r27
    1cde:	a7 95       	ror	r26
    1ce0:	97 95       	ror	r25
    1ce2:	87 95       	ror	r24
    1ce4:	0a 94       	dec	r0
    1ce6:	d2 f7       	brpl	.-12     	; 0x1cdc <__moddi3+0xaa4>
    1ce8:	5c 01       	movw	r10, r24
    1cea:	6d 01       	movw	r12, r26
    1cec:	a2 2a       	or	r10, r18
    1cee:	b3 2a       	or	r11, r19
    1cf0:	c4 2a       	or	r12, r20
    1cf2:	d5 2a       	or	r13, r21
    1cf4:	25 96       	adiw	r28, 0x05	; 5
    1cf6:	ac ae       	std	Y+60, r10	; 0x3c
    1cf8:	bd ae       	std	Y+61, r11	; 0x3d
    1cfa:	ce ae       	std	Y+62, r12	; 0x3e
    1cfc:	df ae       	std	Y+63, r13	; 0x3f
    1cfe:	25 97       	sbiw	r28, 0x05	; 5
    1d00:	72 01       	movw	r14, r4
    1d02:	61 01       	movw	r12, r2
    1d04:	e3 96       	adiw	r28, 0x33	; 51
    1d06:	0f ac       	ldd	r0, Y+63	; 0x3f
    1d08:	e3 97       	sbiw	r28, 0x33	; 51
    1d0a:	04 c0       	rjmp	.+8      	; 0x1d14 <__moddi3+0xadc>
    1d0c:	cc 0c       	add	r12, r12
    1d0e:	dd 1c       	adc	r13, r13
    1d10:	ee 1c       	adc	r14, r14
    1d12:	ff 1c       	adc	r15, r15
    1d14:	0a 94       	dec	r0
    1d16:	d2 f7       	brpl	.-12     	; 0x1d0c <__moddi3+0xad4>
    1d18:	21 96       	adiw	r28, 0x01	; 1
    1d1a:	cc ae       	std	Y+60, r12	; 0x3c
    1d1c:	dd ae       	std	Y+61, r13	; 0x3d
    1d1e:	ee ae       	std	Y+62, r14	; 0x3e
    1d20:	ff ae       	std	Y+63, r15	; 0x3f
    1d22:	21 97       	sbiw	r28, 0x01	; 1
    1d24:	64 01       	movw	r12, r8
    1d26:	53 01       	movw	r10, r6
    1d28:	01 2e       	mov	r0, r17
    1d2a:	04 c0       	rjmp	.+8      	; 0x1d34 <__moddi3+0xafc>
    1d2c:	d6 94       	lsr	r13
    1d2e:	c7 94       	ror	r12
    1d30:	b7 94       	ror	r11
    1d32:	a7 94       	ror	r10
    1d34:	0a 94       	dec	r0
    1d36:	d2 f7       	brpl	.-12     	; 0x1d2c <__moddi3+0xaf4>
    1d38:	a4 01       	movw	r20, r8
    1d3a:	93 01       	movw	r18, r6
    1d3c:	e3 96       	adiw	r28, 0x33	; 51
    1d3e:	0f ac       	ldd	r0, Y+63	; 0x3f
    1d40:	e3 97       	sbiw	r28, 0x33	; 51
    1d42:	04 c0       	rjmp	.+8      	; 0x1d4c <__moddi3+0xb14>
    1d44:	22 0f       	add	r18, r18
    1d46:	33 1f       	adc	r19, r19
    1d48:	44 1f       	adc	r20, r20
    1d4a:	55 1f       	adc	r21, r21
    1d4c:	0a 94       	dec	r0
    1d4e:	d2 f7       	brpl	.-12     	; 0x1d44 <__moddi3+0xb0c>
    1d50:	e8 96       	adiw	r28, 0x38	; 56
    1d52:	8c ad       	ldd	r24, Y+60	; 0x3c
    1d54:	9d ad       	ldd	r25, Y+61	; 0x3d
    1d56:	ae ad       	ldd	r26, Y+62	; 0x3e
    1d58:	bf ad       	ldd	r27, Y+63	; 0x3f
    1d5a:	e8 97       	sbiw	r28, 0x38	; 56
    1d5c:	04 c0       	rjmp	.+8      	; 0x1d66 <__moddi3+0xb2e>
    1d5e:	b6 95       	lsr	r27
    1d60:	a7 95       	ror	r26
    1d62:	97 95       	ror	r25
    1d64:	87 95       	ror	r24
    1d66:	1a 95       	dec	r17
    1d68:	d2 f7       	brpl	.-12     	; 0x1d5e <__moddi3+0xb26>
    1d6a:	7c 01       	movw	r14, r24
    1d6c:	8d 01       	movw	r16, r26
    1d6e:	e2 2a       	or	r14, r18
    1d70:	f3 2a       	or	r15, r19
    1d72:	04 2b       	or	r16, r20
    1d74:	15 2b       	or	r17, r21
    1d76:	e9 ae       	std	Y+57, r14	; 0x39
    1d78:	fa ae       	std	Y+58, r15	; 0x3a
    1d7a:	0b af       	std	Y+59, r16	; 0x3b
    1d7c:	1c af       	std	Y+60, r17	; 0x3c
    1d7e:	e8 96       	adiw	r28, 0x38	; 56
    1d80:	0c ad       	ldd	r16, Y+60	; 0x3c
    1d82:	1d ad       	ldd	r17, Y+61	; 0x3d
    1d84:	2e ad       	ldd	r18, Y+62	; 0x3e
    1d86:	3f ad       	ldd	r19, Y+63	; 0x3f
    1d88:	e8 97       	sbiw	r28, 0x38	; 56
    1d8a:	e3 96       	adiw	r28, 0x33	; 51
    1d8c:	0f ac       	ldd	r0, Y+63	; 0x3f
    1d8e:	e3 97       	sbiw	r28, 0x33	; 51
    1d90:	04 c0       	rjmp	.+8      	; 0x1d9a <__moddi3+0xb62>
    1d92:	00 0f       	add	r16, r16
    1d94:	11 1f       	adc	r17, r17
    1d96:	22 1f       	adc	r18, r18
    1d98:	33 1f       	adc	r19, r19
    1d9a:	0a 94       	dec	r0
    1d9c:	d2 f7       	brpl	.-12     	; 0x1d92 <__moddi3+0xb5a>
    1d9e:	0d ab       	std	Y+53, r16	; 0x35
    1da0:	1e ab       	std	Y+54, r17	; 0x36
    1da2:	2f ab       	std	Y+55, r18	; 0x37
    1da4:	38 af       	std	Y+56, r19	; 0x38
    1da6:	25 96       	adiw	r28, 0x05	; 5
    1da8:	2c ad       	ldd	r18, Y+60	; 0x3c
    1daa:	3d ad       	ldd	r19, Y+61	; 0x3d
    1dac:	4e ad       	ldd	r20, Y+62	; 0x3e
    1dae:	5f ad       	ldd	r21, Y+63	; 0x3f
    1db0:	25 97       	sbiw	r28, 0x05	; 5
    1db2:	3a 01       	movw	r6, r20
    1db4:	88 24       	eor	r8, r8
    1db6:	99 24       	eor	r9, r9
    1db8:	40 70       	andi	r20, 0x00	; 0
    1dba:	50 70       	andi	r21, 0x00	; 0
    1dbc:	a5 96       	adiw	r28, 0x25	; 37
    1dbe:	2c af       	std	Y+60, r18	; 0x3c
    1dc0:	3d af       	std	Y+61, r19	; 0x3d
    1dc2:	4e af       	std	Y+62, r20	; 0x3e
    1dc4:	5f af       	std	Y+63, r21	; 0x3f
    1dc6:	a5 97       	sbiw	r28, 0x25	; 37
    1dc8:	c6 01       	movw	r24, r12
    1dca:	b5 01       	movw	r22, r10
    1dcc:	a4 01       	movw	r20, r8
    1dce:	93 01       	movw	r18, r6
    1dd0:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    1dd4:	7b 01       	movw	r14, r22
    1dd6:	8c 01       	movw	r16, r24
    1dd8:	c6 01       	movw	r24, r12
    1dda:	b5 01       	movw	r22, r10
    1ddc:	a4 01       	movw	r20, r8
    1dde:	93 01       	movw	r18, r6
    1de0:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    1de4:	c9 01       	movw	r24, r18
    1de6:	da 01       	movw	r26, r20
    1de8:	1c 01       	movw	r2, r24
    1dea:	2d 01       	movw	r4, r26
    1dec:	c2 01       	movw	r24, r4
    1dee:	b1 01       	movw	r22, r2
    1df0:	a5 96       	adiw	r28, 0x25	; 37
    1df2:	2c ad       	ldd	r18, Y+60	; 0x3c
    1df4:	3d ad       	ldd	r19, Y+61	; 0x3d
    1df6:	4e ad       	ldd	r20, Y+62	; 0x3e
    1df8:	5f ad       	ldd	r21, Y+63	; 0x3f
    1dfa:	a5 97       	sbiw	r28, 0x25	; 37
    1dfc:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    1e00:	9b 01       	movw	r18, r22
    1e02:	ac 01       	movw	r20, r24
    1e04:	87 01       	movw	r16, r14
    1e06:	ff 24       	eor	r15, r15
    1e08:	ee 24       	eor	r14, r14
    1e0a:	a9 ac       	ldd	r10, Y+57	; 0x39
    1e0c:	ba ac       	ldd	r11, Y+58	; 0x3a
    1e0e:	cb ac       	ldd	r12, Y+59	; 0x3b
    1e10:	dc ac       	ldd	r13, Y+60	; 0x3c
    1e12:	c6 01       	movw	r24, r12
    1e14:	aa 27       	eor	r26, r26
    1e16:	bb 27       	eor	r27, r27
    1e18:	57 01       	movw	r10, r14
    1e1a:	68 01       	movw	r12, r16
    1e1c:	a8 2a       	or	r10, r24
    1e1e:	b9 2a       	or	r11, r25
    1e20:	ca 2a       	or	r12, r26
    1e22:	db 2a       	or	r13, r27
    1e24:	a2 16       	cp	r10, r18
    1e26:	b3 06       	cpc	r11, r19
    1e28:	c4 06       	cpc	r12, r20
    1e2a:	d5 06       	cpc	r13, r21
    1e2c:	10 f5       	brcc	.+68     	; 0x1e72 <__moddi3+0xc3a>
    1e2e:	08 94       	sec
    1e30:	21 08       	sbc	r2, r1
    1e32:	31 08       	sbc	r3, r1
    1e34:	41 08       	sbc	r4, r1
    1e36:	51 08       	sbc	r5, r1
    1e38:	25 96       	adiw	r28, 0x05	; 5
    1e3a:	ec ac       	ldd	r14, Y+60	; 0x3c
    1e3c:	fd ac       	ldd	r15, Y+61	; 0x3d
    1e3e:	0e ad       	ldd	r16, Y+62	; 0x3e
    1e40:	1f ad       	ldd	r17, Y+63	; 0x3f
    1e42:	25 97       	sbiw	r28, 0x05	; 5
    1e44:	ae 0c       	add	r10, r14
    1e46:	bf 1c       	adc	r11, r15
    1e48:	c0 1e       	adc	r12, r16
    1e4a:	d1 1e       	adc	r13, r17
    1e4c:	ae 14       	cp	r10, r14
    1e4e:	bf 04       	cpc	r11, r15
    1e50:	c0 06       	cpc	r12, r16
    1e52:	d1 06       	cpc	r13, r17
    1e54:	70 f0       	brcs	.+28     	; 0x1e72 <__moddi3+0xc3a>
    1e56:	a2 16       	cp	r10, r18
    1e58:	b3 06       	cpc	r11, r19
    1e5a:	c4 06       	cpc	r12, r20
    1e5c:	d5 06       	cpc	r13, r21
    1e5e:	48 f4       	brcc	.+18     	; 0x1e72 <__moddi3+0xc3a>
    1e60:	08 94       	sec
    1e62:	21 08       	sbc	r2, r1
    1e64:	31 08       	sbc	r3, r1
    1e66:	41 08       	sbc	r4, r1
    1e68:	51 08       	sbc	r5, r1
    1e6a:	ae 0c       	add	r10, r14
    1e6c:	bf 1c       	adc	r11, r15
    1e6e:	c0 1e       	adc	r12, r16
    1e70:	d1 1e       	adc	r13, r17
    1e72:	a2 1a       	sub	r10, r18
    1e74:	b3 0a       	sbc	r11, r19
    1e76:	c4 0a       	sbc	r12, r20
    1e78:	d5 0a       	sbc	r13, r21
    1e7a:	c6 01       	movw	r24, r12
    1e7c:	b5 01       	movw	r22, r10
    1e7e:	a4 01       	movw	r20, r8
    1e80:	93 01       	movw	r18, r6
    1e82:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    1e86:	7b 01       	movw	r14, r22
    1e88:	8c 01       	movw	r16, r24
    1e8a:	c6 01       	movw	r24, r12
    1e8c:	b5 01       	movw	r22, r10
    1e8e:	a4 01       	movw	r20, r8
    1e90:	93 01       	movw	r18, r6
    1e92:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    1e96:	c9 01       	movw	r24, r18
    1e98:	da 01       	movw	r26, r20
    1e9a:	3c 01       	movw	r6, r24
    1e9c:	4d 01       	movw	r8, r26
    1e9e:	c4 01       	movw	r24, r8
    1ea0:	b3 01       	movw	r22, r6
    1ea2:	a5 96       	adiw	r28, 0x25	; 37
    1ea4:	2c ad       	ldd	r18, Y+60	; 0x3c
    1ea6:	3d ad       	ldd	r19, Y+61	; 0x3d
    1ea8:	4e ad       	ldd	r20, Y+62	; 0x3e
    1eaa:	5f ad       	ldd	r21, Y+63	; 0x3f
    1eac:	a5 97       	sbiw	r28, 0x25	; 37
    1eae:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    1eb2:	9b 01       	movw	r18, r22
    1eb4:	ac 01       	movw	r20, r24
    1eb6:	87 01       	movw	r16, r14
    1eb8:	ff 24       	eor	r15, r15
    1eba:	ee 24       	eor	r14, r14
    1ebc:	89 ad       	ldd	r24, Y+57	; 0x39
    1ebe:	9a ad       	ldd	r25, Y+58	; 0x3a
    1ec0:	ab ad       	ldd	r26, Y+59	; 0x3b
    1ec2:	bc ad       	ldd	r27, Y+60	; 0x3c
    1ec4:	a0 70       	andi	r26, 0x00	; 0
    1ec6:	b0 70       	andi	r27, 0x00	; 0
    1ec8:	57 01       	movw	r10, r14
    1eca:	68 01       	movw	r12, r16
    1ecc:	a8 2a       	or	r10, r24
    1ece:	b9 2a       	or	r11, r25
    1ed0:	ca 2a       	or	r12, r26
    1ed2:	db 2a       	or	r13, r27
    1ed4:	a2 16       	cp	r10, r18
    1ed6:	b3 06       	cpc	r11, r19
    1ed8:	c4 06       	cpc	r12, r20
    1eda:	d5 06       	cpc	r13, r21
    1edc:	10 f5       	brcc	.+68     	; 0x1f22 <__moddi3+0xcea>
    1ede:	08 94       	sec
    1ee0:	61 08       	sbc	r6, r1
    1ee2:	71 08       	sbc	r7, r1
    1ee4:	81 08       	sbc	r8, r1
    1ee6:	91 08       	sbc	r9, r1
    1ee8:	25 96       	adiw	r28, 0x05	; 5
    1eea:	6c ad       	ldd	r22, Y+60	; 0x3c
    1eec:	7d ad       	ldd	r23, Y+61	; 0x3d
    1eee:	8e ad       	ldd	r24, Y+62	; 0x3e
    1ef0:	9f ad       	ldd	r25, Y+63	; 0x3f
    1ef2:	25 97       	sbiw	r28, 0x05	; 5
    1ef4:	a6 0e       	add	r10, r22
    1ef6:	b7 1e       	adc	r11, r23
    1ef8:	c8 1e       	adc	r12, r24
    1efa:	d9 1e       	adc	r13, r25
    1efc:	a6 16       	cp	r10, r22
    1efe:	b7 06       	cpc	r11, r23
    1f00:	c8 06       	cpc	r12, r24
    1f02:	d9 06       	cpc	r13, r25
    1f04:	70 f0       	brcs	.+28     	; 0x1f22 <__moddi3+0xcea>
    1f06:	a2 16       	cp	r10, r18
    1f08:	b3 06       	cpc	r11, r19
    1f0a:	c4 06       	cpc	r12, r20
    1f0c:	d5 06       	cpc	r13, r21
    1f0e:	48 f4       	brcc	.+18     	; 0x1f22 <__moddi3+0xcea>
    1f10:	08 94       	sec
    1f12:	61 08       	sbc	r6, r1
    1f14:	71 08       	sbc	r7, r1
    1f16:	81 08       	sbc	r8, r1
    1f18:	91 08       	sbc	r9, r1
    1f1a:	a6 0e       	add	r10, r22
    1f1c:	b7 1e       	adc	r11, r23
    1f1e:	c8 1e       	adc	r12, r24
    1f20:	d9 1e       	adc	r13, r25
    1f22:	d6 01       	movw	r26, r12
    1f24:	c5 01       	movw	r24, r10
    1f26:	82 1b       	sub	r24, r18
    1f28:	93 0b       	sbc	r25, r19
    1f2a:	a4 0b       	sbc	r26, r20
    1f2c:	b5 0b       	sbc	r27, r21
    1f2e:	89 ab       	std	Y+49, r24	; 0x31
    1f30:	9a ab       	std	Y+50, r25	; 0x32
    1f32:	ab ab       	std	Y+51, r26	; 0x33
    1f34:	bc ab       	std	Y+52, r27	; 0x34
    1f36:	d1 01       	movw	r26, r2
    1f38:	99 27       	eor	r25, r25
    1f3a:	88 27       	eor	r24, r24
    1f3c:	84 01       	movw	r16, r8
    1f3e:	73 01       	movw	r14, r6
    1f40:	e8 2a       	or	r14, r24
    1f42:	f9 2a       	or	r15, r25
    1f44:	0a 2b       	or	r16, r26
    1f46:	1b 2b       	or	r17, r27
    1f48:	8f ef       	ldi	r24, 0xFF	; 255
    1f4a:	a8 2e       	mov	r10, r24
    1f4c:	8f ef       	ldi	r24, 0xFF	; 255
    1f4e:	b8 2e       	mov	r11, r24
    1f50:	c1 2c       	mov	r12, r1
    1f52:	d1 2c       	mov	r13, r1
    1f54:	ae 20       	and	r10, r14
    1f56:	bf 20       	and	r11, r15
    1f58:	c0 22       	and	r12, r16
    1f5a:	d1 22       	and	r13, r17
    1f5c:	78 01       	movw	r14, r16
    1f5e:	00 27       	eor	r16, r16
    1f60:	11 27       	eor	r17, r17
    1f62:	21 96       	adiw	r28, 0x01	; 1
    1f64:	6c ac       	ldd	r6, Y+60	; 0x3c
    1f66:	7d ac       	ldd	r7, Y+61	; 0x3d
    1f68:	8e ac       	ldd	r8, Y+62	; 0x3e
    1f6a:	9f ac       	ldd	r9, Y+63	; 0x3f
    1f6c:	21 97       	sbiw	r28, 0x01	; 1
    1f6e:	2f ef       	ldi	r18, 0xFF	; 255
    1f70:	3f ef       	ldi	r19, 0xFF	; 255
    1f72:	40 e0       	ldi	r20, 0x00	; 0
    1f74:	50 e0       	ldi	r21, 0x00	; 0
    1f76:	62 22       	and	r6, r18
    1f78:	73 22       	and	r7, r19
    1f7a:	84 22       	and	r8, r20
    1f7c:	95 22       	and	r9, r21
    1f7e:	21 96       	adiw	r28, 0x01	; 1
    1f80:	6c ad       	ldd	r22, Y+60	; 0x3c
    1f82:	7d ad       	ldd	r23, Y+61	; 0x3d
    1f84:	8e ad       	ldd	r24, Y+62	; 0x3e
    1f86:	9f ad       	ldd	r25, Y+63	; 0x3f
    1f88:	21 97       	sbiw	r28, 0x01	; 1
    1f8a:	ac 01       	movw	r20, r24
    1f8c:	66 27       	eor	r22, r22
    1f8e:	77 27       	eor	r23, r23
    1f90:	ad 96       	adiw	r28, 0x2d	; 45
    1f92:	4c af       	std	Y+60, r20	; 0x3c
    1f94:	5d af       	std	Y+61, r21	; 0x3d
    1f96:	6e af       	std	Y+62, r22	; 0x3e
    1f98:	7f af       	std	Y+63, r23	; 0x3f
    1f9a:	ad 97       	sbiw	r28, 0x2d	; 45
    1f9c:	c6 01       	movw	r24, r12
    1f9e:	b5 01       	movw	r22, r10
    1fa0:	a4 01       	movw	r20, r8
    1fa2:	93 01       	movw	r18, r6
    1fa4:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    1fa8:	a9 96       	adiw	r28, 0x29	; 41
    1faa:	6c af       	std	Y+60, r22	; 0x3c
    1fac:	7d af       	std	Y+61, r23	; 0x3d
    1fae:	8e af       	std	Y+62, r24	; 0x3e
    1fb0:	9f af       	std	Y+63, r25	; 0x3f
    1fb2:	a9 97       	sbiw	r28, 0x29	; 41
    1fb4:	c6 01       	movw	r24, r12
    1fb6:	b5 01       	movw	r22, r10
    1fb8:	ad 96       	adiw	r28, 0x2d	; 45
    1fba:	2c ad       	ldd	r18, Y+60	; 0x3c
    1fbc:	3d ad       	ldd	r19, Y+61	; 0x3d
    1fbe:	4e ad       	ldd	r20, Y+62	; 0x3e
    1fc0:	5f ad       	ldd	r21, Y+63	; 0x3f
    1fc2:	ad 97       	sbiw	r28, 0x2d	; 45
    1fc4:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    1fc8:	1b 01       	movw	r2, r22
    1fca:	2c 01       	movw	r4, r24
    1fcc:	c8 01       	movw	r24, r16
    1fce:	b7 01       	movw	r22, r14
    1fd0:	a4 01       	movw	r20, r8
    1fd2:	93 01       	movw	r18, r6
    1fd4:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    1fd8:	5b 01       	movw	r10, r22
    1fda:	6c 01       	movw	r12, r24
    1fdc:	c8 01       	movw	r24, r16
    1fde:	b7 01       	movw	r22, r14
    1fe0:	ad 96       	adiw	r28, 0x2d	; 45
    1fe2:	2c ad       	ldd	r18, Y+60	; 0x3c
    1fe4:	3d ad       	ldd	r19, Y+61	; 0x3d
    1fe6:	4e ad       	ldd	r20, Y+62	; 0x3e
    1fe8:	5f ad       	ldd	r21, Y+63	; 0x3f
    1fea:	ad 97       	sbiw	r28, 0x2d	; 45
    1fec:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    1ff0:	7b 01       	movw	r14, r22
    1ff2:	8c 01       	movw	r16, r24
    1ff4:	a6 01       	movw	r20, r12
    1ff6:	95 01       	movw	r18, r10
    1ff8:	22 0d       	add	r18, r2
    1ffa:	33 1d       	adc	r19, r3
    1ffc:	44 1d       	adc	r20, r4
    1ffe:	55 1d       	adc	r21, r5
    2000:	a9 96       	adiw	r28, 0x29	; 41
    2002:	6c ac       	ldd	r6, Y+60	; 0x3c
    2004:	7d ac       	ldd	r7, Y+61	; 0x3d
    2006:	8e ac       	ldd	r8, Y+62	; 0x3e
    2008:	9f ac       	ldd	r9, Y+63	; 0x3f
    200a:	a9 97       	sbiw	r28, 0x29	; 41
    200c:	c4 01       	movw	r24, r8
    200e:	aa 27       	eor	r26, r26
    2010:	bb 27       	eor	r27, r27
    2012:	28 0f       	add	r18, r24
    2014:	39 1f       	adc	r19, r25
    2016:	4a 1f       	adc	r20, r26
    2018:	5b 1f       	adc	r21, r27
    201a:	2a 15       	cp	r18, r10
    201c:	3b 05       	cpc	r19, r11
    201e:	4c 05       	cpc	r20, r12
    2020:	5d 05       	cpc	r21, r13
    2022:	48 f4       	brcc	.+18     	; 0x2036 <__moddi3+0xdfe>
    2024:	81 2c       	mov	r8, r1
    2026:	91 2c       	mov	r9, r1
    2028:	e1 e0       	ldi	r30, 0x01	; 1
    202a:	ae 2e       	mov	r10, r30
    202c:	b1 2c       	mov	r11, r1
    202e:	e8 0c       	add	r14, r8
    2030:	f9 1c       	adc	r15, r9
    2032:	0a 1d       	adc	r16, r10
    2034:	1b 1d       	adc	r17, r11
    2036:	ca 01       	movw	r24, r20
    2038:	aa 27       	eor	r26, r26
    203a:	bb 27       	eor	r27, r27
    203c:	57 01       	movw	r10, r14
    203e:	68 01       	movw	r12, r16
    2040:	a8 0e       	add	r10, r24
    2042:	b9 1e       	adc	r11, r25
    2044:	ca 1e       	adc	r12, r26
    2046:	db 1e       	adc	r13, r27
    2048:	a9 01       	movw	r20, r18
    204a:	33 27       	eor	r19, r19
    204c:	22 27       	eor	r18, r18
    204e:	a9 96       	adiw	r28, 0x29	; 41
    2050:	8c ad       	ldd	r24, Y+60	; 0x3c
    2052:	9d ad       	ldd	r25, Y+61	; 0x3d
    2054:	ae ad       	ldd	r26, Y+62	; 0x3e
    2056:	bf ad       	ldd	r27, Y+63	; 0x3f
    2058:	a9 97       	sbiw	r28, 0x29	; 41
    205a:	a0 70       	andi	r26, 0x00	; 0
    205c:	b0 70       	andi	r27, 0x00	; 0
    205e:	28 0f       	add	r18, r24
    2060:	39 1f       	adc	r19, r25
    2062:	4a 1f       	adc	r20, r26
    2064:	5b 1f       	adc	r21, r27
    2066:	e9 a8       	ldd	r14, Y+49	; 0x31
    2068:	fa a8       	ldd	r15, Y+50	; 0x32
    206a:	0b a9       	ldd	r16, Y+51	; 0x33
    206c:	1c a9       	ldd	r17, Y+52	; 0x34
    206e:	ea 14       	cp	r14, r10
    2070:	fb 04       	cpc	r15, r11
    2072:	0c 05       	cpc	r16, r12
    2074:	1d 05       	cpc	r17, r13
    2076:	70 f0       	brcs	.+28     	; 0x2094 <__moddi3+0xe5c>
    2078:	ae 14       	cp	r10, r14
    207a:	bf 04       	cpc	r11, r15
    207c:	c0 06       	cpc	r12, r16
    207e:	d1 06       	cpc	r13, r17
    2080:	89 f5       	brne	.+98     	; 0x20e4 <__moddi3+0xeac>
    2082:	6d a9       	ldd	r22, Y+53	; 0x35
    2084:	7e a9       	ldd	r23, Y+54	; 0x36
    2086:	8f a9       	ldd	r24, Y+55	; 0x37
    2088:	98 ad       	ldd	r25, Y+56	; 0x38
    208a:	62 17       	cp	r22, r18
    208c:	73 07       	cpc	r23, r19
    208e:	84 07       	cpc	r24, r20
    2090:	95 07       	cpc	r25, r21
    2092:	40 f5       	brcc	.+80     	; 0x20e4 <__moddi3+0xeac>
    2094:	da 01       	movw	r26, r20
    2096:	c9 01       	movw	r24, r18
    2098:	21 96       	adiw	r28, 0x01	; 1
    209a:	6c ac       	ldd	r6, Y+60	; 0x3c
    209c:	7d ac       	ldd	r7, Y+61	; 0x3d
    209e:	8e ac       	ldd	r8, Y+62	; 0x3e
    20a0:	9f ac       	ldd	r9, Y+63	; 0x3f
    20a2:	21 97       	sbiw	r28, 0x01	; 1
    20a4:	86 19       	sub	r24, r6
    20a6:	97 09       	sbc	r25, r7
    20a8:	a8 09       	sbc	r26, r8
    20aa:	b9 09       	sbc	r27, r9
    20ac:	25 96       	adiw	r28, 0x05	; 5
    20ae:	ec ac       	ldd	r14, Y+60	; 0x3c
    20b0:	fd ac       	ldd	r15, Y+61	; 0x3d
    20b2:	0e ad       	ldd	r16, Y+62	; 0x3e
    20b4:	1f ad       	ldd	r17, Y+63	; 0x3f
    20b6:	25 97       	sbiw	r28, 0x05	; 5
    20b8:	ae 18       	sub	r10, r14
    20ba:	bf 08       	sbc	r11, r15
    20bc:	c0 0a       	sbc	r12, r16
    20be:	d1 0a       	sbc	r13, r17
    20c0:	ee 24       	eor	r14, r14
    20c2:	ff 24       	eor	r15, r15
    20c4:	87 01       	movw	r16, r14
    20c6:	28 17       	cp	r18, r24
    20c8:	39 07       	cpc	r19, r25
    20ca:	4a 07       	cpc	r20, r26
    20cc:	5b 07       	cpc	r21, r27
    20ce:	28 f4       	brcc	.+10     	; 0x20da <__moddi3+0xea2>
    20d0:	21 e0       	ldi	r18, 0x01	; 1
    20d2:	e2 2e       	mov	r14, r18
    20d4:	f1 2c       	mov	r15, r1
    20d6:	01 2d       	mov	r16, r1
    20d8:	11 2d       	mov	r17, r1
    20da:	ae 18       	sub	r10, r14
    20dc:	bf 08       	sbc	r11, r15
    20de:	c0 0a       	sbc	r12, r16
    20e0:	d1 0a       	sbc	r13, r17
    20e2:	02 c0       	rjmp	.+4      	; 0x20e8 <__moddi3+0xeb0>
    20e4:	da 01       	movw	r26, r20
    20e6:	c9 01       	movw	r24, r18
    20e8:	6d a8       	ldd	r6, Y+53	; 0x35
    20ea:	7e a8       	ldd	r7, Y+54	; 0x36
    20ec:	8f a8       	ldd	r8, Y+55	; 0x37
    20ee:	98 ac       	ldd	r9, Y+56	; 0x38
    20f0:	68 1a       	sub	r6, r24
    20f2:	79 0a       	sbc	r7, r25
    20f4:	8a 0a       	sbc	r8, r26
    20f6:	9b 0a       	sbc	r9, r27
    20f8:	09 a9       	ldd	r16, Y+49	; 0x31
    20fa:	1a a9       	ldd	r17, Y+50	; 0x32
    20fc:	2b a9       	ldd	r18, Y+51	; 0x33
    20fe:	3c a9       	ldd	r19, Y+52	; 0x34
    2100:	0a 19       	sub	r16, r10
    2102:	1b 09       	sbc	r17, r11
    2104:	2c 09       	sbc	r18, r12
    2106:	3d 09       	sbc	r19, r13
    2108:	58 01       	movw	r10, r16
    210a:	69 01       	movw	r12, r18
    210c:	22 24       	eor	r2, r2
    210e:	33 24       	eor	r3, r3
    2110:	21 01       	movw	r4, r2
    2112:	2d a9       	ldd	r18, Y+53	; 0x35
    2114:	3e a9       	ldd	r19, Y+54	; 0x36
    2116:	4f a9       	ldd	r20, Y+55	; 0x37
    2118:	58 ad       	ldd	r21, Y+56	; 0x38
    211a:	26 15       	cp	r18, r6
    211c:	37 05       	cpc	r19, r7
    211e:	48 05       	cpc	r20, r8
    2120:	59 05       	cpc	r21, r9
    2122:	28 f4       	brcc	.+10     	; 0x212e <__moddi3+0xef6>
    2124:	81 e0       	ldi	r24, 0x01	; 1
    2126:	28 2e       	mov	r2, r24
    2128:	31 2c       	mov	r3, r1
    212a:	41 2c       	mov	r4, r1
    212c:	51 2c       	mov	r5, r1
    212e:	86 01       	movw	r16, r12
    2130:	75 01       	movw	r14, r10
    2132:	e2 18       	sub	r14, r2
    2134:	f3 08       	sbc	r15, r3
    2136:	04 09       	sbc	r16, r4
    2138:	15 09       	sbc	r17, r5
    213a:	a8 01       	movw	r20, r16
    213c:	97 01       	movw	r18, r14
    213e:	e2 96       	adiw	r28, 0x32	; 50
    2140:	0f ac       	ldd	r0, Y+63	; 0x3f
    2142:	e2 97       	sbiw	r28, 0x32	; 50
    2144:	04 c0       	rjmp	.+8      	; 0x214e <__moddi3+0xf16>
    2146:	22 0f       	add	r18, r18
    2148:	33 1f       	adc	r19, r19
    214a:	44 1f       	adc	r20, r20
    214c:	55 1f       	adc	r21, r21
    214e:	0a 94       	dec	r0
    2150:	d2 f7       	brpl	.-12     	; 0x2146 <__moddi3+0xf0e>
    2152:	d4 01       	movw	r26, r8
    2154:	c3 01       	movw	r24, r6
    2156:	e3 96       	adiw	r28, 0x33	; 51
    2158:	0f ac       	ldd	r0, Y+63	; 0x3f
    215a:	e3 97       	sbiw	r28, 0x33	; 51
    215c:	04 c0       	rjmp	.+8      	; 0x2166 <__moddi3+0xf2e>
    215e:	b6 95       	lsr	r27
    2160:	a7 95       	ror	r26
    2162:	97 95       	ror	r25
    2164:	87 95       	ror	r24
    2166:	0a 94       	dec	r0
    2168:	d2 f7       	brpl	.-12     	; 0x215e <__moddi3+0xf26>
    216a:	28 2b       	or	r18, r24
    216c:	39 2b       	or	r19, r25
    216e:	4a 2b       	or	r20, r26
    2170:	5b 2b       	or	r21, r27
    2172:	29 a7       	std	Y+41, r18	; 0x29
    2174:	3a a7       	std	Y+42, r19	; 0x2a
    2176:	4b a7       	std	Y+43, r20	; 0x2b
    2178:	5c a7       	std	Y+44, r21	; 0x2c
    217a:	e3 96       	adiw	r28, 0x33	; 51
    217c:	0f ac       	ldd	r0, Y+63	; 0x3f
    217e:	e3 97       	sbiw	r28, 0x33	; 51
    2180:	04 c0       	rjmp	.+8      	; 0x218a <__moddi3+0xf52>
    2182:	16 95       	lsr	r17
    2184:	07 95       	ror	r16
    2186:	f7 94       	ror	r15
    2188:	e7 94       	ror	r14
    218a:	0a 94       	dec	r0
    218c:	d2 f7       	brpl	.-12     	; 0x2182 <__moddi3+0xf4a>
    218e:	ed a6       	std	Y+45, r14	; 0x2d
    2190:	fe a6       	std	Y+46, r15	; 0x2e
    2192:	0f a7       	std	Y+47, r16	; 0x2f
    2194:	18 ab       	std	Y+48, r17	; 0x30
    2196:	29 8b       	std	Y+17, r18	; 0x11
    2198:	8a a5       	ldd	r24, Y+42	; 0x2a
    219a:	8a 8b       	std	Y+18, r24	; 0x12
    219c:	8b a5       	ldd	r24, Y+43	; 0x2b
    219e:	8b 8b       	std	Y+19, r24	; 0x13
    21a0:	8c a5       	ldd	r24, Y+44	; 0x2c
    21a2:	8c 8b       	std	Y+20, r24	; 0x14
    21a4:	ed 8a       	std	Y+21, r14	; 0x15
    21a6:	8e a5       	ldd	r24, Y+46	; 0x2e
    21a8:	8e 8b       	std	Y+22, r24	; 0x16
    21aa:	8f a5       	ldd	r24, Y+47	; 0x2f
    21ac:	8f 8b       	std	Y+23, r24	; 0x17
    21ae:	88 a9       	ldd	r24, Y+48	; 0x30
    21b0:	88 8f       	std	Y+24, r24	; 0x18
    21b2:	e1 96       	adiw	r28, 0x31	; 49
    21b4:	4c ad       	ldd	r20, Y+60	; 0x3c
    21b6:	5d ad       	ldd	r21, Y+61	; 0x3d
    21b8:	6e ad       	ldd	r22, Y+62	; 0x3e
    21ba:	7f ad       	ldd	r23, Y+63	; 0x3f
    21bc:	e1 97       	sbiw	r28, 0x31	; 49
    21be:	41 15       	cp	r20, r1
    21c0:	51 05       	cpc	r21, r1
    21c2:	61 05       	cpc	r22, r1
    21c4:	71 05       	cpc	r23, r1
    21c6:	09 f4       	brne	.+2      	; 0x21ca <__moddi3+0xf92>
    21c8:	67 c0       	rjmp	.+206    	; 0x2298 <__moddi3+0x1060>
    21ca:	89 89       	ldd	r24, Y+17	; 0x11
    21cc:	2a 89       	ldd	r18, Y+18	; 0x12
    21ce:	3b 89       	ldd	r19, Y+19	; 0x13
    21d0:	4c 89       	ldd	r20, Y+20	; 0x14
    21d2:	5d 89       	ldd	r21, Y+21	; 0x15
    21d4:	ae 89       	ldd	r26, Y+22	; 0x16
    21d6:	bf 89       	ldd	r27, Y+23	; 0x17
    21d8:	18 8d       	ldd	r17, Y+24	; 0x18
    21da:	f8 2f       	mov	r31, r24
    21dc:	f1 95       	neg	r31
    21de:	91 e0       	ldi	r25, 0x01	; 1
    21e0:	1f 16       	cp	r1, r31
    21e2:	08 f0       	brcs	.+2      	; 0x21e6 <__moddi3+0xfae>
    21e4:	90 e0       	ldi	r25, 0x00	; 0
    21e6:	82 2f       	mov	r24, r18
    21e8:	81 95       	neg	r24
    21ea:	21 e0       	ldi	r18, 0x01	; 1
    21ec:	18 16       	cp	r1, r24
    21ee:	08 f0       	brcs	.+2      	; 0x21f2 <__moddi3+0xfba>
    21f0:	20 e0       	ldi	r18, 0x00	; 0
    21f2:	e8 2f       	mov	r30, r24
    21f4:	e9 1b       	sub	r30, r25
    21f6:	91 e0       	ldi	r25, 0x01	; 1
    21f8:	8e 17       	cp	r24, r30
    21fa:	08 f0       	brcs	.+2      	; 0x21fe <__moddi3+0xfc6>
    21fc:	90 e0       	ldi	r25, 0x00	; 0
    21fe:	29 2b       	or	r18, r25
    2200:	83 2f       	mov	r24, r19
    2202:	81 95       	neg	r24
    2204:	31 e0       	ldi	r19, 0x01	; 1
    2206:	18 16       	cp	r1, r24
    2208:	08 f0       	brcs	.+2      	; 0x220c <__moddi3+0xfd4>
    220a:	30 e0       	ldi	r19, 0x00	; 0
    220c:	78 2f       	mov	r23, r24
    220e:	72 1b       	sub	r23, r18
    2210:	91 e0       	ldi	r25, 0x01	; 1
    2212:	87 17       	cp	r24, r23
    2214:	08 f0       	brcs	.+2      	; 0x2218 <__moddi3+0xfe0>
    2216:	90 e0       	ldi	r25, 0x00	; 0
    2218:	39 2b       	or	r19, r25
    221a:	84 2f       	mov	r24, r20
    221c:	81 95       	neg	r24
    221e:	21 e0       	ldi	r18, 0x01	; 1
    2220:	18 16       	cp	r1, r24
    2222:	08 f0       	brcs	.+2      	; 0x2226 <__moddi3+0xfee>
    2224:	20 e0       	ldi	r18, 0x00	; 0
    2226:	68 2f       	mov	r22, r24
    2228:	63 1b       	sub	r22, r19
    222a:	91 e0       	ldi	r25, 0x01	; 1
    222c:	86 17       	cp	r24, r22
    222e:	08 f0       	brcs	.+2      	; 0x2232 <__moddi3+0xffa>
    2230:	90 e0       	ldi	r25, 0x00	; 0
    2232:	29 2b       	or	r18, r25
    2234:	85 2f       	mov	r24, r21
    2236:	81 95       	neg	r24
    2238:	31 e0       	ldi	r19, 0x01	; 1
    223a:	18 16       	cp	r1, r24
    223c:	08 f0       	brcs	.+2      	; 0x2240 <__moddi3+0x1008>
    223e:	30 e0       	ldi	r19, 0x00	; 0
    2240:	58 2f       	mov	r21, r24
    2242:	52 1b       	sub	r21, r18
    2244:	91 e0       	ldi	r25, 0x01	; 1
    2246:	85 17       	cp	r24, r21
    2248:	08 f0       	brcs	.+2      	; 0x224c <__moddi3+0x1014>
    224a:	90 e0       	ldi	r25, 0x00	; 0
    224c:	39 2b       	or	r19, r25
    224e:	8a 2f       	mov	r24, r26
    2250:	81 95       	neg	r24
    2252:	21 e0       	ldi	r18, 0x01	; 1
    2254:	18 16       	cp	r1, r24
    2256:	08 f0       	brcs	.+2      	; 0x225a <__moddi3+0x1022>
    2258:	20 e0       	ldi	r18, 0x00	; 0
    225a:	48 2f       	mov	r20, r24
    225c:	43 1b       	sub	r20, r19
    225e:	91 e0       	ldi	r25, 0x01	; 1
    2260:	84 17       	cp	r24, r20
    2262:	08 f0       	brcs	.+2      	; 0x2266 <__moddi3+0x102e>
    2264:	90 e0       	ldi	r25, 0x00	; 0
    2266:	29 2b       	or	r18, r25
    2268:	8b 2f       	mov	r24, r27
    226a:	81 95       	neg	r24
    226c:	91 e0       	ldi	r25, 0x01	; 1
    226e:	18 16       	cp	r1, r24
    2270:	08 f0       	brcs	.+2      	; 0x2274 <__moddi3+0x103c>
    2272:	90 e0       	ldi	r25, 0x00	; 0
    2274:	38 2f       	mov	r19, r24
    2276:	32 1b       	sub	r19, r18
    2278:	21 e0       	ldi	r18, 0x01	; 1
    227a:	83 17       	cp	r24, r19
    227c:	08 f0       	brcs	.+2      	; 0x2280 <__moddi3+0x1048>
    227e:	20 e0       	ldi	r18, 0x00	; 0
    2280:	92 2b       	or	r25, r18
    2282:	81 2f       	mov	r24, r17
    2284:	81 95       	neg	r24
    2286:	89 1b       	sub	r24, r25
    2288:	f9 8b       	std	Y+17, r31	; 0x11
    228a:	ea 8b       	std	Y+18, r30	; 0x12
    228c:	7b 8b       	std	Y+19, r23	; 0x13
    228e:	6c 8b       	std	Y+20, r22	; 0x14
    2290:	5d 8b       	std	Y+21, r21	; 0x15
    2292:	4e 8b       	std	Y+22, r20	; 0x16
    2294:	3f 8b       	std	Y+23, r19	; 0x17
    2296:	88 8f       	std	Y+24, r24	; 0x18
    2298:	29 89       	ldd	r18, Y+17	; 0x11
    229a:	3a 89       	ldd	r19, Y+18	; 0x12
    229c:	4b 89       	ldd	r20, Y+19	; 0x13
    229e:	5c 89       	ldd	r21, Y+20	; 0x14
    22a0:	6d 89       	ldd	r22, Y+21	; 0x15
    22a2:	7e 89       	ldd	r23, Y+22	; 0x16
    22a4:	8f 89       	ldd	r24, Y+23	; 0x17
    22a6:	98 8d       	ldd	r25, Y+24	; 0x18
    22a8:	c9 58       	subi	r28, 0x89	; 137
    22aa:	df 4f       	sbci	r29, 0xFF	; 255
    22ac:	e2 e1       	ldi	r30, 0x12	; 18
    22ae:	0c 94 91 34 	jmp	0x6922	; 0x6922 <__epilogue_restores__>

000022b2 <__udivdi3>:
    22b2:	ae e5       	ldi	r26, 0x5E	; 94
    22b4:	b0 e0       	ldi	r27, 0x00	; 0
    22b6:	ef e5       	ldi	r30, 0x5F	; 95
    22b8:	f1 e1       	ldi	r31, 0x11	; 17
    22ba:	0c 94 75 34 	jmp	0x68ea	; 0x68ea <__prologue_saves__>
    22be:	a8 e0       	ldi	r26, 0x08	; 8
    22c0:	4e 01       	movw	r8, r28
    22c2:	08 94       	sec
    22c4:	81 1c       	adc	r8, r1
    22c6:	91 1c       	adc	r9, r1
    22c8:	f4 01       	movw	r30, r8
    22ca:	6a 2e       	mov	r6, r26
    22cc:	11 92       	st	Z+, r1
    22ce:	6a 94       	dec	r6
    22d0:	e9 f7       	brne	.-6      	; 0x22cc <__udivdi3+0x1a>
    22d2:	29 83       	std	Y+1, r18	; 0x01
    22d4:	3a 83       	std	Y+2, r19	; 0x02
    22d6:	4b 83       	std	Y+3, r20	; 0x03
    22d8:	5c 83       	std	Y+4, r21	; 0x04
    22da:	6d 83       	std	Y+5, r22	; 0x05
    22dc:	7e 83       	std	Y+6, r23	; 0x06
    22de:	8f 83       	std	Y+7, r24	; 0x07
    22e0:	98 87       	std	Y+8, r25	; 0x08
    22e2:	ce 01       	movw	r24, r28
    22e4:	09 96       	adiw	r24, 0x09	; 9
    22e6:	fc 01       	movw	r30, r24
    22e8:	11 92       	st	Z+, r1
    22ea:	aa 95       	dec	r26
    22ec:	e9 f7       	brne	.-6      	; 0x22e8 <__udivdi3+0x36>
    22ee:	a9 86       	std	Y+9, r10	; 0x09
    22f0:	ba 86       	std	Y+10, r11	; 0x0a
    22f2:	cb 86       	std	Y+11, r12	; 0x0b
    22f4:	dc 86       	std	Y+12, r13	; 0x0c
    22f6:	ed 86       	std	Y+13, r14	; 0x0d
    22f8:	fe 86       	std	Y+14, r15	; 0x0e
    22fa:	0f 87       	std	Y+15, r16	; 0x0f
    22fc:	18 8b       	std	Y+16, r17	; 0x10
    22fe:	29 84       	ldd	r2, Y+9	; 0x09
    2300:	3a 84       	ldd	r3, Y+10	; 0x0a
    2302:	4b 84       	ldd	r4, Y+11	; 0x0b
    2304:	5c 84       	ldd	r5, Y+12	; 0x0c
    2306:	ed 84       	ldd	r14, Y+13	; 0x0d
    2308:	fe 84       	ldd	r15, Y+14	; 0x0e
    230a:	0f 85       	ldd	r16, Y+15	; 0x0f
    230c:	18 89       	ldd	r17, Y+16	; 0x10
    230e:	69 80       	ldd	r6, Y+1	; 0x01
    2310:	7a 80       	ldd	r7, Y+2	; 0x02
    2312:	8b 80       	ldd	r8, Y+3	; 0x03
    2314:	9c 80       	ldd	r9, Y+4	; 0x04
    2316:	6d a6       	std	Y+45, r6	; 0x2d
    2318:	7e a6       	std	Y+46, r7	; 0x2e
    231a:	8f a6       	std	Y+47, r8	; 0x2f
    231c:	98 aa       	std	Y+48, r9	; 0x30
    231e:	6d 80       	ldd	r6, Y+5	; 0x05
    2320:	7e 80       	ldd	r7, Y+6	; 0x06
    2322:	8f 80       	ldd	r8, Y+7	; 0x07
    2324:	98 84       	ldd	r9, Y+8	; 0x08
    2326:	e1 14       	cp	r14, r1
    2328:	f1 04       	cpc	r15, r1
    232a:	01 05       	cpc	r16, r1
    232c:	11 05       	cpc	r17, r1
    232e:	09 f0       	breq	.+2      	; 0x2332 <__udivdi3+0x80>
    2330:	b3 c3       	rjmp	.+1894   	; 0x2a98 <__udivdi3+0x7e6>
    2332:	62 14       	cp	r6, r2
    2334:	73 04       	cpc	r7, r3
    2336:	84 04       	cpc	r8, r4
    2338:	95 04       	cpc	r9, r5
    233a:	08 f0       	brcs	.+2      	; 0x233e <__udivdi3+0x8c>
    233c:	3d c1       	rjmp	.+634    	; 0x25b8 <__udivdi3+0x306>
    233e:	00 e0       	ldi	r16, 0x00	; 0
    2340:	20 16       	cp	r2, r16
    2342:	00 e0       	ldi	r16, 0x00	; 0
    2344:	30 06       	cpc	r3, r16
    2346:	01 e0       	ldi	r16, 0x01	; 1
    2348:	40 06       	cpc	r4, r16
    234a:	00 e0       	ldi	r16, 0x00	; 0
    234c:	50 06       	cpc	r5, r16
    234e:	88 f4       	brcc	.+34     	; 0x2372 <__udivdi3+0xc0>
    2350:	1f ef       	ldi	r17, 0xFF	; 255
    2352:	21 16       	cp	r2, r17
    2354:	31 04       	cpc	r3, r1
    2356:	41 04       	cpc	r4, r1
    2358:	51 04       	cpc	r5, r1
    235a:	39 f0       	breq	.+14     	; 0x236a <__udivdi3+0xb8>
    235c:	30 f0       	brcs	.+12     	; 0x236a <__udivdi3+0xb8>
    235e:	48 e0       	ldi	r20, 0x08	; 8
    2360:	e4 2e       	mov	r14, r20
    2362:	f1 2c       	mov	r15, r1
    2364:	01 2d       	mov	r16, r1
    2366:	11 2d       	mov	r17, r1
    2368:	18 c0       	rjmp	.+48     	; 0x239a <__udivdi3+0xe8>
    236a:	ee 24       	eor	r14, r14
    236c:	ff 24       	eor	r15, r15
    236e:	87 01       	movw	r16, r14
    2370:	14 c0       	rjmp	.+40     	; 0x239a <__udivdi3+0xe8>
    2372:	20 e0       	ldi	r18, 0x00	; 0
    2374:	22 16       	cp	r2, r18
    2376:	20 e0       	ldi	r18, 0x00	; 0
    2378:	32 06       	cpc	r3, r18
    237a:	20 e0       	ldi	r18, 0x00	; 0
    237c:	42 06       	cpc	r4, r18
    237e:	21 e0       	ldi	r18, 0x01	; 1
    2380:	52 06       	cpc	r5, r18
    2382:	30 f0       	brcs	.+12     	; 0x2390 <__udivdi3+0xde>
    2384:	38 e1       	ldi	r19, 0x18	; 24
    2386:	e3 2e       	mov	r14, r19
    2388:	f1 2c       	mov	r15, r1
    238a:	01 2d       	mov	r16, r1
    238c:	11 2d       	mov	r17, r1
    238e:	05 c0       	rjmp	.+10     	; 0x239a <__udivdi3+0xe8>
    2390:	20 e1       	ldi	r18, 0x10	; 16
    2392:	e2 2e       	mov	r14, r18
    2394:	f1 2c       	mov	r15, r1
    2396:	01 2d       	mov	r16, r1
    2398:	11 2d       	mov	r17, r1
    239a:	d2 01       	movw	r26, r4
    239c:	c1 01       	movw	r24, r2
    239e:	0e 2c       	mov	r0, r14
    23a0:	04 c0       	rjmp	.+8      	; 0x23aa <__udivdi3+0xf8>
    23a2:	b6 95       	lsr	r27
    23a4:	a7 95       	ror	r26
    23a6:	97 95       	ror	r25
    23a8:	87 95       	ror	r24
    23aa:	0a 94       	dec	r0
    23ac:	d2 f7       	brpl	.-12     	; 0x23a2 <__udivdi3+0xf0>
    23ae:	8b 51       	subi	r24, 0x1B	; 27
    23b0:	9f 4f       	sbci	r25, 0xFF	; 255
    23b2:	dc 01       	movw	r26, r24
    23b4:	2c 91       	ld	r18, X
    23b6:	80 e2       	ldi	r24, 0x20	; 32
    23b8:	90 e0       	ldi	r25, 0x00	; 0
    23ba:	a0 e0       	ldi	r26, 0x00	; 0
    23bc:	b0 e0       	ldi	r27, 0x00	; 0
    23be:	8e 19       	sub	r24, r14
    23c0:	9f 09       	sbc	r25, r15
    23c2:	a0 0b       	sbc	r26, r16
    23c4:	b1 0b       	sbc	r27, r17
    23c6:	7c 01       	movw	r14, r24
    23c8:	8d 01       	movw	r16, r26
    23ca:	e2 1a       	sub	r14, r18
    23cc:	f1 08       	sbc	r15, r1
    23ce:	01 09       	sbc	r16, r1
    23d0:	11 09       	sbc	r17, r1
    23d2:	e1 14       	cp	r14, r1
    23d4:	f1 04       	cpc	r15, r1
    23d6:	01 05       	cpc	r16, r1
    23d8:	11 05       	cpc	r17, r1
    23da:	a1 f1       	breq	.+104    	; 0x2444 <__udivdi3+0x192>
    23dc:	0e 2c       	mov	r0, r14
    23de:	04 c0       	rjmp	.+8      	; 0x23e8 <__udivdi3+0x136>
    23e0:	22 0c       	add	r2, r2
    23e2:	33 1c       	adc	r3, r3
    23e4:	44 1c       	adc	r4, r4
    23e6:	55 1c       	adc	r5, r5
    23e8:	0a 94       	dec	r0
    23ea:	d2 f7       	brpl	.-12     	; 0x23e0 <__udivdi3+0x12e>
    23ec:	a4 01       	movw	r20, r8
    23ee:	93 01       	movw	r18, r6
    23f0:	0e 2c       	mov	r0, r14
    23f2:	04 c0       	rjmp	.+8      	; 0x23fc <__udivdi3+0x14a>
    23f4:	22 0f       	add	r18, r18
    23f6:	33 1f       	adc	r19, r19
    23f8:	44 1f       	adc	r20, r20
    23fa:	55 1f       	adc	r21, r21
    23fc:	0a 94       	dec	r0
    23fe:	d2 f7       	brpl	.-12     	; 0x23f4 <__udivdi3+0x142>
    2400:	80 e2       	ldi	r24, 0x20	; 32
    2402:	90 e0       	ldi	r25, 0x00	; 0
    2404:	8e 19       	sub	r24, r14
    2406:	9f 09       	sbc	r25, r15
    2408:	6d a4       	ldd	r6, Y+45	; 0x2d
    240a:	7e a4       	ldd	r7, Y+46	; 0x2e
    240c:	8f a4       	ldd	r8, Y+47	; 0x2f
    240e:	98 a8       	ldd	r9, Y+48	; 0x30
    2410:	04 c0       	rjmp	.+8      	; 0x241a <__udivdi3+0x168>
    2412:	96 94       	lsr	r9
    2414:	87 94       	ror	r8
    2416:	77 94       	ror	r7
    2418:	67 94       	ror	r6
    241a:	8a 95       	dec	r24
    241c:	d2 f7       	brpl	.-12     	; 0x2412 <__udivdi3+0x160>
    241e:	62 2a       	or	r6, r18
    2420:	73 2a       	or	r7, r19
    2422:	84 2a       	or	r8, r20
    2424:	95 2a       	or	r9, r21
    2426:	ad a4       	ldd	r10, Y+45	; 0x2d
    2428:	be a4       	ldd	r11, Y+46	; 0x2e
    242a:	cf a4       	ldd	r12, Y+47	; 0x2f
    242c:	d8 a8       	ldd	r13, Y+48	; 0x30
    242e:	04 c0       	rjmp	.+8      	; 0x2438 <__udivdi3+0x186>
    2430:	aa 0c       	add	r10, r10
    2432:	bb 1c       	adc	r11, r11
    2434:	cc 1c       	adc	r12, r12
    2436:	dd 1c       	adc	r13, r13
    2438:	ea 94       	dec	r14
    243a:	d2 f7       	brpl	.-12     	; 0x2430 <__udivdi3+0x17e>
    243c:	ad a6       	std	Y+45, r10	; 0x2d
    243e:	be a6       	std	Y+46, r11	; 0x2e
    2440:	cf a6       	std	Y+47, r12	; 0x2f
    2442:	d8 aa       	std	Y+48, r13	; 0x30
    2444:	62 01       	movw	r12, r4
    2446:	ee 24       	eor	r14, r14
    2448:	ff 24       	eor	r15, r15
    244a:	cd aa       	std	Y+53, r12	; 0x35
    244c:	de aa       	std	Y+54, r13	; 0x36
    244e:	ef aa       	std	Y+55, r14	; 0x37
    2450:	f8 ae       	std	Y+56, r15	; 0x38
    2452:	92 01       	movw	r18, r4
    2454:	81 01       	movw	r16, r2
    2456:	20 70       	andi	r18, 0x00	; 0
    2458:	30 70       	andi	r19, 0x00	; 0
    245a:	09 af       	std	Y+57, r16	; 0x39
    245c:	1a af       	std	Y+58, r17	; 0x3a
    245e:	2b af       	std	Y+59, r18	; 0x3b
    2460:	3c af       	std	Y+60, r19	; 0x3c
    2462:	c4 01       	movw	r24, r8
    2464:	b3 01       	movw	r22, r6
    2466:	a7 01       	movw	r20, r14
    2468:	96 01       	movw	r18, r12
    246a:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    246e:	7b 01       	movw	r14, r22
    2470:	8c 01       	movw	r16, r24
    2472:	c4 01       	movw	r24, r8
    2474:	b3 01       	movw	r22, r6
    2476:	2d a9       	ldd	r18, Y+53	; 0x35
    2478:	3e a9       	ldd	r19, Y+54	; 0x36
    247a:	4f a9       	ldd	r20, Y+55	; 0x37
    247c:	58 ad       	ldd	r21, Y+56	; 0x38
    247e:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    2482:	c9 01       	movw	r24, r18
    2484:	da 01       	movw	r26, r20
    2486:	3c 01       	movw	r6, r24
    2488:	4d 01       	movw	r8, r26
    248a:	c4 01       	movw	r24, r8
    248c:	b3 01       	movw	r22, r6
    248e:	29 ad       	ldd	r18, Y+57	; 0x39
    2490:	3a ad       	ldd	r19, Y+58	; 0x3a
    2492:	4b ad       	ldd	r20, Y+59	; 0x3b
    2494:	5c ad       	ldd	r21, Y+60	; 0x3c
    2496:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    249a:	9b 01       	movw	r18, r22
    249c:	ac 01       	movw	r20, r24
    249e:	87 01       	movw	r16, r14
    24a0:	ff 24       	eor	r15, r15
    24a2:	ee 24       	eor	r14, r14
    24a4:	ad a4       	ldd	r10, Y+45	; 0x2d
    24a6:	be a4       	ldd	r11, Y+46	; 0x2e
    24a8:	cf a4       	ldd	r12, Y+47	; 0x2f
    24aa:	d8 a8       	ldd	r13, Y+48	; 0x30
    24ac:	c6 01       	movw	r24, r12
    24ae:	aa 27       	eor	r26, r26
    24b0:	bb 27       	eor	r27, r27
    24b2:	57 01       	movw	r10, r14
    24b4:	68 01       	movw	r12, r16
    24b6:	a8 2a       	or	r10, r24
    24b8:	b9 2a       	or	r11, r25
    24ba:	ca 2a       	or	r12, r26
    24bc:	db 2a       	or	r13, r27
    24be:	a2 16       	cp	r10, r18
    24c0:	b3 06       	cpc	r11, r19
    24c2:	c4 06       	cpc	r12, r20
    24c4:	d5 06       	cpc	r13, r21
    24c6:	e0 f4       	brcc	.+56     	; 0x2500 <__udivdi3+0x24e>
    24c8:	08 94       	sec
    24ca:	61 08       	sbc	r6, r1
    24cc:	71 08       	sbc	r7, r1
    24ce:	81 08       	sbc	r8, r1
    24d0:	91 08       	sbc	r9, r1
    24d2:	a2 0c       	add	r10, r2
    24d4:	b3 1c       	adc	r11, r3
    24d6:	c4 1c       	adc	r12, r4
    24d8:	d5 1c       	adc	r13, r5
    24da:	a2 14       	cp	r10, r2
    24dc:	b3 04       	cpc	r11, r3
    24de:	c4 04       	cpc	r12, r4
    24e0:	d5 04       	cpc	r13, r5
    24e2:	70 f0       	brcs	.+28     	; 0x2500 <__udivdi3+0x24e>
    24e4:	a2 16       	cp	r10, r18
    24e6:	b3 06       	cpc	r11, r19
    24e8:	c4 06       	cpc	r12, r20
    24ea:	d5 06       	cpc	r13, r21
    24ec:	48 f4       	brcc	.+18     	; 0x2500 <__udivdi3+0x24e>
    24ee:	08 94       	sec
    24f0:	61 08       	sbc	r6, r1
    24f2:	71 08       	sbc	r7, r1
    24f4:	81 08       	sbc	r8, r1
    24f6:	91 08       	sbc	r9, r1
    24f8:	a2 0c       	add	r10, r2
    24fa:	b3 1c       	adc	r11, r3
    24fc:	c4 1c       	adc	r12, r4
    24fe:	d5 1c       	adc	r13, r5
    2500:	a2 1a       	sub	r10, r18
    2502:	b3 0a       	sbc	r11, r19
    2504:	c4 0a       	sbc	r12, r20
    2506:	d5 0a       	sbc	r13, r21
    2508:	c6 01       	movw	r24, r12
    250a:	b5 01       	movw	r22, r10
    250c:	2d a9       	ldd	r18, Y+53	; 0x35
    250e:	3e a9       	ldd	r19, Y+54	; 0x36
    2510:	4f a9       	ldd	r20, Y+55	; 0x37
    2512:	58 ad       	ldd	r21, Y+56	; 0x38
    2514:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    2518:	7b 01       	movw	r14, r22
    251a:	8c 01       	movw	r16, r24
    251c:	c6 01       	movw	r24, r12
    251e:	b5 01       	movw	r22, r10
    2520:	2d a9       	ldd	r18, Y+53	; 0x35
    2522:	3e a9       	ldd	r19, Y+54	; 0x36
    2524:	4f a9       	ldd	r20, Y+55	; 0x37
    2526:	58 ad       	ldd	r21, Y+56	; 0x38
    2528:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    252c:	c9 01       	movw	r24, r18
    252e:	da 01       	movw	r26, r20
    2530:	5c 01       	movw	r10, r24
    2532:	6d 01       	movw	r12, r26
    2534:	c6 01       	movw	r24, r12
    2536:	b5 01       	movw	r22, r10
    2538:	29 ad       	ldd	r18, Y+57	; 0x39
    253a:	3a ad       	ldd	r19, Y+58	; 0x3a
    253c:	4b ad       	ldd	r20, Y+59	; 0x3b
    253e:	5c ad       	ldd	r21, Y+60	; 0x3c
    2540:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    2544:	9b 01       	movw	r18, r22
    2546:	ac 01       	movw	r20, r24
    2548:	87 01       	movw	r16, r14
    254a:	ff 24       	eor	r15, r15
    254c:	ee 24       	eor	r14, r14
    254e:	8d a5       	ldd	r24, Y+45	; 0x2d
    2550:	9e a5       	ldd	r25, Y+46	; 0x2e
    2552:	af a5       	ldd	r26, Y+47	; 0x2f
    2554:	b8 a9       	ldd	r27, Y+48	; 0x30
    2556:	a0 70       	andi	r26, 0x00	; 0
    2558:	b0 70       	andi	r27, 0x00	; 0
    255a:	e8 2a       	or	r14, r24
    255c:	f9 2a       	or	r15, r25
    255e:	0a 2b       	or	r16, r26
    2560:	1b 2b       	or	r17, r27
    2562:	e2 16       	cp	r14, r18
    2564:	f3 06       	cpc	r15, r19
    2566:	04 07       	cpc	r16, r20
    2568:	15 07       	cpc	r17, r21
    256a:	c0 f4       	brcc	.+48     	; 0x259c <__udivdi3+0x2ea>
    256c:	08 94       	sec
    256e:	a1 08       	sbc	r10, r1
    2570:	b1 08       	sbc	r11, r1
    2572:	c1 08       	sbc	r12, r1
    2574:	d1 08       	sbc	r13, r1
    2576:	e2 0c       	add	r14, r2
    2578:	f3 1c       	adc	r15, r3
    257a:	04 1d       	adc	r16, r4
    257c:	15 1d       	adc	r17, r5
    257e:	e2 14       	cp	r14, r2
    2580:	f3 04       	cpc	r15, r3
    2582:	04 05       	cpc	r16, r4
    2584:	15 05       	cpc	r17, r5
    2586:	50 f0       	brcs	.+20     	; 0x259c <__udivdi3+0x2ea>
    2588:	e2 16       	cp	r14, r18
    258a:	f3 06       	cpc	r15, r19
    258c:	04 07       	cpc	r16, r20
    258e:	15 07       	cpc	r17, r21
    2590:	28 f4       	brcc	.+10     	; 0x259c <__udivdi3+0x2ea>
    2592:	08 94       	sec
    2594:	a1 08       	sbc	r10, r1
    2596:	b1 08       	sbc	r11, r1
    2598:	c1 08       	sbc	r12, r1
    259a:	d1 08       	sbc	r13, r1
    259c:	d3 01       	movw	r26, r6
    259e:	99 27       	eor	r25, r25
    25a0:	88 27       	eor	r24, r24
    25a2:	86 01       	movw	r16, r12
    25a4:	75 01       	movw	r14, r10
    25a6:	e8 2a       	or	r14, r24
    25a8:	f9 2a       	or	r15, r25
    25aa:	0a 2b       	or	r16, r26
    25ac:	1b 2b       	or	r17, r27
    25ae:	e9 aa       	std	Y+49, r14	; 0x31
    25b0:	fa aa       	std	Y+50, r15	; 0x32
    25b2:	0b ab       	std	Y+51, r16	; 0x33
    25b4:	1c ab       	std	Y+52, r17	; 0x34
    25b6:	cf c4       	rjmp	.+2462   	; 0x2f56 <__udivdi3+0xca4>
    25b8:	21 14       	cp	r2, r1
    25ba:	31 04       	cpc	r3, r1
    25bc:	41 04       	cpc	r4, r1
    25be:	51 04       	cpc	r5, r1
    25c0:	71 f4       	brne	.+28     	; 0x25de <__udivdi3+0x32c>
    25c2:	61 e0       	ldi	r22, 0x01	; 1
    25c4:	70 e0       	ldi	r23, 0x00	; 0
    25c6:	80 e0       	ldi	r24, 0x00	; 0
    25c8:	90 e0       	ldi	r25, 0x00	; 0
    25ca:	20 e0       	ldi	r18, 0x00	; 0
    25cc:	30 e0       	ldi	r19, 0x00	; 0
    25ce:	40 e0       	ldi	r20, 0x00	; 0
    25d0:	50 e0       	ldi	r21, 0x00	; 0
    25d2:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    25d6:	c9 01       	movw	r24, r18
    25d8:	da 01       	movw	r26, r20
    25da:	1c 01       	movw	r2, r24
    25dc:	2d 01       	movw	r4, r26
    25de:	00 e0       	ldi	r16, 0x00	; 0
    25e0:	20 16       	cp	r2, r16
    25e2:	00 e0       	ldi	r16, 0x00	; 0
    25e4:	30 06       	cpc	r3, r16
    25e6:	01 e0       	ldi	r16, 0x01	; 1
    25e8:	40 06       	cpc	r4, r16
    25ea:	00 e0       	ldi	r16, 0x00	; 0
    25ec:	50 06       	cpc	r5, r16
    25ee:	88 f4       	brcc	.+34     	; 0x2612 <__udivdi3+0x360>
    25f0:	1f ef       	ldi	r17, 0xFF	; 255
    25f2:	21 16       	cp	r2, r17
    25f4:	31 04       	cpc	r3, r1
    25f6:	41 04       	cpc	r4, r1
    25f8:	51 04       	cpc	r5, r1
    25fa:	31 f0       	breq	.+12     	; 0x2608 <__udivdi3+0x356>
    25fc:	28 f0       	brcs	.+10     	; 0x2608 <__udivdi3+0x356>
    25fe:	48 e0       	ldi	r20, 0x08	; 8
    2600:	50 e0       	ldi	r21, 0x00	; 0
    2602:	60 e0       	ldi	r22, 0x00	; 0
    2604:	70 e0       	ldi	r23, 0x00	; 0
    2606:	17 c0       	rjmp	.+46     	; 0x2636 <__udivdi3+0x384>
    2608:	40 e0       	ldi	r20, 0x00	; 0
    260a:	50 e0       	ldi	r21, 0x00	; 0
    260c:	60 e0       	ldi	r22, 0x00	; 0
    260e:	70 e0       	ldi	r23, 0x00	; 0
    2610:	12 c0       	rjmp	.+36     	; 0x2636 <__udivdi3+0x384>
    2612:	20 e0       	ldi	r18, 0x00	; 0
    2614:	22 16       	cp	r2, r18
    2616:	20 e0       	ldi	r18, 0x00	; 0
    2618:	32 06       	cpc	r3, r18
    261a:	20 e0       	ldi	r18, 0x00	; 0
    261c:	42 06       	cpc	r4, r18
    261e:	21 e0       	ldi	r18, 0x01	; 1
    2620:	52 06       	cpc	r5, r18
    2622:	28 f0       	brcs	.+10     	; 0x262e <__udivdi3+0x37c>
    2624:	48 e1       	ldi	r20, 0x18	; 24
    2626:	50 e0       	ldi	r21, 0x00	; 0
    2628:	60 e0       	ldi	r22, 0x00	; 0
    262a:	70 e0       	ldi	r23, 0x00	; 0
    262c:	04 c0       	rjmp	.+8      	; 0x2636 <__udivdi3+0x384>
    262e:	40 e1       	ldi	r20, 0x10	; 16
    2630:	50 e0       	ldi	r21, 0x00	; 0
    2632:	60 e0       	ldi	r22, 0x00	; 0
    2634:	70 e0       	ldi	r23, 0x00	; 0
    2636:	d2 01       	movw	r26, r4
    2638:	c1 01       	movw	r24, r2
    263a:	04 2e       	mov	r0, r20
    263c:	04 c0       	rjmp	.+8      	; 0x2646 <__udivdi3+0x394>
    263e:	b6 95       	lsr	r27
    2640:	a7 95       	ror	r26
    2642:	97 95       	ror	r25
    2644:	87 95       	ror	r24
    2646:	0a 94       	dec	r0
    2648:	d2 f7       	brpl	.-12     	; 0x263e <__udivdi3+0x38c>
    264a:	8b 51       	subi	r24, 0x1B	; 27
    264c:	9f 4f       	sbci	r25, 0xFF	; 255
    264e:	dc 01       	movw	r26, r24
    2650:	2c 91       	ld	r18, X
    2652:	e0 e2       	ldi	r30, 0x20	; 32
    2654:	ee 2e       	mov	r14, r30
    2656:	f1 2c       	mov	r15, r1
    2658:	01 2d       	mov	r16, r1
    265a:	11 2d       	mov	r17, r1
    265c:	d8 01       	movw	r26, r16
    265e:	c7 01       	movw	r24, r14
    2660:	84 1b       	sub	r24, r20
    2662:	95 0b       	sbc	r25, r21
    2664:	a6 0b       	sbc	r26, r22
    2666:	b7 0b       	sbc	r27, r23
    2668:	82 1b       	sub	r24, r18
    266a:	91 09       	sbc	r25, r1
    266c:	a1 09       	sbc	r26, r1
    266e:	b1 09       	sbc	r27, r1
    2670:	00 97       	sbiw	r24, 0x00	; 0
    2672:	a1 05       	cpc	r26, r1
    2674:	b1 05       	cpc	r27, r1
    2676:	61 f4       	brne	.+24     	; 0x2690 <__udivdi3+0x3de>
    2678:	64 01       	movw	r12, r8
    267a:	53 01       	movw	r10, r6
    267c:	a2 18       	sub	r10, r2
    267e:	b3 08       	sbc	r11, r3
    2680:	c4 08       	sbc	r12, r4
    2682:	d5 08       	sbc	r13, r5
    2684:	31 e0       	ldi	r19, 0x01	; 1
    2686:	63 2e       	mov	r6, r19
    2688:	71 2c       	mov	r7, r1
    268a:	81 2c       	mov	r8, r1
    268c:	91 2c       	mov	r9, r1
    268e:	1e c1       	rjmp	.+572    	; 0x28cc <__udivdi3+0x61a>
    2690:	6f 96       	adiw	r28, 0x1f	; 31
    2692:	8f af       	std	Y+63, r24	; 0x3f
    2694:	6f 97       	sbiw	r28, 0x1f	; 31
    2696:	08 2e       	mov	r0, r24
    2698:	04 c0       	rjmp	.+8      	; 0x26a2 <__udivdi3+0x3f0>
    269a:	22 0c       	add	r2, r2
    269c:	33 1c       	adc	r3, r3
    269e:	44 1c       	adc	r4, r4
    26a0:	55 1c       	adc	r5, r5
    26a2:	0a 94       	dec	r0
    26a4:	d2 f7       	brpl	.-12     	; 0x269a <__udivdi3+0x3e8>
    26a6:	ee 2d       	mov	r30, r14
    26a8:	e8 1b       	sub	r30, r24
    26aa:	64 01       	movw	r12, r8
    26ac:	53 01       	movw	r10, r6
    26ae:	0e 2e       	mov	r0, r30
    26b0:	04 c0       	rjmp	.+8      	; 0x26ba <__udivdi3+0x408>
    26b2:	d6 94       	lsr	r13
    26b4:	c7 94       	ror	r12
    26b6:	b7 94       	ror	r11
    26b8:	a7 94       	ror	r10
    26ba:	0a 94       	dec	r0
    26bc:	d2 f7       	brpl	.-12     	; 0x26b2 <__udivdi3+0x400>
    26be:	a4 01       	movw	r20, r8
    26c0:	93 01       	movw	r18, r6
    26c2:	6f 96       	adiw	r28, 0x1f	; 31
    26c4:	0f ac       	ldd	r0, Y+63	; 0x3f
    26c6:	6f 97       	sbiw	r28, 0x1f	; 31
    26c8:	04 c0       	rjmp	.+8      	; 0x26d2 <__udivdi3+0x420>
    26ca:	22 0f       	add	r18, r18
    26cc:	33 1f       	adc	r19, r19
    26ce:	44 1f       	adc	r20, r20
    26d0:	55 1f       	adc	r21, r21
    26d2:	0a 94       	dec	r0
    26d4:	d2 f7       	brpl	.-12     	; 0x26ca <__udivdi3+0x418>
    26d6:	6d a4       	ldd	r6, Y+45	; 0x2d
    26d8:	7e a4       	ldd	r7, Y+46	; 0x2e
    26da:	8f a4       	ldd	r8, Y+47	; 0x2f
    26dc:	98 a8       	ldd	r9, Y+48	; 0x30
    26de:	0e 2e       	mov	r0, r30
    26e0:	04 c0       	rjmp	.+8      	; 0x26ea <__udivdi3+0x438>
    26e2:	96 94       	lsr	r9
    26e4:	87 94       	ror	r8
    26e6:	77 94       	ror	r7
    26e8:	67 94       	ror	r6
    26ea:	0a 94       	dec	r0
    26ec:	d2 f7       	brpl	.-12     	; 0x26e2 <__udivdi3+0x430>
    26ee:	84 01       	movw	r16, r8
    26f0:	73 01       	movw	r14, r6
    26f2:	e2 2a       	or	r14, r18
    26f4:	f3 2a       	or	r15, r19
    26f6:	04 2b       	or	r16, r20
    26f8:	15 2b       	or	r17, r21
    26fa:	e9 a6       	std	Y+41, r14	; 0x29
    26fc:	fa a6       	std	Y+42, r15	; 0x2a
    26fe:	0b a7       	std	Y+43, r16	; 0x2b
    2700:	1c a7       	std	Y+44, r17	; 0x2c
    2702:	32 01       	movw	r6, r4
    2704:	88 24       	eor	r8, r8
    2706:	99 24       	eor	r9, r9
    2708:	92 01       	movw	r18, r4
    270a:	81 01       	movw	r16, r2
    270c:	20 70       	andi	r18, 0x00	; 0
    270e:	30 70       	andi	r19, 0x00	; 0
    2710:	21 96       	adiw	r28, 0x01	; 1
    2712:	0c af       	std	Y+60, r16	; 0x3c
    2714:	1d af       	std	Y+61, r17	; 0x3d
    2716:	2e af       	std	Y+62, r18	; 0x3e
    2718:	3f af       	std	Y+63, r19	; 0x3f
    271a:	21 97       	sbiw	r28, 0x01	; 1
    271c:	c6 01       	movw	r24, r12
    271e:	b5 01       	movw	r22, r10
    2720:	a4 01       	movw	r20, r8
    2722:	93 01       	movw	r18, r6
    2724:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    2728:	7b 01       	movw	r14, r22
    272a:	8c 01       	movw	r16, r24
    272c:	c6 01       	movw	r24, r12
    272e:	b5 01       	movw	r22, r10
    2730:	a4 01       	movw	r20, r8
    2732:	93 01       	movw	r18, r6
    2734:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    2738:	c9 01       	movw	r24, r18
    273a:	da 01       	movw	r26, r20
    273c:	25 96       	adiw	r28, 0x05	; 5
    273e:	8c af       	std	Y+60, r24	; 0x3c
    2740:	9d af       	std	Y+61, r25	; 0x3d
    2742:	ae af       	std	Y+62, r26	; 0x3e
    2744:	bf af       	std	Y+63, r27	; 0x3f
    2746:	25 97       	sbiw	r28, 0x05	; 5
    2748:	bc 01       	movw	r22, r24
    274a:	cd 01       	movw	r24, r26
    274c:	21 96       	adiw	r28, 0x01	; 1
    274e:	2c ad       	ldd	r18, Y+60	; 0x3c
    2750:	3d ad       	ldd	r19, Y+61	; 0x3d
    2752:	4e ad       	ldd	r20, Y+62	; 0x3e
    2754:	5f ad       	ldd	r21, Y+63	; 0x3f
    2756:	21 97       	sbiw	r28, 0x01	; 1
    2758:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    275c:	9b 01       	movw	r18, r22
    275e:	ac 01       	movw	r20, r24
    2760:	87 01       	movw	r16, r14
    2762:	ff 24       	eor	r15, r15
    2764:	ee 24       	eor	r14, r14
    2766:	a9 a4       	ldd	r10, Y+41	; 0x29
    2768:	ba a4       	ldd	r11, Y+42	; 0x2a
    276a:	cb a4       	ldd	r12, Y+43	; 0x2b
    276c:	dc a4       	ldd	r13, Y+44	; 0x2c
    276e:	c6 01       	movw	r24, r12
    2770:	aa 27       	eor	r26, r26
    2772:	bb 27       	eor	r27, r27
    2774:	5c 01       	movw	r10, r24
    2776:	6d 01       	movw	r12, r26
    2778:	ae 28       	or	r10, r14
    277a:	bf 28       	or	r11, r15
    277c:	c0 2a       	or	r12, r16
    277e:	d1 2a       	or	r13, r17
    2780:	a2 16       	cp	r10, r18
    2782:	b3 06       	cpc	r11, r19
    2784:	c4 06       	cpc	r12, r20
    2786:	d5 06       	cpc	r13, r21
    2788:	60 f5       	brcc	.+88     	; 0x27e2 <__udivdi3+0x530>
    278a:	25 96       	adiw	r28, 0x05	; 5
    278c:	6c ad       	ldd	r22, Y+60	; 0x3c
    278e:	7d ad       	ldd	r23, Y+61	; 0x3d
    2790:	8e ad       	ldd	r24, Y+62	; 0x3e
    2792:	9f ad       	ldd	r25, Y+63	; 0x3f
    2794:	25 97       	sbiw	r28, 0x05	; 5
    2796:	61 50       	subi	r22, 0x01	; 1
    2798:	70 40       	sbci	r23, 0x00	; 0
    279a:	80 40       	sbci	r24, 0x00	; 0
    279c:	90 40       	sbci	r25, 0x00	; 0
    279e:	25 96       	adiw	r28, 0x05	; 5
    27a0:	6c af       	std	Y+60, r22	; 0x3c
    27a2:	7d af       	std	Y+61, r23	; 0x3d
    27a4:	8e af       	std	Y+62, r24	; 0x3e
    27a6:	9f af       	std	Y+63, r25	; 0x3f
    27a8:	25 97       	sbiw	r28, 0x05	; 5
    27aa:	a2 0c       	add	r10, r2
    27ac:	b3 1c       	adc	r11, r3
    27ae:	c4 1c       	adc	r12, r4
    27b0:	d5 1c       	adc	r13, r5
    27b2:	a2 14       	cp	r10, r2
    27b4:	b3 04       	cpc	r11, r3
    27b6:	c4 04       	cpc	r12, r4
    27b8:	d5 04       	cpc	r13, r5
    27ba:	98 f0       	brcs	.+38     	; 0x27e2 <__udivdi3+0x530>
    27bc:	a2 16       	cp	r10, r18
    27be:	b3 06       	cpc	r11, r19
    27c0:	c4 06       	cpc	r12, r20
    27c2:	d5 06       	cpc	r13, r21
    27c4:	70 f4       	brcc	.+28     	; 0x27e2 <__udivdi3+0x530>
    27c6:	61 50       	subi	r22, 0x01	; 1
    27c8:	70 40       	sbci	r23, 0x00	; 0
    27ca:	80 40       	sbci	r24, 0x00	; 0
    27cc:	90 40       	sbci	r25, 0x00	; 0
    27ce:	25 96       	adiw	r28, 0x05	; 5
    27d0:	6c af       	std	Y+60, r22	; 0x3c
    27d2:	7d af       	std	Y+61, r23	; 0x3d
    27d4:	8e af       	std	Y+62, r24	; 0x3e
    27d6:	9f af       	std	Y+63, r25	; 0x3f
    27d8:	25 97       	sbiw	r28, 0x05	; 5
    27da:	a2 0c       	add	r10, r2
    27dc:	b3 1c       	adc	r11, r3
    27de:	c4 1c       	adc	r12, r4
    27e0:	d5 1c       	adc	r13, r5
    27e2:	a2 1a       	sub	r10, r18
    27e4:	b3 0a       	sbc	r11, r19
    27e6:	c4 0a       	sbc	r12, r20
    27e8:	d5 0a       	sbc	r13, r21
    27ea:	c6 01       	movw	r24, r12
    27ec:	b5 01       	movw	r22, r10
    27ee:	a4 01       	movw	r20, r8
    27f0:	93 01       	movw	r18, r6
    27f2:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    27f6:	7b 01       	movw	r14, r22
    27f8:	8c 01       	movw	r16, r24
    27fa:	c6 01       	movw	r24, r12
    27fc:	b5 01       	movw	r22, r10
    27fe:	a4 01       	movw	r20, r8
    2800:	93 01       	movw	r18, r6
    2802:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    2806:	c9 01       	movw	r24, r18
    2808:	da 01       	movw	r26, r20
    280a:	3c 01       	movw	r6, r24
    280c:	4d 01       	movw	r8, r26
    280e:	c4 01       	movw	r24, r8
    2810:	b3 01       	movw	r22, r6
    2812:	21 96       	adiw	r28, 0x01	; 1
    2814:	2c ad       	ldd	r18, Y+60	; 0x3c
    2816:	3d ad       	ldd	r19, Y+61	; 0x3d
    2818:	4e ad       	ldd	r20, Y+62	; 0x3e
    281a:	5f ad       	ldd	r21, Y+63	; 0x3f
    281c:	21 97       	sbiw	r28, 0x01	; 1
    281e:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    2822:	9b 01       	movw	r18, r22
    2824:	ac 01       	movw	r20, r24
    2826:	87 01       	movw	r16, r14
    2828:	ff 24       	eor	r15, r15
    282a:	ee 24       	eor	r14, r14
    282c:	89 a5       	ldd	r24, Y+41	; 0x29
    282e:	9a a5       	ldd	r25, Y+42	; 0x2a
    2830:	ab a5       	ldd	r26, Y+43	; 0x2b
    2832:	bc a5       	ldd	r27, Y+44	; 0x2c
    2834:	a0 70       	andi	r26, 0x00	; 0
    2836:	b0 70       	andi	r27, 0x00	; 0
    2838:	57 01       	movw	r10, r14
    283a:	68 01       	movw	r12, r16
    283c:	a8 2a       	or	r10, r24
    283e:	b9 2a       	or	r11, r25
    2840:	ca 2a       	or	r12, r26
    2842:	db 2a       	or	r13, r27
    2844:	a2 16       	cp	r10, r18
    2846:	b3 06       	cpc	r11, r19
    2848:	c4 06       	cpc	r12, r20
    284a:	d5 06       	cpc	r13, r21
    284c:	e0 f4       	brcc	.+56     	; 0x2886 <__udivdi3+0x5d4>
    284e:	08 94       	sec
    2850:	61 08       	sbc	r6, r1
    2852:	71 08       	sbc	r7, r1
    2854:	81 08       	sbc	r8, r1
    2856:	91 08       	sbc	r9, r1
    2858:	a2 0c       	add	r10, r2
    285a:	b3 1c       	adc	r11, r3
    285c:	c4 1c       	adc	r12, r4
    285e:	d5 1c       	adc	r13, r5
    2860:	a2 14       	cp	r10, r2
    2862:	b3 04       	cpc	r11, r3
    2864:	c4 04       	cpc	r12, r4
    2866:	d5 04       	cpc	r13, r5
    2868:	70 f0       	brcs	.+28     	; 0x2886 <__udivdi3+0x5d4>
    286a:	a2 16       	cp	r10, r18
    286c:	b3 06       	cpc	r11, r19
    286e:	c4 06       	cpc	r12, r20
    2870:	d5 06       	cpc	r13, r21
    2872:	48 f4       	brcc	.+18     	; 0x2886 <__udivdi3+0x5d4>
    2874:	08 94       	sec
    2876:	61 08       	sbc	r6, r1
    2878:	71 08       	sbc	r7, r1
    287a:	81 08       	sbc	r8, r1
    287c:	91 08       	sbc	r9, r1
    287e:	a2 0c       	add	r10, r2
    2880:	b3 1c       	adc	r11, r3
    2882:	c4 1c       	adc	r12, r4
    2884:	d5 1c       	adc	r13, r5
    2886:	8d a5       	ldd	r24, Y+45	; 0x2d
    2888:	9e a5       	ldd	r25, Y+46	; 0x2e
    288a:	af a5       	ldd	r26, Y+47	; 0x2f
    288c:	b8 a9       	ldd	r27, Y+48	; 0x30
    288e:	6f 96       	adiw	r28, 0x1f	; 31
    2890:	0f ac       	ldd	r0, Y+63	; 0x3f
    2892:	6f 97       	sbiw	r28, 0x1f	; 31
    2894:	04 c0       	rjmp	.+8      	; 0x289e <__udivdi3+0x5ec>
    2896:	88 0f       	add	r24, r24
    2898:	99 1f       	adc	r25, r25
    289a:	aa 1f       	adc	r26, r26
    289c:	bb 1f       	adc	r27, r27
    289e:	0a 94       	dec	r0
    28a0:	d2 f7       	brpl	.-12     	; 0x2896 <__udivdi3+0x5e4>
    28a2:	8d a7       	std	Y+45, r24	; 0x2d
    28a4:	9e a7       	std	Y+46, r25	; 0x2e
    28a6:	af a7       	std	Y+47, r26	; 0x2f
    28a8:	b8 ab       	std	Y+48, r27	; 0x30
    28aa:	a2 1a       	sub	r10, r18
    28ac:	b3 0a       	sbc	r11, r19
    28ae:	c4 0a       	sbc	r12, r20
    28b0:	d5 0a       	sbc	r13, r21
    28b2:	25 96       	adiw	r28, 0x05	; 5
    28b4:	ec ac       	ldd	r14, Y+60	; 0x3c
    28b6:	fd ac       	ldd	r15, Y+61	; 0x3d
    28b8:	0e ad       	ldd	r16, Y+62	; 0x3e
    28ba:	1f ad       	ldd	r17, Y+63	; 0x3f
    28bc:	25 97       	sbiw	r28, 0x05	; 5
    28be:	d7 01       	movw	r26, r14
    28c0:	99 27       	eor	r25, r25
    28c2:	88 27       	eor	r24, r24
    28c4:	68 2a       	or	r6, r24
    28c6:	79 2a       	or	r7, r25
    28c8:	8a 2a       	or	r8, r26
    28ca:	9b 2a       	or	r9, r27
    28cc:	82 01       	movw	r16, r4
    28ce:	22 27       	eor	r18, r18
    28d0:	33 27       	eor	r19, r19
    28d2:	29 96       	adiw	r28, 0x09	; 9
    28d4:	0c af       	std	Y+60, r16	; 0x3c
    28d6:	1d af       	std	Y+61, r17	; 0x3d
    28d8:	2e af       	std	Y+62, r18	; 0x3e
    28da:	3f af       	std	Y+63, r19	; 0x3f
    28dc:	29 97       	sbiw	r28, 0x09	; 9
    28de:	a2 01       	movw	r20, r4
    28e0:	91 01       	movw	r18, r2
    28e2:	40 70       	andi	r20, 0x00	; 0
    28e4:	50 70       	andi	r21, 0x00	; 0
    28e6:	2d 96       	adiw	r28, 0x0d	; 13
    28e8:	2c af       	std	Y+60, r18	; 0x3c
    28ea:	3d af       	std	Y+61, r19	; 0x3d
    28ec:	4e af       	std	Y+62, r20	; 0x3e
    28ee:	5f af       	std	Y+63, r21	; 0x3f
    28f0:	2d 97       	sbiw	r28, 0x0d	; 13
    28f2:	c6 01       	movw	r24, r12
    28f4:	b5 01       	movw	r22, r10
    28f6:	29 96       	adiw	r28, 0x09	; 9
    28f8:	2c ad       	ldd	r18, Y+60	; 0x3c
    28fa:	3d ad       	ldd	r19, Y+61	; 0x3d
    28fc:	4e ad       	ldd	r20, Y+62	; 0x3e
    28fe:	5f ad       	ldd	r21, Y+63	; 0x3f
    2900:	29 97       	sbiw	r28, 0x09	; 9
    2902:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    2906:	7b 01       	movw	r14, r22
    2908:	8c 01       	movw	r16, r24
    290a:	c6 01       	movw	r24, r12
    290c:	b5 01       	movw	r22, r10
    290e:	29 96       	adiw	r28, 0x09	; 9
    2910:	2c ad       	ldd	r18, Y+60	; 0x3c
    2912:	3d ad       	ldd	r19, Y+61	; 0x3d
    2914:	4e ad       	ldd	r20, Y+62	; 0x3e
    2916:	5f ad       	ldd	r21, Y+63	; 0x3f
    2918:	29 97       	sbiw	r28, 0x09	; 9
    291a:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    291e:	c9 01       	movw	r24, r18
    2920:	da 01       	movw	r26, r20
    2922:	61 96       	adiw	r28, 0x11	; 17
    2924:	8c af       	std	Y+60, r24	; 0x3c
    2926:	9d af       	std	Y+61, r25	; 0x3d
    2928:	ae af       	std	Y+62, r26	; 0x3e
    292a:	bf af       	std	Y+63, r27	; 0x3f
    292c:	61 97       	sbiw	r28, 0x11	; 17
    292e:	bc 01       	movw	r22, r24
    2930:	cd 01       	movw	r24, r26
    2932:	2d 96       	adiw	r28, 0x0d	; 13
    2934:	2c ad       	ldd	r18, Y+60	; 0x3c
    2936:	3d ad       	ldd	r19, Y+61	; 0x3d
    2938:	4e ad       	ldd	r20, Y+62	; 0x3e
    293a:	5f ad       	ldd	r21, Y+63	; 0x3f
    293c:	2d 97       	sbiw	r28, 0x0d	; 13
    293e:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    2942:	9b 01       	movw	r18, r22
    2944:	ac 01       	movw	r20, r24
    2946:	87 01       	movw	r16, r14
    2948:	ff 24       	eor	r15, r15
    294a:	ee 24       	eor	r14, r14
    294c:	ad a4       	ldd	r10, Y+45	; 0x2d
    294e:	be a4       	ldd	r11, Y+46	; 0x2e
    2950:	cf a4       	ldd	r12, Y+47	; 0x2f
    2952:	d8 a8       	ldd	r13, Y+48	; 0x30
    2954:	c6 01       	movw	r24, r12
    2956:	aa 27       	eor	r26, r26
    2958:	bb 27       	eor	r27, r27
    295a:	57 01       	movw	r10, r14
    295c:	68 01       	movw	r12, r16
    295e:	a8 2a       	or	r10, r24
    2960:	b9 2a       	or	r11, r25
    2962:	ca 2a       	or	r12, r26
    2964:	db 2a       	or	r13, r27
    2966:	a2 16       	cp	r10, r18
    2968:	b3 06       	cpc	r11, r19
    296a:	c4 06       	cpc	r12, r20
    296c:	d5 06       	cpc	r13, r21
    296e:	60 f5       	brcc	.+88     	; 0x29c8 <__udivdi3+0x716>
    2970:	61 96       	adiw	r28, 0x11	; 17
    2972:	6c ad       	ldd	r22, Y+60	; 0x3c
    2974:	7d ad       	ldd	r23, Y+61	; 0x3d
    2976:	8e ad       	ldd	r24, Y+62	; 0x3e
    2978:	9f ad       	ldd	r25, Y+63	; 0x3f
    297a:	61 97       	sbiw	r28, 0x11	; 17
    297c:	61 50       	subi	r22, 0x01	; 1
    297e:	70 40       	sbci	r23, 0x00	; 0
    2980:	80 40       	sbci	r24, 0x00	; 0
    2982:	90 40       	sbci	r25, 0x00	; 0
    2984:	61 96       	adiw	r28, 0x11	; 17
    2986:	6c af       	std	Y+60, r22	; 0x3c
    2988:	7d af       	std	Y+61, r23	; 0x3d
    298a:	8e af       	std	Y+62, r24	; 0x3e
    298c:	9f af       	std	Y+63, r25	; 0x3f
    298e:	61 97       	sbiw	r28, 0x11	; 17
    2990:	a2 0c       	add	r10, r2
    2992:	b3 1c       	adc	r11, r3
    2994:	c4 1c       	adc	r12, r4
    2996:	d5 1c       	adc	r13, r5
    2998:	a2 14       	cp	r10, r2
    299a:	b3 04       	cpc	r11, r3
    299c:	c4 04       	cpc	r12, r4
    299e:	d5 04       	cpc	r13, r5
    29a0:	98 f0       	brcs	.+38     	; 0x29c8 <__udivdi3+0x716>
    29a2:	a2 16       	cp	r10, r18
    29a4:	b3 06       	cpc	r11, r19
    29a6:	c4 06       	cpc	r12, r20
    29a8:	d5 06       	cpc	r13, r21
    29aa:	70 f4       	brcc	.+28     	; 0x29c8 <__udivdi3+0x716>
    29ac:	61 50       	subi	r22, 0x01	; 1
    29ae:	70 40       	sbci	r23, 0x00	; 0
    29b0:	80 40       	sbci	r24, 0x00	; 0
    29b2:	90 40       	sbci	r25, 0x00	; 0
    29b4:	61 96       	adiw	r28, 0x11	; 17
    29b6:	6c af       	std	Y+60, r22	; 0x3c
    29b8:	7d af       	std	Y+61, r23	; 0x3d
    29ba:	8e af       	std	Y+62, r24	; 0x3e
    29bc:	9f af       	std	Y+63, r25	; 0x3f
    29be:	61 97       	sbiw	r28, 0x11	; 17
    29c0:	a2 0c       	add	r10, r2
    29c2:	b3 1c       	adc	r11, r3
    29c4:	c4 1c       	adc	r12, r4
    29c6:	d5 1c       	adc	r13, r5
    29c8:	a2 1a       	sub	r10, r18
    29ca:	b3 0a       	sbc	r11, r19
    29cc:	c4 0a       	sbc	r12, r20
    29ce:	d5 0a       	sbc	r13, r21
    29d0:	c6 01       	movw	r24, r12
    29d2:	b5 01       	movw	r22, r10
    29d4:	29 96       	adiw	r28, 0x09	; 9
    29d6:	2c ad       	ldd	r18, Y+60	; 0x3c
    29d8:	3d ad       	ldd	r19, Y+61	; 0x3d
    29da:	4e ad       	ldd	r20, Y+62	; 0x3e
    29dc:	5f ad       	ldd	r21, Y+63	; 0x3f
    29de:	29 97       	sbiw	r28, 0x09	; 9
    29e0:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    29e4:	7b 01       	movw	r14, r22
    29e6:	8c 01       	movw	r16, r24
    29e8:	c6 01       	movw	r24, r12
    29ea:	b5 01       	movw	r22, r10
    29ec:	29 96       	adiw	r28, 0x09	; 9
    29ee:	2c ad       	ldd	r18, Y+60	; 0x3c
    29f0:	3d ad       	ldd	r19, Y+61	; 0x3d
    29f2:	4e ad       	ldd	r20, Y+62	; 0x3e
    29f4:	5f ad       	ldd	r21, Y+63	; 0x3f
    29f6:	29 97       	sbiw	r28, 0x09	; 9
    29f8:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    29fc:	c9 01       	movw	r24, r18
    29fe:	da 01       	movw	r26, r20
    2a00:	5c 01       	movw	r10, r24
    2a02:	6d 01       	movw	r12, r26
    2a04:	c6 01       	movw	r24, r12
    2a06:	b5 01       	movw	r22, r10
    2a08:	2d 96       	adiw	r28, 0x0d	; 13
    2a0a:	2c ad       	ldd	r18, Y+60	; 0x3c
    2a0c:	3d ad       	ldd	r19, Y+61	; 0x3d
    2a0e:	4e ad       	ldd	r20, Y+62	; 0x3e
    2a10:	5f ad       	ldd	r21, Y+63	; 0x3f
    2a12:	2d 97       	sbiw	r28, 0x0d	; 13
    2a14:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    2a18:	9b 01       	movw	r18, r22
    2a1a:	ac 01       	movw	r20, r24
    2a1c:	87 01       	movw	r16, r14
    2a1e:	ff 24       	eor	r15, r15
    2a20:	ee 24       	eor	r14, r14
    2a22:	8d a5       	ldd	r24, Y+45	; 0x2d
    2a24:	9e a5       	ldd	r25, Y+46	; 0x2e
    2a26:	af a5       	ldd	r26, Y+47	; 0x2f
    2a28:	b8 a9       	ldd	r27, Y+48	; 0x30
    2a2a:	a0 70       	andi	r26, 0x00	; 0
    2a2c:	b0 70       	andi	r27, 0x00	; 0
    2a2e:	e8 2a       	or	r14, r24
    2a30:	f9 2a       	or	r15, r25
    2a32:	0a 2b       	or	r16, r26
    2a34:	1b 2b       	or	r17, r27
    2a36:	e2 16       	cp	r14, r18
    2a38:	f3 06       	cpc	r15, r19
    2a3a:	04 07       	cpc	r16, r20
    2a3c:	15 07       	cpc	r17, r21
    2a3e:	c0 f4       	brcc	.+48     	; 0x2a70 <__udivdi3+0x7be>
    2a40:	08 94       	sec
    2a42:	a1 08       	sbc	r10, r1
    2a44:	b1 08       	sbc	r11, r1
    2a46:	c1 08       	sbc	r12, r1
    2a48:	d1 08       	sbc	r13, r1
    2a4a:	e2 0c       	add	r14, r2
    2a4c:	f3 1c       	adc	r15, r3
    2a4e:	04 1d       	adc	r16, r4
    2a50:	15 1d       	adc	r17, r5
    2a52:	e2 14       	cp	r14, r2
    2a54:	f3 04       	cpc	r15, r3
    2a56:	04 05       	cpc	r16, r4
    2a58:	15 05       	cpc	r17, r5
    2a5a:	50 f0       	brcs	.+20     	; 0x2a70 <__udivdi3+0x7be>
    2a5c:	e2 16       	cp	r14, r18
    2a5e:	f3 06       	cpc	r15, r19
    2a60:	04 07       	cpc	r16, r20
    2a62:	15 07       	cpc	r17, r21
    2a64:	28 f4       	brcc	.+10     	; 0x2a70 <__udivdi3+0x7be>
    2a66:	08 94       	sec
    2a68:	a1 08       	sbc	r10, r1
    2a6a:	b1 08       	sbc	r11, r1
    2a6c:	c1 08       	sbc	r12, r1
    2a6e:	d1 08       	sbc	r13, r1
    2a70:	61 96       	adiw	r28, 0x11	; 17
    2a72:	ec ac       	ldd	r14, Y+60	; 0x3c
    2a74:	fd ac       	ldd	r15, Y+61	; 0x3d
    2a76:	0e ad       	ldd	r16, Y+62	; 0x3e
    2a78:	1f ad       	ldd	r17, Y+63	; 0x3f
    2a7a:	61 97       	sbiw	r28, 0x11	; 17
    2a7c:	d7 01       	movw	r26, r14
    2a7e:	99 27       	eor	r25, r25
    2a80:	88 27       	eor	r24, r24
    2a82:	96 01       	movw	r18, r12
    2a84:	85 01       	movw	r16, r10
    2a86:	08 2b       	or	r16, r24
    2a88:	19 2b       	or	r17, r25
    2a8a:	2a 2b       	or	r18, r26
    2a8c:	3b 2b       	or	r19, r27
    2a8e:	09 ab       	std	Y+49, r16	; 0x31
    2a90:	1a ab       	std	Y+50, r17	; 0x32
    2a92:	2b ab       	std	Y+51, r18	; 0x33
    2a94:	3c ab       	std	Y+52, r19	; 0x34
    2a96:	62 c2       	rjmp	.+1220   	; 0x2f5c <__udivdi3+0xcaa>
    2a98:	6e 14       	cp	r6, r14
    2a9a:	7f 04       	cpc	r7, r15
    2a9c:	80 06       	cpc	r8, r16
    2a9e:	91 06       	cpc	r9, r17
    2aa0:	08 f4       	brcc	.+2      	; 0x2aa4 <__udivdi3+0x7f2>
    2aa2:	51 c2       	rjmp	.+1186   	; 0x2f46 <__udivdi3+0xc94>
    2aa4:	20 e0       	ldi	r18, 0x00	; 0
    2aa6:	e2 16       	cp	r14, r18
    2aa8:	20 e0       	ldi	r18, 0x00	; 0
    2aaa:	f2 06       	cpc	r15, r18
    2aac:	21 e0       	ldi	r18, 0x01	; 1
    2aae:	02 07       	cpc	r16, r18
    2ab0:	20 e0       	ldi	r18, 0x00	; 0
    2ab2:	12 07       	cpc	r17, r18
    2ab4:	88 f4       	brcc	.+34     	; 0x2ad8 <__udivdi3+0x826>
    2ab6:	3f ef       	ldi	r19, 0xFF	; 255
    2ab8:	e3 16       	cp	r14, r19
    2aba:	f1 04       	cpc	r15, r1
    2abc:	01 05       	cpc	r16, r1
    2abe:	11 05       	cpc	r17, r1
    2ac0:	31 f0       	breq	.+12     	; 0x2ace <__udivdi3+0x81c>
    2ac2:	28 f0       	brcs	.+10     	; 0x2ace <__udivdi3+0x81c>
    2ac4:	48 e0       	ldi	r20, 0x08	; 8
    2ac6:	50 e0       	ldi	r21, 0x00	; 0
    2ac8:	60 e0       	ldi	r22, 0x00	; 0
    2aca:	70 e0       	ldi	r23, 0x00	; 0
    2acc:	17 c0       	rjmp	.+46     	; 0x2afc <__udivdi3+0x84a>
    2ace:	40 e0       	ldi	r20, 0x00	; 0
    2ad0:	50 e0       	ldi	r21, 0x00	; 0
    2ad2:	60 e0       	ldi	r22, 0x00	; 0
    2ad4:	70 e0       	ldi	r23, 0x00	; 0
    2ad6:	12 c0       	rjmp	.+36     	; 0x2afc <__udivdi3+0x84a>
    2ad8:	40 e0       	ldi	r20, 0x00	; 0
    2ada:	e4 16       	cp	r14, r20
    2adc:	40 e0       	ldi	r20, 0x00	; 0
    2ade:	f4 06       	cpc	r15, r20
    2ae0:	40 e0       	ldi	r20, 0x00	; 0
    2ae2:	04 07       	cpc	r16, r20
    2ae4:	41 e0       	ldi	r20, 0x01	; 1
    2ae6:	14 07       	cpc	r17, r20
    2ae8:	28 f0       	brcs	.+10     	; 0x2af4 <__udivdi3+0x842>
    2aea:	48 e1       	ldi	r20, 0x18	; 24
    2aec:	50 e0       	ldi	r21, 0x00	; 0
    2aee:	60 e0       	ldi	r22, 0x00	; 0
    2af0:	70 e0       	ldi	r23, 0x00	; 0
    2af2:	04 c0       	rjmp	.+8      	; 0x2afc <__udivdi3+0x84a>
    2af4:	40 e1       	ldi	r20, 0x10	; 16
    2af6:	50 e0       	ldi	r21, 0x00	; 0
    2af8:	60 e0       	ldi	r22, 0x00	; 0
    2afa:	70 e0       	ldi	r23, 0x00	; 0
    2afc:	d8 01       	movw	r26, r16
    2afe:	c7 01       	movw	r24, r14
    2b00:	04 2e       	mov	r0, r20
    2b02:	04 c0       	rjmp	.+8      	; 0x2b0c <__udivdi3+0x85a>
    2b04:	b6 95       	lsr	r27
    2b06:	a7 95       	ror	r26
    2b08:	97 95       	ror	r25
    2b0a:	87 95       	ror	r24
    2b0c:	0a 94       	dec	r0
    2b0e:	d2 f7       	brpl	.-12     	; 0x2b04 <__udivdi3+0x852>
    2b10:	8b 51       	subi	r24, 0x1B	; 27
    2b12:	9f 4f       	sbci	r25, 0xFF	; 255
    2b14:	dc 01       	movw	r26, r24
    2b16:	2c 91       	ld	r18, X
    2b18:	30 e2       	ldi	r19, 0x20	; 32
    2b1a:	a3 2e       	mov	r10, r19
    2b1c:	b1 2c       	mov	r11, r1
    2b1e:	c1 2c       	mov	r12, r1
    2b20:	d1 2c       	mov	r13, r1
    2b22:	d6 01       	movw	r26, r12
    2b24:	c5 01       	movw	r24, r10
    2b26:	84 1b       	sub	r24, r20
    2b28:	95 0b       	sbc	r25, r21
    2b2a:	a6 0b       	sbc	r26, r22
    2b2c:	b7 0b       	sbc	r27, r23
    2b2e:	82 1b       	sub	r24, r18
    2b30:	91 09       	sbc	r25, r1
    2b32:	a1 09       	sbc	r26, r1
    2b34:	b1 09       	sbc	r27, r1
    2b36:	00 97       	sbiw	r24, 0x00	; 0
    2b38:	a1 05       	cpc	r26, r1
    2b3a:	b1 05       	cpc	r27, r1
    2b3c:	89 f4       	brne	.+34     	; 0x2b60 <__udivdi3+0x8ae>
    2b3e:	e6 14       	cp	r14, r6
    2b40:	f7 04       	cpc	r15, r7
    2b42:	08 05       	cpc	r16, r8
    2b44:	19 05       	cpc	r17, r9
    2b46:	08 f4       	brcc	.+2      	; 0x2b4a <__udivdi3+0x898>
    2b48:	f2 c1       	rjmp	.+996    	; 0x2f2e <__udivdi3+0xc7c>
    2b4a:	6d a4       	ldd	r6, Y+45	; 0x2d
    2b4c:	7e a4       	ldd	r7, Y+46	; 0x2e
    2b4e:	8f a4       	ldd	r8, Y+47	; 0x2f
    2b50:	98 a8       	ldd	r9, Y+48	; 0x30
    2b52:	62 14       	cp	r6, r2
    2b54:	73 04       	cpc	r7, r3
    2b56:	84 04       	cpc	r8, r4
    2b58:	95 04       	cpc	r9, r5
    2b5a:	08 f0       	brcs	.+2      	; 0x2b5e <__udivdi3+0x8ac>
    2b5c:	e8 c1       	rjmp	.+976    	; 0x2f2e <__udivdi3+0xc7c>
    2b5e:	f3 c1       	rjmp	.+998    	; 0x2f46 <__udivdi3+0xc94>
    2b60:	6e 96       	adiw	r28, 0x1e	; 30
    2b62:	8f af       	std	Y+63, r24	; 0x3f
    2b64:	6e 97       	sbiw	r28, 0x1e	; 30
    2b66:	08 2e       	mov	r0, r24
    2b68:	04 c0       	rjmp	.+8      	; 0x2b72 <__udivdi3+0x8c0>
    2b6a:	ee 0c       	add	r14, r14
    2b6c:	ff 1c       	adc	r15, r15
    2b6e:	00 1f       	adc	r16, r16
    2b70:	11 1f       	adc	r17, r17
    2b72:	0a 94       	dec	r0
    2b74:	d2 f7       	brpl	.-12     	; 0x2b6a <__udivdi3+0x8b8>
    2b76:	6a 2d       	mov	r22, r10
    2b78:	68 1b       	sub	r22, r24
    2b7a:	d2 01       	movw	r26, r4
    2b7c:	c1 01       	movw	r24, r2
    2b7e:	06 2e       	mov	r0, r22
    2b80:	04 c0       	rjmp	.+8      	; 0x2b8a <__udivdi3+0x8d8>
    2b82:	b6 95       	lsr	r27
    2b84:	a7 95       	ror	r26
    2b86:	97 95       	ror	r25
    2b88:	87 95       	ror	r24
    2b8a:	0a 94       	dec	r0
    2b8c:	d2 f7       	brpl	.-12     	; 0x2b82 <__udivdi3+0x8d0>
    2b8e:	5c 01       	movw	r10, r24
    2b90:	6d 01       	movw	r12, r26
    2b92:	ae 28       	or	r10, r14
    2b94:	bf 28       	or	r11, r15
    2b96:	c0 2a       	or	r12, r16
    2b98:	d1 2a       	or	r13, r17
    2b9a:	ad a2       	std	Y+37, r10	; 0x25
    2b9c:	be a2       	std	Y+38, r11	; 0x26
    2b9e:	cf a2       	std	Y+39, r12	; 0x27
    2ba0:	d8 a6       	std	Y+40, r13	; 0x28
    2ba2:	72 01       	movw	r14, r4
    2ba4:	61 01       	movw	r12, r2
    2ba6:	6e 96       	adiw	r28, 0x1e	; 30
    2ba8:	0f ac       	ldd	r0, Y+63	; 0x3f
    2baa:	6e 97       	sbiw	r28, 0x1e	; 30
    2bac:	04 c0       	rjmp	.+8      	; 0x2bb6 <__udivdi3+0x904>
    2bae:	cc 0c       	add	r12, r12
    2bb0:	dd 1c       	adc	r13, r13
    2bb2:	ee 1c       	adc	r14, r14
    2bb4:	ff 1c       	adc	r15, r15
    2bb6:	0a 94       	dec	r0
    2bb8:	d2 f7       	brpl	.-12     	; 0x2bae <__udivdi3+0x8fc>
    2bba:	c9 a2       	std	Y+33, r12	; 0x21
    2bbc:	da a2       	std	Y+34, r13	; 0x22
    2bbe:	eb a2       	std	Y+35, r14	; 0x23
    2bc0:	fc a2       	std	Y+36, r15	; 0x24
    2bc2:	64 01       	movw	r12, r8
    2bc4:	53 01       	movw	r10, r6
    2bc6:	06 2e       	mov	r0, r22
    2bc8:	04 c0       	rjmp	.+8      	; 0x2bd2 <__udivdi3+0x920>
    2bca:	d6 94       	lsr	r13
    2bcc:	c7 94       	ror	r12
    2bce:	b7 94       	ror	r11
    2bd0:	a7 94       	ror	r10
    2bd2:	0a 94       	dec	r0
    2bd4:	d2 f7       	brpl	.-12     	; 0x2bca <__udivdi3+0x918>
    2bd6:	d4 01       	movw	r26, r8
    2bd8:	c3 01       	movw	r24, r6
    2bda:	6e 96       	adiw	r28, 0x1e	; 30
    2bdc:	0f ac       	ldd	r0, Y+63	; 0x3f
    2bde:	6e 97       	sbiw	r28, 0x1e	; 30
    2be0:	04 c0       	rjmp	.+8      	; 0x2bea <__udivdi3+0x938>
    2be2:	88 0f       	add	r24, r24
    2be4:	99 1f       	adc	r25, r25
    2be6:	aa 1f       	adc	r26, r26
    2be8:	bb 1f       	adc	r27, r27
    2bea:	0a 94       	dec	r0
    2bec:	d2 f7       	brpl	.-12     	; 0x2be2 <__udivdi3+0x930>
    2bee:	ed a4       	ldd	r14, Y+45	; 0x2d
    2bf0:	fe a4       	ldd	r15, Y+46	; 0x2e
    2bf2:	0f a5       	ldd	r16, Y+47	; 0x2f
    2bf4:	18 a9       	ldd	r17, Y+48	; 0x30
    2bf6:	04 c0       	rjmp	.+8      	; 0x2c00 <__udivdi3+0x94e>
    2bf8:	16 95       	lsr	r17
    2bfa:	07 95       	ror	r16
    2bfc:	f7 94       	ror	r15
    2bfe:	e7 94       	ror	r14
    2c00:	6a 95       	dec	r22
    2c02:	d2 f7       	brpl	.-12     	; 0x2bf8 <__udivdi3+0x946>
    2c04:	37 01       	movw	r6, r14
    2c06:	48 01       	movw	r8, r16
    2c08:	68 2a       	or	r6, r24
    2c0a:	79 2a       	or	r7, r25
    2c0c:	8a 2a       	or	r8, r26
    2c0e:	9b 2a       	or	r9, r27
    2c10:	6d 8e       	std	Y+29, r6	; 0x1d
    2c12:	7e 8e       	std	Y+30, r7	; 0x1e
    2c14:	8f 8e       	std	Y+31, r8	; 0x1f
    2c16:	98 a2       	std	Y+32, r9	; 0x20
    2c18:	ed a0       	ldd	r14, Y+37	; 0x25
    2c1a:	fe a0       	ldd	r15, Y+38	; 0x26
    2c1c:	0f a1       	ldd	r16, Y+39	; 0x27
    2c1e:	18 a5       	ldd	r17, Y+40	; 0x28
    2c20:	38 01       	movw	r6, r16
    2c22:	88 24       	eor	r8, r8
    2c24:	99 24       	eor	r9, r9
    2c26:	98 01       	movw	r18, r16
    2c28:	87 01       	movw	r16, r14
    2c2a:	20 70       	andi	r18, 0x00	; 0
    2c2c:	30 70       	andi	r19, 0x00	; 0
    2c2e:	65 96       	adiw	r28, 0x15	; 21
    2c30:	0c af       	std	Y+60, r16	; 0x3c
    2c32:	1d af       	std	Y+61, r17	; 0x3d
    2c34:	2e af       	std	Y+62, r18	; 0x3e
    2c36:	3f af       	std	Y+63, r19	; 0x3f
    2c38:	65 97       	sbiw	r28, 0x15	; 21
    2c3a:	c6 01       	movw	r24, r12
    2c3c:	b5 01       	movw	r22, r10
    2c3e:	a4 01       	movw	r20, r8
    2c40:	93 01       	movw	r18, r6
    2c42:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    2c46:	7b 01       	movw	r14, r22
    2c48:	8c 01       	movw	r16, r24
    2c4a:	c6 01       	movw	r24, r12
    2c4c:	b5 01       	movw	r22, r10
    2c4e:	a4 01       	movw	r20, r8
    2c50:	93 01       	movw	r18, r6
    2c52:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    2c56:	c9 01       	movw	r24, r18
    2c58:	da 01       	movw	r26, r20
    2c5a:	1c 01       	movw	r2, r24
    2c5c:	2d 01       	movw	r4, r26
    2c5e:	c2 01       	movw	r24, r4
    2c60:	b1 01       	movw	r22, r2
    2c62:	65 96       	adiw	r28, 0x15	; 21
    2c64:	2c ad       	ldd	r18, Y+60	; 0x3c
    2c66:	3d ad       	ldd	r19, Y+61	; 0x3d
    2c68:	4e ad       	ldd	r20, Y+62	; 0x3e
    2c6a:	5f ad       	ldd	r21, Y+63	; 0x3f
    2c6c:	65 97       	sbiw	r28, 0x15	; 21
    2c6e:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    2c72:	9b 01       	movw	r18, r22
    2c74:	ac 01       	movw	r20, r24
    2c76:	87 01       	movw	r16, r14
    2c78:	ff 24       	eor	r15, r15
    2c7a:	ee 24       	eor	r14, r14
    2c7c:	ad 8c       	ldd	r10, Y+29	; 0x1d
    2c7e:	be 8c       	ldd	r11, Y+30	; 0x1e
    2c80:	cf 8c       	ldd	r12, Y+31	; 0x1f
    2c82:	d8 a0       	ldd	r13, Y+32	; 0x20
    2c84:	c6 01       	movw	r24, r12
    2c86:	aa 27       	eor	r26, r26
    2c88:	bb 27       	eor	r27, r27
    2c8a:	57 01       	movw	r10, r14
    2c8c:	68 01       	movw	r12, r16
    2c8e:	a8 2a       	or	r10, r24
    2c90:	b9 2a       	or	r11, r25
    2c92:	ca 2a       	or	r12, r26
    2c94:	db 2a       	or	r13, r27
    2c96:	a2 16       	cp	r10, r18
    2c98:	b3 06       	cpc	r11, r19
    2c9a:	c4 06       	cpc	r12, r20
    2c9c:	d5 06       	cpc	r13, r21
    2c9e:	00 f5       	brcc	.+64     	; 0x2ce0 <__udivdi3+0xa2e>
    2ca0:	08 94       	sec
    2ca2:	21 08       	sbc	r2, r1
    2ca4:	31 08       	sbc	r3, r1
    2ca6:	41 08       	sbc	r4, r1
    2ca8:	51 08       	sbc	r5, r1
    2caa:	ed a0       	ldd	r14, Y+37	; 0x25
    2cac:	fe a0       	ldd	r15, Y+38	; 0x26
    2cae:	0f a1       	ldd	r16, Y+39	; 0x27
    2cb0:	18 a5       	ldd	r17, Y+40	; 0x28
    2cb2:	ae 0c       	add	r10, r14
    2cb4:	bf 1c       	adc	r11, r15
    2cb6:	c0 1e       	adc	r12, r16
    2cb8:	d1 1e       	adc	r13, r17
    2cba:	ae 14       	cp	r10, r14
    2cbc:	bf 04       	cpc	r11, r15
    2cbe:	c0 06       	cpc	r12, r16
    2cc0:	d1 06       	cpc	r13, r17
    2cc2:	70 f0       	brcs	.+28     	; 0x2ce0 <__udivdi3+0xa2e>
    2cc4:	a2 16       	cp	r10, r18
    2cc6:	b3 06       	cpc	r11, r19
    2cc8:	c4 06       	cpc	r12, r20
    2cca:	d5 06       	cpc	r13, r21
    2ccc:	48 f4       	brcc	.+18     	; 0x2ce0 <__udivdi3+0xa2e>
    2cce:	08 94       	sec
    2cd0:	21 08       	sbc	r2, r1
    2cd2:	31 08       	sbc	r3, r1
    2cd4:	41 08       	sbc	r4, r1
    2cd6:	51 08       	sbc	r5, r1
    2cd8:	ae 0c       	add	r10, r14
    2cda:	bf 1c       	adc	r11, r15
    2cdc:	c0 1e       	adc	r12, r16
    2cde:	d1 1e       	adc	r13, r17
    2ce0:	a2 1a       	sub	r10, r18
    2ce2:	b3 0a       	sbc	r11, r19
    2ce4:	c4 0a       	sbc	r12, r20
    2ce6:	d5 0a       	sbc	r13, r21
    2ce8:	c6 01       	movw	r24, r12
    2cea:	b5 01       	movw	r22, r10
    2cec:	a4 01       	movw	r20, r8
    2cee:	93 01       	movw	r18, r6
    2cf0:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    2cf4:	7b 01       	movw	r14, r22
    2cf6:	8c 01       	movw	r16, r24
    2cf8:	c6 01       	movw	r24, r12
    2cfa:	b5 01       	movw	r22, r10
    2cfc:	a4 01       	movw	r20, r8
    2cfe:	93 01       	movw	r18, r6
    2d00:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    2d04:	c9 01       	movw	r24, r18
    2d06:	da 01       	movw	r26, r20
    2d08:	3c 01       	movw	r6, r24
    2d0a:	4d 01       	movw	r8, r26
    2d0c:	c4 01       	movw	r24, r8
    2d0e:	b3 01       	movw	r22, r6
    2d10:	65 96       	adiw	r28, 0x15	; 21
    2d12:	2c ad       	ldd	r18, Y+60	; 0x3c
    2d14:	3d ad       	ldd	r19, Y+61	; 0x3d
    2d16:	4e ad       	ldd	r20, Y+62	; 0x3e
    2d18:	5f ad       	ldd	r21, Y+63	; 0x3f
    2d1a:	65 97       	sbiw	r28, 0x15	; 21
    2d1c:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    2d20:	9b 01       	movw	r18, r22
    2d22:	ac 01       	movw	r20, r24
    2d24:	87 01       	movw	r16, r14
    2d26:	ff 24       	eor	r15, r15
    2d28:	ee 24       	eor	r14, r14
    2d2a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2d2c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2d2e:	af 8d       	ldd	r26, Y+31	; 0x1f
    2d30:	b8 a1       	ldd	r27, Y+32	; 0x20
    2d32:	a0 70       	andi	r26, 0x00	; 0
    2d34:	b0 70       	andi	r27, 0x00	; 0
    2d36:	57 01       	movw	r10, r14
    2d38:	68 01       	movw	r12, r16
    2d3a:	a8 2a       	or	r10, r24
    2d3c:	b9 2a       	or	r11, r25
    2d3e:	ca 2a       	or	r12, r26
    2d40:	db 2a       	or	r13, r27
    2d42:	a2 16       	cp	r10, r18
    2d44:	b3 06       	cpc	r11, r19
    2d46:	c4 06       	cpc	r12, r20
    2d48:	d5 06       	cpc	r13, r21
    2d4a:	00 f5       	brcc	.+64     	; 0x2d8c <__udivdi3+0xada>
    2d4c:	08 94       	sec
    2d4e:	61 08       	sbc	r6, r1
    2d50:	71 08       	sbc	r7, r1
    2d52:	81 08       	sbc	r8, r1
    2d54:	91 08       	sbc	r9, r1
    2d56:	6d a1       	ldd	r22, Y+37	; 0x25
    2d58:	7e a1       	ldd	r23, Y+38	; 0x26
    2d5a:	8f a1       	ldd	r24, Y+39	; 0x27
    2d5c:	98 a5       	ldd	r25, Y+40	; 0x28
    2d5e:	a6 0e       	add	r10, r22
    2d60:	b7 1e       	adc	r11, r23
    2d62:	c8 1e       	adc	r12, r24
    2d64:	d9 1e       	adc	r13, r25
    2d66:	a6 16       	cp	r10, r22
    2d68:	b7 06       	cpc	r11, r23
    2d6a:	c8 06       	cpc	r12, r24
    2d6c:	d9 06       	cpc	r13, r25
    2d6e:	70 f0       	brcs	.+28     	; 0x2d8c <__udivdi3+0xada>
    2d70:	a2 16       	cp	r10, r18
    2d72:	b3 06       	cpc	r11, r19
    2d74:	c4 06       	cpc	r12, r20
    2d76:	d5 06       	cpc	r13, r21
    2d78:	48 f4       	brcc	.+18     	; 0x2d8c <__udivdi3+0xada>
    2d7a:	08 94       	sec
    2d7c:	61 08       	sbc	r6, r1
    2d7e:	71 08       	sbc	r7, r1
    2d80:	81 08       	sbc	r8, r1
    2d82:	91 08       	sbc	r9, r1
    2d84:	a6 0e       	add	r10, r22
    2d86:	b7 1e       	adc	r11, r23
    2d88:	c8 1e       	adc	r12, r24
    2d8a:	d9 1e       	adc	r13, r25
    2d8c:	d6 01       	movw	r26, r12
    2d8e:	c5 01       	movw	r24, r10
    2d90:	82 1b       	sub	r24, r18
    2d92:	93 0b       	sbc	r25, r19
    2d94:	a4 0b       	sbc	r26, r20
    2d96:	b5 0b       	sbc	r27, r21
    2d98:	89 8f       	std	Y+25, r24	; 0x19
    2d9a:	9a 8f       	std	Y+26, r25	; 0x1a
    2d9c:	ab 8f       	std	Y+27, r26	; 0x1b
    2d9e:	bc 8f       	std	Y+28, r27	; 0x1c
    2da0:	d1 01       	movw	r26, r2
    2da2:	99 27       	eor	r25, r25
    2da4:	88 27       	eor	r24, r24
    2da6:	64 01       	movw	r12, r8
    2da8:	53 01       	movw	r10, r6
    2daa:	a8 2a       	or	r10, r24
    2dac:	b9 2a       	or	r11, r25
    2dae:	ca 2a       	or	r12, r26
    2db0:	db 2a       	or	r13, r27
    2db2:	a9 aa       	std	Y+49, r10	; 0x31
    2db4:	ba aa       	std	Y+50, r11	; 0x32
    2db6:	cb aa       	std	Y+51, r12	; 0x33
    2db8:	dc aa       	std	Y+52, r13	; 0x34
    2dba:	86 01       	movw	r16, r12
    2dbc:	75 01       	movw	r14, r10
    2dbe:	2f ef       	ldi	r18, 0xFF	; 255
    2dc0:	3f ef       	ldi	r19, 0xFF	; 255
    2dc2:	40 e0       	ldi	r20, 0x00	; 0
    2dc4:	50 e0       	ldi	r21, 0x00	; 0
    2dc6:	e2 22       	and	r14, r18
    2dc8:	f3 22       	and	r15, r19
    2dca:	04 23       	and	r16, r20
    2dcc:	15 23       	and	r17, r21
    2dce:	a6 01       	movw	r20, r12
    2dd0:	66 27       	eor	r22, r22
    2dd2:	77 27       	eor	r23, r23
    2dd4:	6d 96       	adiw	r28, 0x1d	; 29
    2dd6:	4c af       	std	Y+60, r20	; 0x3c
    2dd8:	5d af       	std	Y+61, r21	; 0x3d
    2dda:	6e af       	std	Y+62, r22	; 0x3e
    2ddc:	7f af       	std	Y+63, r23	; 0x3f
    2dde:	6d 97       	sbiw	r28, 0x1d	; 29
    2de0:	a9 a0       	ldd	r10, Y+33	; 0x21
    2de2:	ba a0       	ldd	r11, Y+34	; 0x22
    2de4:	cb a0       	ldd	r12, Y+35	; 0x23
    2de6:	dc a0       	ldd	r13, Y+36	; 0x24
    2de8:	6f ef       	ldi	r22, 0xFF	; 255
    2dea:	7f ef       	ldi	r23, 0xFF	; 255
    2dec:	80 e0       	ldi	r24, 0x00	; 0
    2dee:	90 e0       	ldi	r25, 0x00	; 0
    2df0:	a6 22       	and	r10, r22
    2df2:	b7 22       	and	r11, r23
    2df4:	c8 22       	and	r12, r24
    2df6:	d9 22       	and	r13, r25
    2df8:	89 a1       	ldd	r24, Y+33	; 0x21
    2dfa:	9a a1       	ldd	r25, Y+34	; 0x22
    2dfc:	ab a1       	ldd	r26, Y+35	; 0x23
    2dfe:	bc a1       	ldd	r27, Y+36	; 0x24
    2e00:	1d 01       	movw	r2, r26
    2e02:	44 24       	eor	r4, r4
    2e04:	55 24       	eor	r5, r5
    2e06:	c8 01       	movw	r24, r16
    2e08:	b7 01       	movw	r22, r14
    2e0a:	a6 01       	movw	r20, r12
    2e0c:	95 01       	movw	r18, r10
    2e0e:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    2e12:	69 96       	adiw	r28, 0x19	; 25
    2e14:	6c af       	std	Y+60, r22	; 0x3c
    2e16:	7d af       	std	Y+61, r23	; 0x3d
    2e18:	8e af       	std	Y+62, r24	; 0x3e
    2e1a:	9f af       	std	Y+63, r25	; 0x3f
    2e1c:	69 97       	sbiw	r28, 0x19	; 25
    2e1e:	c8 01       	movw	r24, r16
    2e20:	b7 01       	movw	r22, r14
    2e22:	a2 01       	movw	r20, r4
    2e24:	91 01       	movw	r18, r2
    2e26:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    2e2a:	3b 01       	movw	r6, r22
    2e2c:	4c 01       	movw	r8, r24
    2e2e:	6d 96       	adiw	r28, 0x1d	; 29
    2e30:	6c ad       	ldd	r22, Y+60	; 0x3c
    2e32:	7d ad       	ldd	r23, Y+61	; 0x3d
    2e34:	8e ad       	ldd	r24, Y+62	; 0x3e
    2e36:	9f ad       	ldd	r25, Y+63	; 0x3f
    2e38:	6d 97       	sbiw	r28, 0x1d	; 29
    2e3a:	a6 01       	movw	r20, r12
    2e3c:	95 01       	movw	r18, r10
    2e3e:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    2e42:	7b 01       	movw	r14, r22
    2e44:	8c 01       	movw	r16, r24
    2e46:	6d 96       	adiw	r28, 0x1d	; 29
    2e48:	6c ad       	ldd	r22, Y+60	; 0x3c
    2e4a:	7d ad       	ldd	r23, Y+61	; 0x3d
    2e4c:	8e ad       	ldd	r24, Y+62	; 0x3e
    2e4e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2e50:	6d 97       	sbiw	r28, 0x1d	; 29
    2e52:	a2 01       	movw	r20, r4
    2e54:	91 01       	movw	r18, r2
    2e56:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    2e5a:	5b 01       	movw	r10, r22
    2e5c:	6c 01       	movw	r12, r24
    2e5e:	a8 01       	movw	r20, r16
    2e60:	97 01       	movw	r18, r14
    2e62:	26 0d       	add	r18, r6
    2e64:	37 1d       	adc	r19, r7
    2e66:	48 1d       	adc	r20, r8
    2e68:	59 1d       	adc	r21, r9
    2e6a:	69 96       	adiw	r28, 0x19	; 25
    2e6c:	6c ac       	ldd	r6, Y+60	; 0x3c
    2e6e:	7d ac       	ldd	r7, Y+61	; 0x3d
    2e70:	8e ac       	ldd	r8, Y+62	; 0x3e
    2e72:	9f ac       	ldd	r9, Y+63	; 0x3f
    2e74:	69 97       	sbiw	r28, 0x19	; 25
    2e76:	c4 01       	movw	r24, r8
    2e78:	aa 27       	eor	r26, r26
    2e7a:	bb 27       	eor	r27, r27
    2e7c:	28 0f       	add	r18, r24
    2e7e:	39 1f       	adc	r19, r25
    2e80:	4a 1f       	adc	r20, r26
    2e82:	5b 1f       	adc	r21, r27
    2e84:	2e 15       	cp	r18, r14
    2e86:	3f 05       	cpc	r19, r15
    2e88:	40 07       	cpc	r20, r16
    2e8a:	51 07       	cpc	r21, r17
    2e8c:	48 f4       	brcc	.+18     	; 0x2ea0 <__udivdi3+0xbee>
    2e8e:	e1 2c       	mov	r14, r1
    2e90:	f1 2c       	mov	r15, r1
    2e92:	61 e0       	ldi	r22, 0x01	; 1
    2e94:	06 2f       	mov	r16, r22
    2e96:	11 2d       	mov	r17, r1
    2e98:	ae 0c       	add	r10, r14
    2e9a:	bf 1c       	adc	r11, r15
    2e9c:	c0 1e       	adc	r12, r16
    2e9e:	d1 1e       	adc	r13, r17
    2ea0:	ca 01       	movw	r24, r20
    2ea2:	aa 27       	eor	r26, r26
    2ea4:	bb 27       	eor	r27, r27
    2ea6:	bc 01       	movw	r22, r24
    2ea8:	cd 01       	movw	r24, r26
    2eaa:	6a 0d       	add	r22, r10
    2eac:	7b 1d       	adc	r23, r11
    2eae:	8c 1d       	adc	r24, r12
    2eb0:	9d 1d       	adc	r25, r13
    2eb2:	69 8c       	ldd	r6, Y+25	; 0x19
    2eb4:	7a 8c       	ldd	r7, Y+26	; 0x1a
    2eb6:	8b 8c       	ldd	r8, Y+27	; 0x1b
    2eb8:	9c 8c       	ldd	r9, Y+28	; 0x1c
    2eba:	66 16       	cp	r6, r22
    2ebc:	77 06       	cpc	r7, r23
    2ebe:	88 06       	cpc	r8, r24
    2ec0:	99 06       	cpc	r9, r25
    2ec2:	40 f1       	brcs	.+80     	; 0x2f14 <__udivdi3+0xc62>
    2ec4:	66 15       	cp	r22, r6
    2ec6:	77 05       	cpc	r23, r7
    2ec8:	88 05       	cpc	r24, r8
    2eca:	99 05       	cpc	r25, r9
    2ecc:	09 f0       	breq	.+2      	; 0x2ed0 <__udivdi3+0xc1e>
    2ece:	43 c0       	rjmp	.+134    	; 0x2f56 <__udivdi3+0xca4>
    2ed0:	d9 01       	movw	r26, r18
    2ed2:	99 27       	eor	r25, r25
    2ed4:	88 27       	eor	r24, r24
    2ed6:	69 96       	adiw	r28, 0x19	; 25
    2ed8:	2c ad       	ldd	r18, Y+60	; 0x3c
    2eda:	3d ad       	ldd	r19, Y+61	; 0x3d
    2edc:	4e ad       	ldd	r20, Y+62	; 0x3e
    2ede:	5f ad       	ldd	r21, Y+63	; 0x3f
    2ee0:	69 97       	sbiw	r28, 0x19	; 25
    2ee2:	40 70       	andi	r20, 0x00	; 0
    2ee4:	50 70       	andi	r21, 0x00	; 0
    2ee6:	82 0f       	add	r24, r18
    2ee8:	93 1f       	adc	r25, r19
    2eea:	a4 1f       	adc	r26, r20
    2eec:	b5 1f       	adc	r27, r21
    2eee:	2d a5       	ldd	r18, Y+45	; 0x2d
    2ef0:	3e a5       	ldd	r19, Y+46	; 0x2e
    2ef2:	4f a5       	ldd	r20, Y+47	; 0x2f
    2ef4:	58 a9       	ldd	r21, Y+48	; 0x30
    2ef6:	6e 96       	adiw	r28, 0x1e	; 30
    2ef8:	0f ac       	ldd	r0, Y+63	; 0x3f
    2efa:	6e 97       	sbiw	r28, 0x1e	; 30
    2efc:	04 c0       	rjmp	.+8      	; 0x2f06 <__udivdi3+0xc54>
    2efe:	22 0f       	add	r18, r18
    2f00:	33 1f       	adc	r19, r19
    2f02:	44 1f       	adc	r20, r20
    2f04:	55 1f       	adc	r21, r21
    2f06:	0a 94       	dec	r0
    2f08:	d2 f7       	brpl	.-12     	; 0x2efe <__udivdi3+0xc4c>
    2f0a:	28 17       	cp	r18, r24
    2f0c:	39 07       	cpc	r19, r25
    2f0e:	4a 07       	cpc	r20, r26
    2f10:	5b 07       	cpc	r21, r27
    2f12:	08 f5       	brcc	.+66     	; 0x2f56 <__udivdi3+0xca4>
    2f14:	09 a9       	ldd	r16, Y+49	; 0x31
    2f16:	1a a9       	ldd	r17, Y+50	; 0x32
    2f18:	2b a9       	ldd	r18, Y+51	; 0x33
    2f1a:	3c a9       	ldd	r19, Y+52	; 0x34
    2f1c:	01 50       	subi	r16, 0x01	; 1
    2f1e:	10 40       	sbci	r17, 0x00	; 0
    2f20:	20 40       	sbci	r18, 0x00	; 0
    2f22:	30 40       	sbci	r19, 0x00	; 0
    2f24:	09 ab       	std	Y+49, r16	; 0x31
    2f26:	1a ab       	std	Y+50, r17	; 0x32
    2f28:	2b ab       	std	Y+51, r18	; 0x33
    2f2a:	3c ab       	std	Y+52, r19	; 0x34
    2f2c:	14 c0       	rjmp	.+40     	; 0x2f56 <__udivdi3+0xca4>
    2f2e:	66 24       	eor	r6, r6
    2f30:	77 24       	eor	r7, r7
    2f32:	43 01       	movw	r8, r6
    2f34:	21 e0       	ldi	r18, 0x01	; 1
    2f36:	30 e0       	ldi	r19, 0x00	; 0
    2f38:	40 e0       	ldi	r20, 0x00	; 0
    2f3a:	50 e0       	ldi	r21, 0x00	; 0
    2f3c:	29 ab       	std	Y+49, r18	; 0x31
    2f3e:	3a ab       	std	Y+50, r19	; 0x32
    2f40:	4b ab       	std	Y+51, r20	; 0x33
    2f42:	5c ab       	std	Y+52, r21	; 0x34
    2f44:	0b c0       	rjmp	.+22     	; 0x2f5c <__udivdi3+0xcaa>
    2f46:	66 24       	eor	r6, r6
    2f48:	77 24       	eor	r7, r7
    2f4a:	43 01       	movw	r8, r6
    2f4c:	19 aa       	std	Y+49, r1	; 0x31
    2f4e:	1a aa       	std	Y+50, r1	; 0x32
    2f50:	1b aa       	std	Y+51, r1	; 0x33
    2f52:	1c aa       	std	Y+52, r1	; 0x34
    2f54:	03 c0       	rjmp	.+6      	; 0x2f5c <__udivdi3+0xcaa>
    2f56:	66 24       	eor	r6, r6
    2f58:	77 24       	eor	r7, r7
    2f5a:	43 01       	movw	r8, r6
    2f5c:	fe 01       	movw	r30, r28
    2f5e:	71 96       	adiw	r30, 0x11	; 17
    2f60:	88 e0       	ldi	r24, 0x08	; 8
    2f62:	df 01       	movw	r26, r30
    2f64:	1d 92       	st	X+, r1
    2f66:	8a 95       	dec	r24
    2f68:	e9 f7       	brne	.-6      	; 0x2f64 <__udivdi3+0xcb2>
    2f6a:	a9 a8       	ldd	r10, Y+49	; 0x31
    2f6c:	ba a8       	ldd	r11, Y+50	; 0x32
    2f6e:	cb a8       	ldd	r12, Y+51	; 0x33
    2f70:	dc a8       	ldd	r13, Y+52	; 0x34
    2f72:	a9 8a       	std	Y+17, r10	; 0x11
    2f74:	ba 8a       	std	Y+18, r11	; 0x12
    2f76:	cb 8a       	std	Y+19, r12	; 0x13
    2f78:	dc 8a       	std	Y+20, r13	; 0x14
    2f7a:	6d 8a       	std	Y+21, r6	; 0x15
    2f7c:	7e 8a       	std	Y+22, r7	; 0x16
    2f7e:	8f 8a       	std	Y+23, r8	; 0x17
    2f80:	98 8e       	std	Y+24, r9	; 0x18
    2f82:	29 a9       	ldd	r18, Y+49	; 0x31
    2f84:	3a 89       	ldd	r19, Y+18	; 0x12
    2f86:	4b 89       	ldd	r20, Y+19	; 0x13
    2f88:	5c 89       	ldd	r21, Y+20	; 0x14
    2f8a:	66 2d       	mov	r22, r6
    2f8c:	7e 89       	ldd	r23, Y+22	; 0x16
    2f8e:	8f 89       	ldd	r24, Y+23	; 0x17
    2f90:	98 8d       	ldd	r25, Y+24	; 0x18
    2f92:	c2 5a       	subi	r28, 0xA2	; 162
    2f94:	df 4f       	sbci	r29, 0xFF	; 255
    2f96:	e2 e1       	ldi	r30, 0x12	; 18
    2f98:	0c 94 91 34 	jmp	0x6922	; 0x6922 <__epilogue_restores__>

00002f9c <__umoddi3>:
    2f9c:	ab e5       	ldi	r26, 0x5B	; 91
    2f9e:	b0 e0       	ldi	r27, 0x00	; 0
    2fa0:	e4 ed       	ldi	r30, 0xD4	; 212
    2fa2:	f7 e1       	ldi	r31, 0x17	; 23
    2fa4:	0c 94 75 34 	jmp	0x68ea	; 0x68ea <__prologue_saves__>
    2fa8:	a8 e0       	ldi	r26, 0x08	; 8
    2faa:	4e 01       	movw	r8, r28
    2fac:	08 94       	sec
    2fae:	81 1c       	adc	r8, r1
    2fb0:	91 1c       	adc	r9, r1
    2fb2:	f4 01       	movw	r30, r8
    2fb4:	6a 2e       	mov	r6, r26
    2fb6:	11 92       	st	Z+, r1
    2fb8:	6a 94       	dec	r6
    2fba:	e9 f7       	brne	.-6      	; 0x2fb6 <__umoddi3+0x1a>
    2fbc:	29 83       	std	Y+1, r18	; 0x01
    2fbe:	3a 83       	std	Y+2, r19	; 0x02
    2fc0:	4b 83       	std	Y+3, r20	; 0x03
    2fc2:	5c 83       	std	Y+4, r21	; 0x04
    2fc4:	6d 83       	std	Y+5, r22	; 0x05
    2fc6:	7e 83       	std	Y+6, r23	; 0x06
    2fc8:	8f 83       	std	Y+7, r24	; 0x07
    2fca:	98 87       	std	Y+8, r25	; 0x08
    2fcc:	ce 01       	movw	r24, r28
    2fce:	09 96       	adiw	r24, 0x09	; 9
    2fd0:	fc 01       	movw	r30, r24
    2fd2:	11 92       	st	Z+, r1
    2fd4:	aa 95       	dec	r26
    2fd6:	e9 f7       	brne	.-6      	; 0x2fd2 <__umoddi3+0x36>
    2fd8:	a9 86       	std	Y+9, r10	; 0x09
    2fda:	ba 86       	std	Y+10, r11	; 0x0a
    2fdc:	cb 86       	std	Y+11, r12	; 0x0b
    2fde:	dc 86       	std	Y+12, r13	; 0x0c
    2fe0:	ed 86       	std	Y+13, r14	; 0x0d
    2fe2:	fe 86       	std	Y+14, r15	; 0x0e
    2fe4:	0f 87       	std	Y+15, r16	; 0x0f
    2fe6:	18 8b       	std	Y+16, r17	; 0x10
    2fe8:	29 84       	ldd	r2, Y+9	; 0x09
    2fea:	3a 84       	ldd	r3, Y+10	; 0x0a
    2fec:	4b 84       	ldd	r4, Y+11	; 0x0b
    2fee:	5c 84       	ldd	r5, Y+12	; 0x0c
    2ff0:	ad 84       	ldd	r10, Y+13	; 0x0d
    2ff2:	be 84       	ldd	r11, Y+14	; 0x0e
    2ff4:	cf 84       	ldd	r12, Y+15	; 0x0f
    2ff6:	d8 88       	ldd	r13, Y+16	; 0x10
    2ff8:	29 81       	ldd	r18, Y+1	; 0x01
    2ffa:	3a 81       	ldd	r19, Y+2	; 0x02
    2ffc:	4b 81       	ldd	r20, Y+3	; 0x03
    2ffe:	5c 81       	ldd	r21, Y+4	; 0x04
    3000:	69 96       	adiw	r28, 0x19	; 25
    3002:	2f af       	std	Y+63, r18	; 0x3f
    3004:	69 97       	sbiw	r28, 0x19	; 25
    3006:	6a 96       	adiw	r28, 0x1a	; 26
    3008:	3f af       	std	Y+63, r19	; 0x3f
    300a:	6a 97       	sbiw	r28, 0x1a	; 26
    300c:	6b 96       	adiw	r28, 0x1b	; 27
    300e:	4f af       	std	Y+63, r20	; 0x3f
    3010:	6b 97       	sbiw	r28, 0x1b	; 27
    3012:	6c 96       	adiw	r28, 0x1c	; 28
    3014:	5f af       	std	Y+63, r21	; 0x3f
    3016:	6c 97       	sbiw	r28, 0x1c	; 28
    3018:	6c 96       	adiw	r28, 0x1c	; 28
    301a:	6c ac       	ldd	r6, Y+60	; 0x3c
    301c:	7d ac       	ldd	r7, Y+61	; 0x3d
    301e:	8e ac       	ldd	r8, Y+62	; 0x3e
    3020:	9f ac       	ldd	r9, Y+63	; 0x3f
    3022:	6c 97       	sbiw	r28, 0x1c	; 28
    3024:	69 aa       	std	Y+49, r6	; 0x31
    3026:	7a aa       	std	Y+50, r7	; 0x32
    3028:	8b aa       	std	Y+51, r8	; 0x33
    302a:	9c aa       	std	Y+52, r9	; 0x34
    302c:	6d 81       	ldd	r22, Y+5	; 0x05
    302e:	7e 81       	ldd	r23, Y+6	; 0x06
    3030:	8f 81       	ldd	r24, Y+7	; 0x07
    3032:	98 85       	ldd	r25, Y+8	; 0x08
    3034:	3b 01       	movw	r6, r22
    3036:	4c 01       	movw	r8, r24
    3038:	6d aa       	std	Y+53, r6	; 0x35
    303a:	7e aa       	std	Y+54, r7	; 0x36
    303c:	8f aa       	std	Y+55, r8	; 0x37
    303e:	98 ae       	std	Y+56, r9	; 0x38
    3040:	a1 14       	cp	r10, r1
    3042:	b1 04       	cpc	r11, r1
    3044:	c1 04       	cpc	r12, r1
    3046:	d1 04       	cpc	r13, r1
    3048:	09 f0       	breq	.+2      	; 0x304c <__umoddi3+0xb0>
    304a:	04 c3       	rjmp	.+1544   	; 0x3654 <__umoddi3+0x6b8>
    304c:	62 14       	cp	r6, r2
    304e:	73 04       	cpc	r7, r3
    3050:	84 04       	cpc	r8, r4
    3052:	95 04       	cpc	r9, r5
    3054:	08 f0       	brcs	.+2      	; 0x3058 <__umoddi3+0xbc>
    3056:	00 c1       	rjmp	.+512    	; 0x3258 <__umoddi3+0x2bc>
    3058:	00 e0       	ldi	r16, 0x00	; 0
    305a:	20 16       	cp	r2, r16
    305c:	00 e0       	ldi	r16, 0x00	; 0
    305e:	30 06       	cpc	r3, r16
    3060:	01 e0       	ldi	r16, 0x01	; 1
    3062:	40 06       	cpc	r4, r16
    3064:	00 e0       	ldi	r16, 0x00	; 0
    3066:	50 06       	cpc	r5, r16
    3068:	88 f4       	brcc	.+34     	; 0x308c <__umoddi3+0xf0>
    306a:	1f ef       	ldi	r17, 0xFF	; 255
    306c:	21 16       	cp	r2, r17
    306e:	31 04       	cpc	r3, r1
    3070:	41 04       	cpc	r4, r1
    3072:	51 04       	cpc	r5, r1
    3074:	39 f0       	breq	.+14     	; 0x3084 <__umoddi3+0xe8>
    3076:	30 f0       	brcs	.+12     	; 0x3084 <__umoddi3+0xe8>
    3078:	88 e0       	ldi	r24, 0x08	; 8
    307a:	e8 2e       	mov	r14, r24
    307c:	f1 2c       	mov	r15, r1
    307e:	01 2d       	mov	r16, r1
    3080:	11 2d       	mov	r17, r1
    3082:	18 c0       	rjmp	.+48     	; 0x30b4 <__umoddi3+0x118>
    3084:	ee 24       	eor	r14, r14
    3086:	ff 24       	eor	r15, r15
    3088:	87 01       	movw	r16, r14
    308a:	14 c0       	rjmp	.+40     	; 0x30b4 <__umoddi3+0x118>
    308c:	40 e0       	ldi	r20, 0x00	; 0
    308e:	24 16       	cp	r2, r20
    3090:	40 e0       	ldi	r20, 0x00	; 0
    3092:	34 06       	cpc	r3, r20
    3094:	40 e0       	ldi	r20, 0x00	; 0
    3096:	44 06       	cpc	r4, r20
    3098:	41 e0       	ldi	r20, 0x01	; 1
    309a:	54 06       	cpc	r5, r20
    309c:	30 f0       	brcs	.+12     	; 0x30aa <__umoddi3+0x10e>
    309e:	b8 e1       	ldi	r27, 0x18	; 24
    30a0:	eb 2e       	mov	r14, r27
    30a2:	f1 2c       	mov	r15, r1
    30a4:	01 2d       	mov	r16, r1
    30a6:	11 2d       	mov	r17, r1
    30a8:	05 c0       	rjmp	.+10     	; 0x30b4 <__umoddi3+0x118>
    30aa:	a0 e1       	ldi	r26, 0x10	; 16
    30ac:	ea 2e       	mov	r14, r26
    30ae:	f1 2c       	mov	r15, r1
    30b0:	01 2d       	mov	r16, r1
    30b2:	11 2d       	mov	r17, r1
    30b4:	d2 01       	movw	r26, r4
    30b6:	c1 01       	movw	r24, r2
    30b8:	0e 2c       	mov	r0, r14
    30ba:	04 c0       	rjmp	.+8      	; 0x30c4 <__umoddi3+0x128>
    30bc:	b6 95       	lsr	r27
    30be:	a7 95       	ror	r26
    30c0:	97 95       	ror	r25
    30c2:	87 95       	ror	r24
    30c4:	0a 94       	dec	r0
    30c6:	d2 f7       	brpl	.-12     	; 0x30bc <__umoddi3+0x120>
    30c8:	8b 51       	subi	r24, 0x1B	; 27
    30ca:	9f 4f       	sbci	r25, 0xFF	; 255
    30cc:	dc 01       	movw	r26, r24
    30ce:	2c 91       	ld	r18, X
    30d0:	80 e2       	ldi	r24, 0x20	; 32
    30d2:	90 e0       	ldi	r25, 0x00	; 0
    30d4:	a0 e0       	ldi	r26, 0x00	; 0
    30d6:	b0 e0       	ldi	r27, 0x00	; 0
    30d8:	8e 19       	sub	r24, r14
    30da:	9f 09       	sbc	r25, r15
    30dc:	a0 0b       	sbc	r26, r16
    30de:	b1 0b       	sbc	r27, r17
    30e0:	5c 01       	movw	r10, r24
    30e2:	6d 01       	movw	r12, r26
    30e4:	a2 1a       	sub	r10, r18
    30e6:	b1 08       	sbc	r11, r1
    30e8:	c1 08       	sbc	r12, r1
    30ea:	d1 08       	sbc	r13, r1
    30ec:	a9 ae       	std	Y+57, r10	; 0x39
    30ee:	ba ae       	std	Y+58, r11	; 0x3a
    30f0:	cb ae       	std	Y+59, r12	; 0x3b
    30f2:	dc ae       	std	Y+60, r13	; 0x3c
    30f4:	a1 14       	cp	r10, r1
    30f6:	b1 04       	cpc	r11, r1
    30f8:	c1 04       	cpc	r12, r1
    30fa:	d1 04       	cpc	r13, r1
    30fc:	09 f4       	brne	.+2      	; 0x3100 <__umoddi3+0x164>
    30fe:	3f c0       	rjmp	.+126    	; 0x317e <__umoddi3+0x1e2>
    3100:	69 ad       	ldd	r22, Y+57	; 0x39
    3102:	06 2e       	mov	r0, r22
    3104:	04 c0       	rjmp	.+8      	; 0x310e <__umoddi3+0x172>
    3106:	22 0c       	add	r2, r2
    3108:	33 1c       	adc	r3, r3
    310a:	44 1c       	adc	r4, r4
    310c:	55 1c       	adc	r5, r5
    310e:	0a 94       	dec	r0
    3110:	d2 f7       	brpl	.-12     	; 0x3106 <__umoddi3+0x16a>
    3112:	a4 01       	movw	r20, r8
    3114:	93 01       	movw	r18, r6
    3116:	06 2e       	mov	r0, r22
    3118:	04 c0       	rjmp	.+8      	; 0x3122 <__umoddi3+0x186>
    311a:	22 0f       	add	r18, r18
    311c:	33 1f       	adc	r19, r19
    311e:	44 1f       	adc	r20, r20
    3120:	55 1f       	adc	r21, r21
    3122:	0a 94       	dec	r0
    3124:	d2 f7       	brpl	.-12     	; 0x311a <__umoddi3+0x17e>
    3126:	80 e2       	ldi	r24, 0x20	; 32
    3128:	90 e0       	ldi	r25, 0x00	; 0
    312a:	8a 19       	sub	r24, r10
    312c:	9b 09       	sbc	r25, r11
    312e:	6c 96       	adiw	r28, 0x1c	; 28
    3130:	cc ac       	ldd	r12, Y+60	; 0x3c
    3132:	dd ac       	ldd	r13, Y+61	; 0x3d
    3134:	ee ac       	ldd	r14, Y+62	; 0x3e
    3136:	ff ac       	ldd	r15, Y+63	; 0x3f
    3138:	6c 97       	sbiw	r28, 0x1c	; 28
    313a:	04 c0       	rjmp	.+8      	; 0x3144 <__umoddi3+0x1a8>
    313c:	f6 94       	lsr	r15
    313e:	e7 94       	ror	r14
    3140:	d7 94       	ror	r13
    3142:	c7 94       	ror	r12
    3144:	8a 95       	dec	r24
    3146:	d2 f7       	brpl	.-12     	; 0x313c <__umoddi3+0x1a0>
    3148:	87 01       	movw	r16, r14
    314a:	76 01       	movw	r14, r12
    314c:	e2 2a       	or	r14, r18
    314e:	f3 2a       	or	r15, r19
    3150:	04 2b       	or	r16, r20
    3152:	15 2b       	or	r17, r21
    3154:	ed aa       	std	Y+53, r14	; 0x35
    3156:	fe aa       	std	Y+54, r15	; 0x36
    3158:	0f ab       	std	Y+55, r16	; 0x37
    315a:	18 af       	std	Y+56, r17	; 0x38
    315c:	6c 96       	adiw	r28, 0x1c	; 28
    315e:	8c ad       	ldd	r24, Y+60	; 0x3c
    3160:	9d ad       	ldd	r25, Y+61	; 0x3d
    3162:	ae ad       	ldd	r26, Y+62	; 0x3e
    3164:	bf ad       	ldd	r27, Y+63	; 0x3f
    3166:	6c 97       	sbiw	r28, 0x1c	; 28
    3168:	04 c0       	rjmp	.+8      	; 0x3172 <__umoddi3+0x1d6>
    316a:	88 0f       	add	r24, r24
    316c:	99 1f       	adc	r25, r25
    316e:	aa 1f       	adc	r26, r26
    3170:	bb 1f       	adc	r27, r27
    3172:	6a 95       	dec	r22
    3174:	d2 f7       	brpl	.-12     	; 0x316a <__umoddi3+0x1ce>
    3176:	89 ab       	std	Y+49, r24	; 0x31
    3178:	9a ab       	std	Y+50, r25	; 0x32
    317a:	ab ab       	std	Y+51, r26	; 0x33
    317c:	bc ab       	std	Y+52, r27	; 0x34
    317e:	32 01       	movw	r6, r4
    3180:	88 24       	eor	r8, r8
    3182:	99 24       	eor	r9, r9
    3184:	b2 01       	movw	r22, r4
    3186:	a1 01       	movw	r20, r2
    3188:	60 70       	andi	r22, 0x00	; 0
    318a:	70 70       	andi	r23, 0x00	; 0
    318c:	21 96       	adiw	r28, 0x01	; 1
    318e:	4c af       	std	Y+60, r20	; 0x3c
    3190:	5d af       	std	Y+61, r21	; 0x3d
    3192:	6e af       	std	Y+62, r22	; 0x3e
    3194:	7f af       	std	Y+63, r23	; 0x3f
    3196:	21 97       	sbiw	r28, 0x01	; 1
    3198:	6d a9       	ldd	r22, Y+53	; 0x35
    319a:	7e a9       	ldd	r23, Y+54	; 0x36
    319c:	8f a9       	ldd	r24, Y+55	; 0x37
    319e:	98 ad       	ldd	r25, Y+56	; 0x38
    31a0:	a4 01       	movw	r20, r8
    31a2:	93 01       	movw	r18, r6
    31a4:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    31a8:	7b 01       	movw	r14, r22
    31aa:	8c 01       	movw	r16, r24
    31ac:	6d a9       	ldd	r22, Y+53	; 0x35
    31ae:	7e a9       	ldd	r23, Y+54	; 0x36
    31b0:	8f a9       	ldd	r24, Y+55	; 0x37
    31b2:	98 ad       	ldd	r25, Y+56	; 0x38
    31b4:	a4 01       	movw	r20, r8
    31b6:	93 01       	movw	r18, r6
    31b8:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    31bc:	ca 01       	movw	r24, r20
    31be:	b9 01       	movw	r22, r18
    31c0:	21 96       	adiw	r28, 0x01	; 1
    31c2:	2c ad       	ldd	r18, Y+60	; 0x3c
    31c4:	3d ad       	ldd	r19, Y+61	; 0x3d
    31c6:	4e ad       	ldd	r20, Y+62	; 0x3e
    31c8:	5f ad       	ldd	r21, Y+63	; 0x3f
    31ca:	21 97       	sbiw	r28, 0x01	; 1
    31cc:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    31d0:	9b 01       	movw	r18, r22
    31d2:	ac 01       	movw	r20, r24
    31d4:	87 01       	movw	r16, r14
    31d6:	ff 24       	eor	r15, r15
    31d8:	ee 24       	eor	r14, r14
    31da:	a9 a8       	ldd	r10, Y+49	; 0x31
    31dc:	ba a8       	ldd	r11, Y+50	; 0x32
    31de:	cb a8       	ldd	r12, Y+51	; 0x33
    31e0:	dc a8       	ldd	r13, Y+52	; 0x34
    31e2:	c6 01       	movw	r24, r12
    31e4:	aa 27       	eor	r26, r26
    31e6:	bb 27       	eor	r27, r27
    31e8:	57 01       	movw	r10, r14
    31ea:	68 01       	movw	r12, r16
    31ec:	a8 2a       	or	r10, r24
    31ee:	b9 2a       	or	r11, r25
    31f0:	ca 2a       	or	r12, r26
    31f2:	db 2a       	or	r13, r27
    31f4:	a2 16       	cp	r10, r18
    31f6:	b3 06       	cpc	r11, r19
    31f8:	c4 06       	cpc	r12, r20
    31fa:	d5 06       	cpc	r13, r21
    31fc:	90 f4       	brcc	.+36     	; 0x3222 <__umoddi3+0x286>
    31fe:	a2 0c       	add	r10, r2
    3200:	b3 1c       	adc	r11, r3
    3202:	c4 1c       	adc	r12, r4
    3204:	d5 1c       	adc	r13, r5
    3206:	a2 14       	cp	r10, r2
    3208:	b3 04       	cpc	r11, r3
    320a:	c4 04       	cpc	r12, r4
    320c:	d5 04       	cpc	r13, r5
    320e:	48 f0       	brcs	.+18     	; 0x3222 <__umoddi3+0x286>
    3210:	a2 16       	cp	r10, r18
    3212:	b3 06       	cpc	r11, r19
    3214:	c4 06       	cpc	r12, r20
    3216:	d5 06       	cpc	r13, r21
    3218:	20 f4       	brcc	.+8      	; 0x3222 <__umoddi3+0x286>
    321a:	a2 0c       	add	r10, r2
    321c:	b3 1c       	adc	r11, r3
    321e:	c4 1c       	adc	r12, r4
    3220:	d5 1c       	adc	r13, r5
    3222:	a2 1a       	sub	r10, r18
    3224:	b3 0a       	sbc	r11, r19
    3226:	c4 0a       	sbc	r12, r20
    3228:	d5 0a       	sbc	r13, r21
    322a:	c6 01       	movw	r24, r12
    322c:	b5 01       	movw	r22, r10
    322e:	a4 01       	movw	r20, r8
    3230:	93 01       	movw	r18, r6
    3232:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    3236:	7b 01       	movw	r14, r22
    3238:	8c 01       	movw	r16, r24
    323a:	c6 01       	movw	r24, r12
    323c:	b5 01       	movw	r22, r10
    323e:	a4 01       	movw	r20, r8
    3240:	93 01       	movw	r18, r6
    3242:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    3246:	ca 01       	movw	r24, r20
    3248:	b9 01       	movw	r22, r18
    324a:	21 96       	adiw	r28, 0x01	; 1
    324c:	2c ad       	ldd	r18, Y+60	; 0x3c
    324e:	3d ad       	ldd	r19, Y+61	; 0x3d
    3250:	4e ad       	ldd	r20, Y+62	; 0x3e
    3252:	5f ad       	ldd	r21, Y+63	; 0x3f
    3254:	21 97       	sbiw	r28, 0x01	; 1
    3256:	ba c1       	rjmp	.+884    	; 0x35cc <__umoddi3+0x630>
    3258:	21 14       	cp	r2, r1
    325a:	31 04       	cpc	r3, r1
    325c:	41 04       	cpc	r4, r1
    325e:	51 04       	cpc	r5, r1
    3260:	71 f4       	brne	.+28     	; 0x327e <__umoddi3+0x2e2>
    3262:	61 e0       	ldi	r22, 0x01	; 1
    3264:	70 e0       	ldi	r23, 0x00	; 0
    3266:	80 e0       	ldi	r24, 0x00	; 0
    3268:	90 e0       	ldi	r25, 0x00	; 0
    326a:	20 e0       	ldi	r18, 0x00	; 0
    326c:	30 e0       	ldi	r19, 0x00	; 0
    326e:	40 e0       	ldi	r20, 0x00	; 0
    3270:	50 e0       	ldi	r21, 0x00	; 0
    3272:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    3276:	c9 01       	movw	r24, r18
    3278:	da 01       	movw	r26, r20
    327a:	1c 01       	movw	r2, r24
    327c:	2d 01       	movw	r4, r26
    327e:	00 e0       	ldi	r16, 0x00	; 0
    3280:	20 16       	cp	r2, r16
    3282:	00 e0       	ldi	r16, 0x00	; 0
    3284:	30 06       	cpc	r3, r16
    3286:	01 e0       	ldi	r16, 0x01	; 1
    3288:	40 06       	cpc	r4, r16
    328a:	00 e0       	ldi	r16, 0x00	; 0
    328c:	50 06       	cpc	r5, r16
    328e:	88 f4       	brcc	.+34     	; 0x32b2 <__umoddi3+0x316>
    3290:	1f ef       	ldi	r17, 0xFF	; 255
    3292:	21 16       	cp	r2, r17
    3294:	31 04       	cpc	r3, r1
    3296:	41 04       	cpc	r4, r1
    3298:	51 04       	cpc	r5, r1
    329a:	39 f0       	breq	.+14     	; 0x32aa <__umoddi3+0x30e>
    329c:	30 f0       	brcs	.+12     	; 0x32aa <__umoddi3+0x30e>
    329e:	68 e0       	ldi	r22, 0x08	; 8
    32a0:	e6 2e       	mov	r14, r22
    32a2:	f1 2c       	mov	r15, r1
    32a4:	01 2d       	mov	r16, r1
    32a6:	11 2d       	mov	r17, r1
    32a8:	18 c0       	rjmp	.+48     	; 0x32da <__umoddi3+0x33e>
    32aa:	ee 24       	eor	r14, r14
    32ac:	ff 24       	eor	r15, r15
    32ae:	87 01       	movw	r16, r14
    32b0:	14 c0       	rjmp	.+40     	; 0x32da <__umoddi3+0x33e>
    32b2:	40 e0       	ldi	r20, 0x00	; 0
    32b4:	24 16       	cp	r2, r20
    32b6:	40 e0       	ldi	r20, 0x00	; 0
    32b8:	34 06       	cpc	r3, r20
    32ba:	40 e0       	ldi	r20, 0x00	; 0
    32bc:	44 06       	cpc	r4, r20
    32be:	41 e0       	ldi	r20, 0x01	; 1
    32c0:	54 06       	cpc	r5, r20
    32c2:	30 f0       	brcs	.+12     	; 0x32d0 <__umoddi3+0x334>
    32c4:	58 e1       	ldi	r21, 0x18	; 24
    32c6:	e5 2e       	mov	r14, r21
    32c8:	f1 2c       	mov	r15, r1
    32ca:	01 2d       	mov	r16, r1
    32cc:	11 2d       	mov	r17, r1
    32ce:	05 c0       	rjmp	.+10     	; 0x32da <__umoddi3+0x33e>
    32d0:	40 e1       	ldi	r20, 0x10	; 16
    32d2:	e4 2e       	mov	r14, r20
    32d4:	f1 2c       	mov	r15, r1
    32d6:	01 2d       	mov	r16, r1
    32d8:	11 2d       	mov	r17, r1
    32da:	d2 01       	movw	r26, r4
    32dc:	c1 01       	movw	r24, r2
    32de:	0e 2c       	mov	r0, r14
    32e0:	04 c0       	rjmp	.+8      	; 0x32ea <__umoddi3+0x34e>
    32e2:	b6 95       	lsr	r27
    32e4:	a7 95       	ror	r26
    32e6:	97 95       	ror	r25
    32e8:	87 95       	ror	r24
    32ea:	0a 94       	dec	r0
    32ec:	d2 f7       	brpl	.-12     	; 0x32e2 <__umoddi3+0x346>
    32ee:	8b 51       	subi	r24, 0x1B	; 27
    32f0:	9f 4f       	sbci	r25, 0xFF	; 255
    32f2:	dc 01       	movw	r26, r24
    32f4:	2c 91       	ld	r18, X
    32f6:	30 e2       	ldi	r19, 0x20	; 32
    32f8:	a3 2e       	mov	r10, r19
    32fa:	b1 2c       	mov	r11, r1
    32fc:	c1 2c       	mov	r12, r1
    32fe:	d1 2c       	mov	r13, r1
    3300:	d6 01       	movw	r26, r12
    3302:	c5 01       	movw	r24, r10
    3304:	8e 19       	sub	r24, r14
    3306:	9f 09       	sbc	r25, r15
    3308:	a0 0b       	sbc	r26, r16
    330a:	b1 0b       	sbc	r27, r17
    330c:	7c 01       	movw	r14, r24
    330e:	8d 01       	movw	r16, r26
    3310:	e2 1a       	sub	r14, r18
    3312:	f1 08       	sbc	r15, r1
    3314:	01 09       	sbc	r16, r1
    3316:	11 09       	sbc	r17, r1
    3318:	e9 ae       	std	Y+57, r14	; 0x39
    331a:	fa ae       	std	Y+58, r15	; 0x3a
    331c:	0b af       	std	Y+59, r16	; 0x3b
    331e:	1c af       	std	Y+60, r17	; 0x3c
    3320:	e1 14       	cp	r14, r1
    3322:	f1 04       	cpc	r15, r1
    3324:	01 05       	cpc	r16, r1
    3326:	11 05       	cpc	r17, r1
    3328:	39 f4       	brne	.+14     	; 0x3338 <__umoddi3+0x39c>
    332a:	64 01       	movw	r12, r8
    332c:	53 01       	movw	r10, r6
    332e:	a2 18       	sub	r10, r2
    3330:	b3 08       	sbc	r11, r3
    3332:	c4 08       	sbc	r12, r4
    3334:	d5 08       	sbc	r13, r5
    3336:	e2 c0       	rjmp	.+452    	; 0x34fc <__umoddi3+0x560>
    3338:	f9 ac       	ldd	r15, Y+57	; 0x39
    333a:	68 96       	adiw	r28, 0x18	; 24
    333c:	ff ae       	std	Y+63, r15	; 0x3f
    333e:	68 97       	sbiw	r28, 0x18	; 24
    3340:	0f 2c       	mov	r0, r15
    3342:	04 c0       	rjmp	.+8      	; 0x334c <__umoddi3+0x3b0>
    3344:	22 0c       	add	r2, r2
    3346:	33 1c       	adc	r3, r3
    3348:	44 1c       	adc	r4, r4
    334a:	55 1c       	adc	r5, r5
    334c:	0a 94       	dec	r0
    334e:	d2 f7       	brpl	.-12     	; 0x3344 <__umoddi3+0x3a8>
    3350:	8a 2d       	mov	r24, r10
    3352:	8f 19       	sub	r24, r15
    3354:	64 01       	movw	r12, r8
    3356:	53 01       	movw	r10, r6
    3358:	08 2e       	mov	r0, r24
    335a:	04 c0       	rjmp	.+8      	; 0x3364 <__umoddi3+0x3c8>
    335c:	d6 94       	lsr	r13
    335e:	c7 94       	ror	r12
    3360:	b7 94       	ror	r11
    3362:	a7 94       	ror	r10
    3364:	0a 94       	dec	r0
    3366:	d2 f7       	brpl	.-12     	; 0x335c <__umoddi3+0x3c0>
    3368:	a4 01       	movw	r20, r8
    336a:	93 01       	movw	r18, r6
    336c:	04 c0       	rjmp	.+8      	; 0x3376 <__umoddi3+0x3da>
    336e:	22 0f       	add	r18, r18
    3370:	33 1f       	adc	r19, r19
    3372:	44 1f       	adc	r20, r20
    3374:	55 1f       	adc	r21, r21
    3376:	fa 94       	dec	r15
    3378:	d2 f7       	brpl	.-12     	; 0x336e <__umoddi3+0x3d2>
    337a:	6c 96       	adiw	r28, 0x1c	; 28
    337c:	6c ac       	ldd	r6, Y+60	; 0x3c
    337e:	7d ac       	ldd	r7, Y+61	; 0x3d
    3380:	8e ac       	ldd	r8, Y+62	; 0x3e
    3382:	9f ac       	ldd	r9, Y+63	; 0x3f
    3384:	6c 97       	sbiw	r28, 0x1c	; 28
    3386:	04 c0       	rjmp	.+8      	; 0x3390 <__umoddi3+0x3f4>
    3388:	96 94       	lsr	r9
    338a:	87 94       	ror	r8
    338c:	77 94       	ror	r7
    338e:	67 94       	ror	r6
    3390:	8a 95       	dec	r24
    3392:	d2 f7       	brpl	.-12     	; 0x3388 <__umoddi3+0x3ec>
    3394:	84 01       	movw	r16, r8
    3396:	73 01       	movw	r14, r6
    3398:	e2 2a       	or	r14, r18
    339a:	f3 2a       	or	r15, r19
    339c:	04 2b       	or	r16, r20
    339e:	15 2b       	or	r17, r21
    33a0:	ed a6       	std	Y+45, r14	; 0x2d
    33a2:	fe a6       	std	Y+46, r15	; 0x2e
    33a4:	0f a7       	std	Y+47, r16	; 0x2f
    33a6:	18 ab       	std	Y+48, r17	; 0x30
    33a8:	32 01       	movw	r6, r4
    33aa:	88 24       	eor	r8, r8
    33ac:	99 24       	eor	r9, r9
    33ae:	b2 01       	movw	r22, r4
    33b0:	a1 01       	movw	r20, r2
    33b2:	60 70       	andi	r22, 0x00	; 0
    33b4:	70 70       	andi	r23, 0x00	; 0
    33b6:	25 96       	adiw	r28, 0x05	; 5
    33b8:	4c af       	std	Y+60, r20	; 0x3c
    33ba:	5d af       	std	Y+61, r21	; 0x3d
    33bc:	6e af       	std	Y+62, r22	; 0x3e
    33be:	7f af       	std	Y+63, r23	; 0x3f
    33c0:	25 97       	sbiw	r28, 0x05	; 5
    33c2:	c6 01       	movw	r24, r12
    33c4:	b5 01       	movw	r22, r10
    33c6:	a4 01       	movw	r20, r8
    33c8:	93 01       	movw	r18, r6
    33ca:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    33ce:	7b 01       	movw	r14, r22
    33d0:	8c 01       	movw	r16, r24
    33d2:	c6 01       	movw	r24, r12
    33d4:	b5 01       	movw	r22, r10
    33d6:	a4 01       	movw	r20, r8
    33d8:	93 01       	movw	r18, r6
    33da:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    33de:	ca 01       	movw	r24, r20
    33e0:	b9 01       	movw	r22, r18
    33e2:	25 96       	adiw	r28, 0x05	; 5
    33e4:	2c ad       	ldd	r18, Y+60	; 0x3c
    33e6:	3d ad       	ldd	r19, Y+61	; 0x3d
    33e8:	4e ad       	ldd	r20, Y+62	; 0x3e
    33ea:	5f ad       	ldd	r21, Y+63	; 0x3f
    33ec:	25 97       	sbiw	r28, 0x05	; 5
    33ee:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    33f2:	9b 01       	movw	r18, r22
    33f4:	ac 01       	movw	r20, r24
    33f6:	87 01       	movw	r16, r14
    33f8:	ff 24       	eor	r15, r15
    33fa:	ee 24       	eor	r14, r14
    33fc:	ad a4       	ldd	r10, Y+45	; 0x2d
    33fe:	be a4       	ldd	r11, Y+46	; 0x2e
    3400:	cf a4       	ldd	r12, Y+47	; 0x2f
    3402:	d8 a8       	ldd	r13, Y+48	; 0x30
    3404:	c6 01       	movw	r24, r12
    3406:	aa 27       	eor	r26, r26
    3408:	bb 27       	eor	r27, r27
    340a:	5c 01       	movw	r10, r24
    340c:	6d 01       	movw	r12, r26
    340e:	ae 28       	or	r10, r14
    3410:	bf 28       	or	r11, r15
    3412:	c0 2a       	or	r12, r16
    3414:	d1 2a       	or	r13, r17
    3416:	a2 16       	cp	r10, r18
    3418:	b3 06       	cpc	r11, r19
    341a:	c4 06       	cpc	r12, r20
    341c:	d5 06       	cpc	r13, r21
    341e:	90 f4       	brcc	.+36     	; 0x3444 <__umoddi3+0x4a8>
    3420:	a2 0c       	add	r10, r2
    3422:	b3 1c       	adc	r11, r3
    3424:	c4 1c       	adc	r12, r4
    3426:	d5 1c       	adc	r13, r5
    3428:	a2 14       	cp	r10, r2
    342a:	b3 04       	cpc	r11, r3
    342c:	c4 04       	cpc	r12, r4
    342e:	d5 04       	cpc	r13, r5
    3430:	48 f0       	brcs	.+18     	; 0x3444 <__umoddi3+0x4a8>
    3432:	a2 16       	cp	r10, r18
    3434:	b3 06       	cpc	r11, r19
    3436:	c4 06       	cpc	r12, r20
    3438:	d5 06       	cpc	r13, r21
    343a:	20 f4       	brcc	.+8      	; 0x3444 <__umoddi3+0x4a8>
    343c:	a2 0c       	add	r10, r2
    343e:	b3 1c       	adc	r11, r3
    3440:	c4 1c       	adc	r12, r4
    3442:	d5 1c       	adc	r13, r5
    3444:	a2 1a       	sub	r10, r18
    3446:	b3 0a       	sbc	r11, r19
    3448:	c4 0a       	sbc	r12, r20
    344a:	d5 0a       	sbc	r13, r21
    344c:	c6 01       	movw	r24, r12
    344e:	b5 01       	movw	r22, r10
    3450:	a4 01       	movw	r20, r8
    3452:	93 01       	movw	r18, r6
    3454:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    3458:	7b 01       	movw	r14, r22
    345a:	8c 01       	movw	r16, r24
    345c:	c6 01       	movw	r24, r12
    345e:	b5 01       	movw	r22, r10
    3460:	a4 01       	movw	r20, r8
    3462:	93 01       	movw	r18, r6
    3464:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    3468:	ca 01       	movw	r24, r20
    346a:	b9 01       	movw	r22, r18
    346c:	25 96       	adiw	r28, 0x05	; 5
    346e:	2c ad       	ldd	r18, Y+60	; 0x3c
    3470:	3d ad       	ldd	r19, Y+61	; 0x3d
    3472:	4e ad       	ldd	r20, Y+62	; 0x3e
    3474:	5f ad       	ldd	r21, Y+63	; 0x3f
    3476:	25 97       	sbiw	r28, 0x05	; 5
    3478:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    347c:	9b 01       	movw	r18, r22
    347e:	ac 01       	movw	r20, r24
    3480:	87 01       	movw	r16, r14
    3482:	ff 24       	eor	r15, r15
    3484:	ee 24       	eor	r14, r14
    3486:	8d a5       	ldd	r24, Y+45	; 0x2d
    3488:	9e a5       	ldd	r25, Y+46	; 0x2e
    348a:	af a5       	ldd	r26, Y+47	; 0x2f
    348c:	b8 a9       	ldd	r27, Y+48	; 0x30
    348e:	a0 70       	andi	r26, 0x00	; 0
    3490:	b0 70       	andi	r27, 0x00	; 0
    3492:	57 01       	movw	r10, r14
    3494:	68 01       	movw	r12, r16
    3496:	a8 2a       	or	r10, r24
    3498:	b9 2a       	or	r11, r25
    349a:	ca 2a       	or	r12, r26
    349c:	db 2a       	or	r13, r27
    349e:	a2 16       	cp	r10, r18
    34a0:	b3 06       	cpc	r11, r19
    34a2:	c4 06       	cpc	r12, r20
    34a4:	d5 06       	cpc	r13, r21
    34a6:	90 f4       	brcc	.+36     	; 0x34cc <__umoddi3+0x530>
    34a8:	a2 0c       	add	r10, r2
    34aa:	b3 1c       	adc	r11, r3
    34ac:	c4 1c       	adc	r12, r4
    34ae:	d5 1c       	adc	r13, r5
    34b0:	a2 14       	cp	r10, r2
    34b2:	b3 04       	cpc	r11, r3
    34b4:	c4 04       	cpc	r12, r4
    34b6:	d5 04       	cpc	r13, r5
    34b8:	48 f0       	brcs	.+18     	; 0x34cc <__umoddi3+0x530>
    34ba:	a2 16       	cp	r10, r18
    34bc:	b3 06       	cpc	r11, r19
    34be:	c4 06       	cpc	r12, r20
    34c0:	d5 06       	cpc	r13, r21
    34c2:	20 f4       	brcc	.+8      	; 0x34cc <__umoddi3+0x530>
    34c4:	a2 0c       	add	r10, r2
    34c6:	b3 1c       	adc	r11, r3
    34c8:	c4 1c       	adc	r12, r4
    34ca:	d5 1c       	adc	r13, r5
    34cc:	6c 96       	adiw	r28, 0x1c	; 28
    34ce:	ec ac       	ldd	r14, Y+60	; 0x3c
    34d0:	fd ac       	ldd	r15, Y+61	; 0x3d
    34d2:	0e ad       	ldd	r16, Y+62	; 0x3e
    34d4:	1f ad       	ldd	r17, Y+63	; 0x3f
    34d6:	6c 97       	sbiw	r28, 0x1c	; 28
    34d8:	68 96       	adiw	r28, 0x18	; 24
    34da:	0f ac       	ldd	r0, Y+63	; 0x3f
    34dc:	68 97       	sbiw	r28, 0x18	; 24
    34de:	04 c0       	rjmp	.+8      	; 0x34e8 <__umoddi3+0x54c>
    34e0:	ee 0c       	add	r14, r14
    34e2:	ff 1c       	adc	r15, r15
    34e4:	00 1f       	adc	r16, r16
    34e6:	11 1f       	adc	r17, r17
    34e8:	0a 94       	dec	r0
    34ea:	d2 f7       	brpl	.-12     	; 0x34e0 <__umoddi3+0x544>
    34ec:	e9 aa       	std	Y+49, r14	; 0x31
    34ee:	fa aa       	std	Y+50, r15	; 0x32
    34f0:	0b ab       	std	Y+51, r16	; 0x33
    34f2:	1c ab       	std	Y+52, r17	; 0x34
    34f4:	a2 1a       	sub	r10, r18
    34f6:	b3 0a       	sbc	r11, r19
    34f8:	c4 0a       	sbc	r12, r20
    34fa:	d5 0a       	sbc	r13, r21
    34fc:	32 01       	movw	r6, r4
    34fe:	88 24       	eor	r8, r8
    3500:	99 24       	eor	r9, r9
    3502:	b2 01       	movw	r22, r4
    3504:	a1 01       	movw	r20, r2
    3506:	60 70       	andi	r22, 0x00	; 0
    3508:	70 70       	andi	r23, 0x00	; 0
    350a:	29 96       	adiw	r28, 0x09	; 9
    350c:	4c af       	std	Y+60, r20	; 0x3c
    350e:	5d af       	std	Y+61, r21	; 0x3d
    3510:	6e af       	std	Y+62, r22	; 0x3e
    3512:	7f af       	std	Y+63, r23	; 0x3f
    3514:	29 97       	sbiw	r28, 0x09	; 9
    3516:	c6 01       	movw	r24, r12
    3518:	b5 01       	movw	r22, r10
    351a:	a4 01       	movw	r20, r8
    351c:	93 01       	movw	r18, r6
    351e:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    3522:	7b 01       	movw	r14, r22
    3524:	8c 01       	movw	r16, r24
    3526:	c6 01       	movw	r24, r12
    3528:	b5 01       	movw	r22, r10
    352a:	a4 01       	movw	r20, r8
    352c:	93 01       	movw	r18, r6
    352e:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    3532:	ca 01       	movw	r24, r20
    3534:	b9 01       	movw	r22, r18
    3536:	29 96       	adiw	r28, 0x09	; 9
    3538:	2c ad       	ldd	r18, Y+60	; 0x3c
    353a:	3d ad       	ldd	r19, Y+61	; 0x3d
    353c:	4e ad       	ldd	r20, Y+62	; 0x3e
    353e:	5f ad       	ldd	r21, Y+63	; 0x3f
    3540:	29 97       	sbiw	r28, 0x09	; 9
    3542:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    3546:	9b 01       	movw	r18, r22
    3548:	ac 01       	movw	r20, r24
    354a:	87 01       	movw	r16, r14
    354c:	ff 24       	eor	r15, r15
    354e:	ee 24       	eor	r14, r14
    3550:	a9 a8       	ldd	r10, Y+49	; 0x31
    3552:	ba a8       	ldd	r11, Y+50	; 0x32
    3554:	cb a8       	ldd	r12, Y+51	; 0x33
    3556:	dc a8       	ldd	r13, Y+52	; 0x34
    3558:	c6 01       	movw	r24, r12
    355a:	aa 27       	eor	r26, r26
    355c:	bb 27       	eor	r27, r27
    355e:	57 01       	movw	r10, r14
    3560:	68 01       	movw	r12, r16
    3562:	a8 2a       	or	r10, r24
    3564:	b9 2a       	or	r11, r25
    3566:	ca 2a       	or	r12, r26
    3568:	db 2a       	or	r13, r27
    356a:	a2 16       	cp	r10, r18
    356c:	b3 06       	cpc	r11, r19
    356e:	c4 06       	cpc	r12, r20
    3570:	d5 06       	cpc	r13, r21
    3572:	90 f4       	brcc	.+36     	; 0x3598 <__umoddi3+0x5fc>
    3574:	a2 0c       	add	r10, r2
    3576:	b3 1c       	adc	r11, r3
    3578:	c4 1c       	adc	r12, r4
    357a:	d5 1c       	adc	r13, r5
    357c:	a2 14       	cp	r10, r2
    357e:	b3 04       	cpc	r11, r3
    3580:	c4 04       	cpc	r12, r4
    3582:	d5 04       	cpc	r13, r5
    3584:	48 f0       	brcs	.+18     	; 0x3598 <__umoddi3+0x5fc>
    3586:	a2 16       	cp	r10, r18
    3588:	b3 06       	cpc	r11, r19
    358a:	c4 06       	cpc	r12, r20
    358c:	d5 06       	cpc	r13, r21
    358e:	20 f4       	brcc	.+8      	; 0x3598 <__umoddi3+0x5fc>
    3590:	a2 0c       	add	r10, r2
    3592:	b3 1c       	adc	r11, r3
    3594:	c4 1c       	adc	r12, r4
    3596:	d5 1c       	adc	r13, r5
    3598:	a2 1a       	sub	r10, r18
    359a:	b3 0a       	sbc	r11, r19
    359c:	c4 0a       	sbc	r12, r20
    359e:	d5 0a       	sbc	r13, r21
    35a0:	c6 01       	movw	r24, r12
    35a2:	b5 01       	movw	r22, r10
    35a4:	a4 01       	movw	r20, r8
    35a6:	93 01       	movw	r18, r6
    35a8:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    35ac:	7b 01       	movw	r14, r22
    35ae:	8c 01       	movw	r16, r24
    35b0:	c6 01       	movw	r24, r12
    35b2:	b5 01       	movw	r22, r10
    35b4:	a4 01       	movw	r20, r8
    35b6:	93 01       	movw	r18, r6
    35b8:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    35bc:	ca 01       	movw	r24, r20
    35be:	b9 01       	movw	r22, r18
    35c0:	29 96       	adiw	r28, 0x09	; 9
    35c2:	2c ad       	ldd	r18, Y+60	; 0x3c
    35c4:	3d ad       	ldd	r19, Y+61	; 0x3d
    35c6:	4e ad       	ldd	r20, Y+62	; 0x3e
    35c8:	5f ad       	ldd	r21, Y+63	; 0x3f
    35ca:	29 97       	sbiw	r28, 0x09	; 9
    35cc:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    35d0:	9b 01       	movw	r18, r22
    35d2:	ac 01       	movw	r20, r24
    35d4:	87 01       	movw	r16, r14
    35d6:	ff 24       	eor	r15, r15
    35d8:	ee 24       	eor	r14, r14
    35da:	89 a9       	ldd	r24, Y+49	; 0x31
    35dc:	9a a9       	ldd	r25, Y+50	; 0x32
    35de:	ab a9       	ldd	r26, Y+51	; 0x33
    35e0:	bc a9       	ldd	r27, Y+52	; 0x34
    35e2:	a0 70       	andi	r26, 0x00	; 0
    35e4:	b0 70       	andi	r27, 0x00	; 0
    35e6:	e8 2a       	or	r14, r24
    35e8:	f9 2a       	or	r15, r25
    35ea:	0a 2b       	or	r16, r26
    35ec:	1b 2b       	or	r17, r27
    35ee:	e2 16       	cp	r14, r18
    35f0:	f3 06       	cpc	r15, r19
    35f2:	04 07       	cpc	r16, r20
    35f4:	15 07       	cpc	r17, r21
    35f6:	90 f4       	brcc	.+36     	; 0x361c <__umoddi3+0x680>
    35f8:	e2 0c       	add	r14, r2
    35fa:	f3 1c       	adc	r15, r3
    35fc:	04 1d       	adc	r16, r4
    35fe:	15 1d       	adc	r17, r5
    3600:	e2 14       	cp	r14, r2
    3602:	f3 04       	cpc	r15, r3
    3604:	04 05       	cpc	r16, r4
    3606:	15 05       	cpc	r17, r5
    3608:	48 f0       	brcs	.+18     	; 0x361c <__umoddi3+0x680>
    360a:	e2 16       	cp	r14, r18
    360c:	f3 06       	cpc	r15, r19
    360e:	04 07       	cpc	r16, r20
    3610:	15 07       	cpc	r17, r21
    3612:	20 f4       	brcc	.+8      	; 0x361c <__umoddi3+0x680>
    3614:	e2 0c       	add	r14, r2
    3616:	f3 1c       	adc	r15, r3
    3618:	04 1d       	adc	r16, r4
    361a:	15 1d       	adc	r17, r5
    361c:	e2 1a       	sub	r14, r18
    361e:	f3 0a       	sbc	r15, r19
    3620:	04 0b       	sbc	r16, r20
    3622:	15 0b       	sbc	r17, r21
    3624:	d8 01       	movw	r26, r16
    3626:	c7 01       	movw	r24, r14
    3628:	09 ac       	ldd	r0, Y+57	; 0x39
    362a:	04 c0       	rjmp	.+8      	; 0x3634 <__umoddi3+0x698>
    362c:	b6 95       	lsr	r27
    362e:	a7 95       	ror	r26
    3630:	97 95       	ror	r25
    3632:	87 95       	ror	r24
    3634:	0a 94       	dec	r0
    3636:	d2 f7       	brpl	.-12     	; 0x362c <__umoddi3+0x690>
    3638:	89 8b       	std	Y+17, r24	; 0x11
    363a:	9a 8b       	std	Y+18, r25	; 0x12
    363c:	ab 8b       	std	Y+19, r26	; 0x13
    363e:	bc 8b       	std	Y+20, r27	; 0x14
    3640:	1d 8a       	std	Y+21, r1	; 0x15
    3642:	1e 8a       	std	Y+22, r1	; 0x16
    3644:	1f 8a       	std	Y+23, r1	; 0x17
    3646:	18 8e       	std	Y+24, r1	; 0x18
    3648:	28 2f       	mov	r18, r24
    364a:	3a 89       	ldd	r19, Y+18	; 0x12
    364c:	4b 89       	ldd	r20, Y+19	; 0x13
    364e:	5c 89       	ldd	r21, Y+20	; 0x14
    3650:	6d 89       	ldd	r22, Y+21	; 0x15
    3652:	0c c3       	rjmp	.+1560   	; 0x3c6c <__umoddi3+0xcd0>
    3654:	6a 14       	cp	r6, r10
    3656:	7b 04       	cpc	r7, r11
    3658:	8c 04       	cpc	r8, r12
    365a:	9d 04       	cpc	r9, r13
    365c:	08 f4       	brcc	.+2      	; 0x3660 <__umoddi3+0x6c4>
    365e:	09 c3       	rjmp	.+1554   	; 0x3c72 <__umoddi3+0xcd6>
    3660:	00 e0       	ldi	r16, 0x00	; 0
    3662:	a0 16       	cp	r10, r16
    3664:	00 e0       	ldi	r16, 0x00	; 0
    3666:	b0 06       	cpc	r11, r16
    3668:	01 e0       	ldi	r16, 0x01	; 1
    366a:	c0 06       	cpc	r12, r16
    366c:	00 e0       	ldi	r16, 0x00	; 0
    366e:	d0 06       	cpc	r13, r16
    3670:	88 f4       	brcc	.+34     	; 0x3694 <__umoddi3+0x6f8>
    3672:	1f ef       	ldi	r17, 0xFF	; 255
    3674:	a1 16       	cp	r10, r17
    3676:	b1 04       	cpc	r11, r1
    3678:	c1 04       	cpc	r12, r1
    367a:	d1 04       	cpc	r13, r1
    367c:	39 f0       	breq	.+14     	; 0x368c <__umoddi3+0x6f0>
    367e:	30 f0       	brcs	.+12     	; 0x368c <__umoddi3+0x6f0>
    3680:	28 e0       	ldi	r18, 0x08	; 8
    3682:	e2 2e       	mov	r14, r18
    3684:	f1 2c       	mov	r15, r1
    3686:	01 2d       	mov	r16, r1
    3688:	11 2d       	mov	r17, r1
    368a:	18 c0       	rjmp	.+48     	; 0x36bc <__umoddi3+0x720>
    368c:	ee 24       	eor	r14, r14
    368e:	ff 24       	eor	r15, r15
    3690:	87 01       	movw	r16, r14
    3692:	14 c0       	rjmp	.+40     	; 0x36bc <__umoddi3+0x720>
    3694:	40 e0       	ldi	r20, 0x00	; 0
    3696:	a4 16       	cp	r10, r20
    3698:	40 e0       	ldi	r20, 0x00	; 0
    369a:	b4 06       	cpc	r11, r20
    369c:	40 e0       	ldi	r20, 0x00	; 0
    369e:	c4 06       	cpc	r12, r20
    36a0:	41 e0       	ldi	r20, 0x01	; 1
    36a2:	d4 06       	cpc	r13, r20
    36a4:	30 f0       	brcs	.+12     	; 0x36b2 <__umoddi3+0x716>
    36a6:	98 e1       	ldi	r25, 0x18	; 24
    36a8:	e9 2e       	mov	r14, r25
    36aa:	f1 2c       	mov	r15, r1
    36ac:	01 2d       	mov	r16, r1
    36ae:	11 2d       	mov	r17, r1
    36b0:	05 c0       	rjmp	.+10     	; 0x36bc <__umoddi3+0x720>
    36b2:	80 e1       	ldi	r24, 0x10	; 16
    36b4:	e8 2e       	mov	r14, r24
    36b6:	f1 2c       	mov	r15, r1
    36b8:	01 2d       	mov	r16, r1
    36ba:	11 2d       	mov	r17, r1
    36bc:	d6 01       	movw	r26, r12
    36be:	c5 01       	movw	r24, r10
    36c0:	0e 2c       	mov	r0, r14
    36c2:	04 c0       	rjmp	.+8      	; 0x36cc <__umoddi3+0x730>
    36c4:	b6 95       	lsr	r27
    36c6:	a7 95       	ror	r26
    36c8:	97 95       	ror	r25
    36ca:	87 95       	ror	r24
    36cc:	0a 94       	dec	r0
    36ce:	d2 f7       	brpl	.-12     	; 0x36c4 <__umoddi3+0x728>
    36d0:	8b 51       	subi	r24, 0x1B	; 27
    36d2:	9f 4f       	sbci	r25, 0xFF	; 255
    36d4:	dc 01       	movw	r26, r24
    36d6:	2c 91       	ld	r18, X
    36d8:	80 e2       	ldi	r24, 0x20	; 32
    36da:	90 e0       	ldi	r25, 0x00	; 0
    36dc:	a0 e0       	ldi	r26, 0x00	; 0
    36de:	b0 e0       	ldi	r27, 0x00	; 0
    36e0:	8e 19       	sub	r24, r14
    36e2:	9f 09       	sbc	r25, r15
    36e4:	a0 0b       	sbc	r26, r16
    36e6:	b1 0b       	sbc	r27, r17
    36e8:	82 1b       	sub	r24, r18
    36ea:	91 09       	sbc	r25, r1
    36ec:	a1 09       	sbc	r26, r1
    36ee:	b1 09       	sbc	r27, r1
    36f0:	00 97       	sbiw	r24, 0x00	; 0
    36f2:	a1 05       	cpc	r26, r1
    36f4:	b1 05       	cpc	r27, r1
    36f6:	09 f0       	breq	.+2      	; 0x36fa <__umoddi3+0x75e>
    36f8:	4f c0       	rjmp	.+158    	; 0x3798 <__umoddi3+0x7fc>
    36fa:	a6 14       	cp	r10, r6
    36fc:	b7 04       	cpc	r11, r7
    36fe:	c8 04       	cpc	r12, r8
    3700:	d9 04       	cpc	r13, r9
    3702:	58 f0       	brcs	.+22     	; 0x371a <__umoddi3+0x77e>
    3704:	6c 96       	adiw	r28, 0x1c	; 28
    3706:	ec ac       	ldd	r14, Y+60	; 0x3c
    3708:	fd ac       	ldd	r15, Y+61	; 0x3d
    370a:	0e ad       	ldd	r16, Y+62	; 0x3e
    370c:	1f ad       	ldd	r17, Y+63	; 0x3f
    370e:	6c 97       	sbiw	r28, 0x1c	; 28
    3710:	e2 14       	cp	r14, r2
    3712:	f3 04       	cpc	r15, r3
    3714:	04 05       	cpc	r16, r4
    3716:	15 05       	cpc	r17, r5
    3718:	68 f1       	brcs	.+90     	; 0x3774 <__umoddi3+0x7d8>
    371a:	6c 96       	adiw	r28, 0x1c	; 28
    371c:	ec ac       	ldd	r14, Y+60	; 0x3c
    371e:	fd ac       	ldd	r15, Y+61	; 0x3d
    3720:	0e ad       	ldd	r16, Y+62	; 0x3e
    3722:	1f ad       	ldd	r17, Y+63	; 0x3f
    3724:	6c 97       	sbiw	r28, 0x1c	; 28
    3726:	e2 18       	sub	r14, r2
    3728:	f3 08       	sbc	r15, r3
    372a:	04 09       	sbc	r16, r4
    372c:	15 09       	sbc	r17, r5
    372e:	a4 01       	movw	r20, r8
    3730:	93 01       	movw	r18, r6
    3732:	2a 19       	sub	r18, r10
    3734:	3b 09       	sbc	r19, r11
    3736:	4c 09       	sbc	r20, r12
    3738:	5d 09       	sbc	r21, r13
    373a:	aa 24       	eor	r10, r10
    373c:	bb 24       	eor	r11, r11
    373e:	65 01       	movw	r12, r10
    3740:	6c 96       	adiw	r28, 0x1c	; 28
    3742:	6c ad       	ldd	r22, Y+60	; 0x3c
    3744:	7d ad       	ldd	r23, Y+61	; 0x3d
    3746:	8e ad       	ldd	r24, Y+62	; 0x3e
    3748:	9f ad       	ldd	r25, Y+63	; 0x3f
    374a:	6c 97       	sbiw	r28, 0x1c	; 28
    374c:	6e 15       	cp	r22, r14
    374e:	7f 05       	cpc	r23, r15
    3750:	80 07       	cpc	r24, r16
    3752:	91 07       	cpc	r25, r17
    3754:	28 f4       	brcc	.+10     	; 0x3760 <__umoddi3+0x7c4>
    3756:	b1 e0       	ldi	r27, 0x01	; 1
    3758:	ab 2e       	mov	r10, r27
    375a:	b1 2c       	mov	r11, r1
    375c:	c1 2c       	mov	r12, r1
    375e:	d1 2c       	mov	r13, r1
    3760:	da 01       	movw	r26, r20
    3762:	c9 01       	movw	r24, r18
    3764:	8a 19       	sub	r24, r10
    3766:	9b 09       	sbc	r25, r11
    3768:	ac 09       	sbc	r26, r12
    376a:	bd 09       	sbc	r27, r13
    376c:	8d ab       	std	Y+53, r24	; 0x35
    376e:	9e ab       	std	Y+54, r25	; 0x36
    3770:	af ab       	std	Y+55, r26	; 0x37
    3772:	b8 af       	std	Y+56, r27	; 0x38
    3774:	e9 8a       	std	Y+17, r14	; 0x11
    3776:	fa 8a       	std	Y+18, r15	; 0x12
    3778:	0b 8b       	std	Y+19, r16	; 0x13
    377a:	1c 8b       	std	Y+20, r17	; 0x14
    377c:	6d a8       	ldd	r6, Y+53	; 0x35
    377e:	7e a8       	ldd	r7, Y+54	; 0x36
    3780:	8f a8       	ldd	r8, Y+55	; 0x37
    3782:	98 ac       	ldd	r9, Y+56	; 0x38
    3784:	6d 8a       	std	Y+21, r6	; 0x15
    3786:	7e 8a       	std	Y+22, r7	; 0x16
    3788:	8f 8a       	std	Y+23, r8	; 0x17
    378a:	98 8e       	std	Y+24, r9	; 0x18
    378c:	2e 2d       	mov	r18, r14
    378e:	3a 89       	ldd	r19, Y+18	; 0x12
    3790:	4b 89       	ldd	r20, Y+19	; 0x13
    3792:	5c 89       	ldd	r21, Y+20	; 0x14
    3794:	6d a9       	ldd	r22, Y+53	; 0x35
    3796:	6a c2       	rjmp	.+1236   	; 0x3c6c <__umoddi3+0xcd0>
    3798:	67 96       	adiw	r28, 0x17	; 23
    379a:	8f af       	std	Y+63, r24	; 0x3f
    379c:	67 97       	sbiw	r28, 0x17	; 23
    379e:	a6 01       	movw	r20, r12
    37a0:	95 01       	movw	r18, r10
    37a2:	08 2e       	mov	r0, r24
    37a4:	04 c0       	rjmp	.+8      	; 0x37ae <__umoddi3+0x812>
    37a6:	22 0f       	add	r18, r18
    37a8:	33 1f       	adc	r19, r19
    37aa:	44 1f       	adc	r20, r20
    37ac:	55 1f       	adc	r21, r21
    37ae:	0a 94       	dec	r0
    37b0:	d2 f7       	brpl	.-12     	; 0x37a6 <__umoddi3+0x80a>
    37b2:	a0 e2       	ldi	r26, 0x20	; 32
    37b4:	aa 2e       	mov	r10, r26
    37b6:	a8 1a       	sub	r10, r24
    37b8:	66 96       	adiw	r28, 0x16	; 22
    37ba:	af ae       	std	Y+63, r10	; 0x3f
    37bc:	66 97       	sbiw	r28, 0x16	; 22
    37be:	d2 01       	movw	r26, r4
    37c0:	c1 01       	movw	r24, r2
    37c2:	04 c0       	rjmp	.+8      	; 0x37cc <__umoddi3+0x830>
    37c4:	b6 95       	lsr	r27
    37c6:	a7 95       	ror	r26
    37c8:	97 95       	ror	r25
    37ca:	87 95       	ror	r24
    37cc:	aa 94       	dec	r10
    37ce:	d2 f7       	brpl	.-12     	; 0x37c4 <__umoddi3+0x828>
    37d0:	6c 01       	movw	r12, r24
    37d2:	7d 01       	movw	r14, r26
    37d4:	c2 2a       	or	r12, r18
    37d6:	d3 2a       	or	r13, r19
    37d8:	e4 2a       	or	r14, r20
    37da:	f5 2a       	or	r15, r21
    37dc:	c9 a6       	std	Y+41, r12	; 0x29
    37de:	da a6       	std	Y+42, r13	; 0x2a
    37e0:	eb a6       	std	Y+43, r14	; 0x2b
    37e2:	fc a6       	std	Y+44, r15	; 0x2c
    37e4:	82 01       	movw	r16, r4
    37e6:	71 01       	movw	r14, r2
    37e8:	67 96       	adiw	r28, 0x17	; 23
    37ea:	0f ac       	ldd	r0, Y+63	; 0x3f
    37ec:	67 97       	sbiw	r28, 0x17	; 23
    37ee:	04 c0       	rjmp	.+8      	; 0x37f8 <__umoddi3+0x85c>
    37f0:	ee 0c       	add	r14, r14
    37f2:	ff 1c       	adc	r15, r15
    37f4:	00 1f       	adc	r16, r16
    37f6:	11 1f       	adc	r17, r17
    37f8:	0a 94       	dec	r0
    37fa:	d2 f7       	brpl	.-12     	; 0x37f0 <__umoddi3+0x854>
    37fc:	ed a2       	std	Y+37, r14	; 0x25
    37fe:	fe a2       	std	Y+38, r15	; 0x26
    3800:	0f a3       	std	Y+39, r16	; 0x27
    3802:	18 a7       	std	Y+40, r17	; 0x28
    3804:	64 01       	movw	r12, r8
    3806:	53 01       	movw	r10, r6
    3808:	66 96       	adiw	r28, 0x16	; 22
    380a:	0f ac       	ldd	r0, Y+63	; 0x3f
    380c:	66 97       	sbiw	r28, 0x16	; 22
    380e:	04 c0       	rjmp	.+8      	; 0x3818 <__umoddi3+0x87c>
    3810:	d6 94       	lsr	r13
    3812:	c7 94       	ror	r12
    3814:	b7 94       	ror	r11
    3816:	a7 94       	ror	r10
    3818:	0a 94       	dec	r0
    381a:	d2 f7       	brpl	.-12     	; 0x3810 <__umoddi3+0x874>
    381c:	a4 01       	movw	r20, r8
    381e:	93 01       	movw	r18, r6
    3820:	67 96       	adiw	r28, 0x17	; 23
    3822:	0f ac       	ldd	r0, Y+63	; 0x3f
    3824:	67 97       	sbiw	r28, 0x17	; 23
    3826:	04 c0       	rjmp	.+8      	; 0x3830 <__umoddi3+0x894>
    3828:	22 0f       	add	r18, r18
    382a:	33 1f       	adc	r19, r19
    382c:	44 1f       	adc	r20, r20
    382e:	55 1f       	adc	r21, r21
    3830:	0a 94       	dec	r0
    3832:	d2 f7       	brpl	.-12     	; 0x3828 <__umoddi3+0x88c>
    3834:	6c 96       	adiw	r28, 0x1c	; 28
    3836:	8c ad       	ldd	r24, Y+60	; 0x3c
    3838:	9d ad       	ldd	r25, Y+61	; 0x3d
    383a:	ae ad       	ldd	r26, Y+62	; 0x3e
    383c:	bf ad       	ldd	r27, Y+63	; 0x3f
    383e:	6c 97       	sbiw	r28, 0x1c	; 28
    3840:	66 96       	adiw	r28, 0x16	; 22
    3842:	0f ac       	ldd	r0, Y+63	; 0x3f
    3844:	66 97       	sbiw	r28, 0x16	; 22
    3846:	04 c0       	rjmp	.+8      	; 0x3850 <__umoddi3+0x8b4>
    3848:	b6 95       	lsr	r27
    384a:	a7 95       	ror	r26
    384c:	97 95       	ror	r25
    384e:	87 95       	ror	r24
    3850:	0a 94       	dec	r0
    3852:	d2 f7       	brpl	.-12     	; 0x3848 <__umoddi3+0x8ac>
    3854:	3c 01       	movw	r6, r24
    3856:	4d 01       	movw	r8, r26
    3858:	62 2a       	or	r6, r18
    385a:	73 2a       	or	r7, r19
    385c:	84 2a       	or	r8, r20
    385e:	95 2a       	or	r9, r21
    3860:	69 a2       	std	Y+33, r6	; 0x21
    3862:	7a a2       	std	Y+34, r7	; 0x22
    3864:	8b a2       	std	Y+35, r8	; 0x23
    3866:	9c a2       	std	Y+36, r9	; 0x24
    3868:	6c 96       	adiw	r28, 0x1c	; 28
    386a:	ec ac       	ldd	r14, Y+60	; 0x3c
    386c:	fd ac       	ldd	r15, Y+61	; 0x3d
    386e:	0e ad       	ldd	r16, Y+62	; 0x3e
    3870:	1f ad       	ldd	r17, Y+63	; 0x3f
    3872:	6c 97       	sbiw	r28, 0x1c	; 28
    3874:	67 96       	adiw	r28, 0x17	; 23
    3876:	0f ac       	ldd	r0, Y+63	; 0x3f
    3878:	67 97       	sbiw	r28, 0x17	; 23
    387a:	04 c0       	rjmp	.+8      	; 0x3884 <__umoddi3+0x8e8>
    387c:	ee 0c       	add	r14, r14
    387e:	ff 1c       	adc	r15, r15
    3880:	00 1f       	adc	r16, r16
    3882:	11 1f       	adc	r17, r17
    3884:	0a 94       	dec	r0
    3886:	d2 f7       	brpl	.-12     	; 0x387c <__umoddi3+0x8e0>
    3888:	ed 8e       	std	Y+29, r14	; 0x1d
    388a:	fe 8e       	std	Y+30, r15	; 0x1e
    388c:	0f 8f       	std	Y+31, r16	; 0x1f
    388e:	18 a3       	std	Y+32, r17	; 0x20
    3890:	49 a5       	ldd	r20, Y+41	; 0x29
    3892:	5a a5       	ldd	r21, Y+42	; 0x2a
    3894:	6b a5       	ldd	r22, Y+43	; 0x2b
    3896:	7c a5       	ldd	r23, Y+44	; 0x2c
    3898:	3b 01       	movw	r6, r22
    389a:	88 24       	eor	r8, r8
    389c:	99 24       	eor	r9, r9
    389e:	60 70       	andi	r22, 0x00	; 0
    38a0:	70 70       	andi	r23, 0x00	; 0
    38a2:	2d 96       	adiw	r28, 0x0d	; 13
    38a4:	4c af       	std	Y+60, r20	; 0x3c
    38a6:	5d af       	std	Y+61, r21	; 0x3d
    38a8:	6e af       	std	Y+62, r22	; 0x3e
    38aa:	7f af       	std	Y+63, r23	; 0x3f
    38ac:	2d 97       	sbiw	r28, 0x0d	; 13
    38ae:	c6 01       	movw	r24, r12
    38b0:	b5 01       	movw	r22, r10
    38b2:	a4 01       	movw	r20, r8
    38b4:	93 01       	movw	r18, r6
    38b6:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    38ba:	7b 01       	movw	r14, r22
    38bc:	8c 01       	movw	r16, r24
    38be:	c6 01       	movw	r24, r12
    38c0:	b5 01       	movw	r22, r10
    38c2:	a4 01       	movw	r20, r8
    38c4:	93 01       	movw	r18, r6
    38c6:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    38ca:	c9 01       	movw	r24, r18
    38cc:	da 01       	movw	r26, r20
    38ce:	1c 01       	movw	r2, r24
    38d0:	2d 01       	movw	r4, r26
    38d2:	c2 01       	movw	r24, r4
    38d4:	b1 01       	movw	r22, r2
    38d6:	2d 96       	adiw	r28, 0x0d	; 13
    38d8:	2c ad       	ldd	r18, Y+60	; 0x3c
    38da:	3d ad       	ldd	r19, Y+61	; 0x3d
    38dc:	4e ad       	ldd	r20, Y+62	; 0x3e
    38de:	5f ad       	ldd	r21, Y+63	; 0x3f
    38e0:	2d 97       	sbiw	r28, 0x0d	; 13
    38e2:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    38e6:	9b 01       	movw	r18, r22
    38e8:	ac 01       	movw	r20, r24
    38ea:	87 01       	movw	r16, r14
    38ec:	ff 24       	eor	r15, r15
    38ee:	ee 24       	eor	r14, r14
    38f0:	a9 a0       	ldd	r10, Y+33	; 0x21
    38f2:	ba a0       	ldd	r11, Y+34	; 0x22
    38f4:	cb a0       	ldd	r12, Y+35	; 0x23
    38f6:	dc a0       	ldd	r13, Y+36	; 0x24
    38f8:	c6 01       	movw	r24, r12
    38fa:	aa 27       	eor	r26, r26
    38fc:	bb 27       	eor	r27, r27
    38fe:	57 01       	movw	r10, r14
    3900:	68 01       	movw	r12, r16
    3902:	a8 2a       	or	r10, r24
    3904:	b9 2a       	or	r11, r25
    3906:	ca 2a       	or	r12, r26
    3908:	db 2a       	or	r13, r27
    390a:	a2 16       	cp	r10, r18
    390c:	b3 06       	cpc	r11, r19
    390e:	c4 06       	cpc	r12, r20
    3910:	d5 06       	cpc	r13, r21
    3912:	00 f5       	brcc	.+64     	; 0x3954 <__umoddi3+0x9b8>
    3914:	08 94       	sec
    3916:	21 08       	sbc	r2, r1
    3918:	31 08       	sbc	r3, r1
    391a:	41 08       	sbc	r4, r1
    391c:	51 08       	sbc	r5, r1
    391e:	e9 a4       	ldd	r14, Y+41	; 0x29
    3920:	fa a4       	ldd	r15, Y+42	; 0x2a
    3922:	0b a5       	ldd	r16, Y+43	; 0x2b
    3924:	1c a5       	ldd	r17, Y+44	; 0x2c
    3926:	ae 0c       	add	r10, r14
    3928:	bf 1c       	adc	r11, r15
    392a:	c0 1e       	adc	r12, r16
    392c:	d1 1e       	adc	r13, r17
    392e:	ae 14       	cp	r10, r14
    3930:	bf 04       	cpc	r11, r15
    3932:	c0 06       	cpc	r12, r16
    3934:	d1 06       	cpc	r13, r17
    3936:	70 f0       	brcs	.+28     	; 0x3954 <__umoddi3+0x9b8>
    3938:	a2 16       	cp	r10, r18
    393a:	b3 06       	cpc	r11, r19
    393c:	c4 06       	cpc	r12, r20
    393e:	d5 06       	cpc	r13, r21
    3940:	48 f4       	brcc	.+18     	; 0x3954 <__umoddi3+0x9b8>
    3942:	08 94       	sec
    3944:	21 08       	sbc	r2, r1
    3946:	31 08       	sbc	r3, r1
    3948:	41 08       	sbc	r4, r1
    394a:	51 08       	sbc	r5, r1
    394c:	ae 0c       	add	r10, r14
    394e:	bf 1c       	adc	r11, r15
    3950:	c0 1e       	adc	r12, r16
    3952:	d1 1e       	adc	r13, r17
    3954:	a2 1a       	sub	r10, r18
    3956:	b3 0a       	sbc	r11, r19
    3958:	c4 0a       	sbc	r12, r20
    395a:	d5 0a       	sbc	r13, r21
    395c:	c6 01       	movw	r24, r12
    395e:	b5 01       	movw	r22, r10
    3960:	a4 01       	movw	r20, r8
    3962:	93 01       	movw	r18, r6
    3964:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    3968:	7b 01       	movw	r14, r22
    396a:	8c 01       	movw	r16, r24
    396c:	c6 01       	movw	r24, r12
    396e:	b5 01       	movw	r22, r10
    3970:	a4 01       	movw	r20, r8
    3972:	93 01       	movw	r18, r6
    3974:	0e 94 53 34 	call	0x68a6	; 0x68a6 <__udivmodsi4>
    3978:	c9 01       	movw	r24, r18
    397a:	da 01       	movw	r26, r20
    397c:	3c 01       	movw	r6, r24
    397e:	4d 01       	movw	r8, r26
    3980:	c4 01       	movw	r24, r8
    3982:	b3 01       	movw	r22, r6
    3984:	2d 96       	adiw	r28, 0x0d	; 13
    3986:	2c ad       	ldd	r18, Y+60	; 0x3c
    3988:	3d ad       	ldd	r19, Y+61	; 0x3d
    398a:	4e ad       	ldd	r20, Y+62	; 0x3e
    398c:	5f ad       	ldd	r21, Y+63	; 0x3f
    398e:	2d 97       	sbiw	r28, 0x0d	; 13
    3990:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    3994:	9b 01       	movw	r18, r22
    3996:	ac 01       	movw	r20, r24
    3998:	87 01       	movw	r16, r14
    399a:	ff 24       	eor	r15, r15
    399c:	ee 24       	eor	r14, r14
    399e:	89 a1       	ldd	r24, Y+33	; 0x21
    39a0:	9a a1       	ldd	r25, Y+34	; 0x22
    39a2:	ab a1       	ldd	r26, Y+35	; 0x23
    39a4:	bc a1       	ldd	r27, Y+36	; 0x24
    39a6:	a0 70       	andi	r26, 0x00	; 0
    39a8:	b0 70       	andi	r27, 0x00	; 0
    39aa:	57 01       	movw	r10, r14
    39ac:	68 01       	movw	r12, r16
    39ae:	a8 2a       	or	r10, r24
    39b0:	b9 2a       	or	r11, r25
    39b2:	ca 2a       	or	r12, r26
    39b4:	db 2a       	or	r13, r27
    39b6:	a2 16       	cp	r10, r18
    39b8:	b3 06       	cpc	r11, r19
    39ba:	c4 06       	cpc	r12, r20
    39bc:	d5 06       	cpc	r13, r21
    39be:	00 f5       	brcc	.+64     	; 0x3a00 <__umoddi3+0xa64>
    39c0:	08 94       	sec
    39c2:	61 08       	sbc	r6, r1
    39c4:	71 08       	sbc	r7, r1
    39c6:	81 08       	sbc	r8, r1
    39c8:	91 08       	sbc	r9, r1
    39ca:	69 a5       	ldd	r22, Y+41	; 0x29
    39cc:	7a a5       	ldd	r23, Y+42	; 0x2a
    39ce:	8b a5       	ldd	r24, Y+43	; 0x2b
    39d0:	9c a5       	ldd	r25, Y+44	; 0x2c
    39d2:	a6 0e       	add	r10, r22
    39d4:	b7 1e       	adc	r11, r23
    39d6:	c8 1e       	adc	r12, r24
    39d8:	d9 1e       	adc	r13, r25
    39da:	a6 16       	cp	r10, r22
    39dc:	b7 06       	cpc	r11, r23
    39de:	c8 06       	cpc	r12, r24
    39e0:	d9 06       	cpc	r13, r25
    39e2:	70 f0       	brcs	.+28     	; 0x3a00 <__umoddi3+0xa64>
    39e4:	a2 16       	cp	r10, r18
    39e6:	b3 06       	cpc	r11, r19
    39e8:	c4 06       	cpc	r12, r20
    39ea:	d5 06       	cpc	r13, r21
    39ec:	48 f4       	brcc	.+18     	; 0x3a00 <__umoddi3+0xa64>
    39ee:	08 94       	sec
    39f0:	61 08       	sbc	r6, r1
    39f2:	71 08       	sbc	r7, r1
    39f4:	81 08       	sbc	r8, r1
    39f6:	91 08       	sbc	r9, r1
    39f8:	a6 0e       	add	r10, r22
    39fa:	b7 1e       	adc	r11, r23
    39fc:	c8 1e       	adc	r12, r24
    39fe:	d9 1e       	adc	r13, r25
    3a00:	d6 01       	movw	r26, r12
    3a02:	c5 01       	movw	r24, r10
    3a04:	82 1b       	sub	r24, r18
    3a06:	93 0b       	sbc	r25, r19
    3a08:	a4 0b       	sbc	r26, r20
    3a0a:	b5 0b       	sbc	r27, r21
    3a0c:	89 8f       	std	Y+25, r24	; 0x19
    3a0e:	9a 8f       	std	Y+26, r25	; 0x1a
    3a10:	ab 8f       	std	Y+27, r26	; 0x1b
    3a12:	bc 8f       	std	Y+28, r27	; 0x1c
    3a14:	d1 01       	movw	r26, r2
    3a16:	99 27       	eor	r25, r25
    3a18:	88 27       	eor	r24, r24
    3a1a:	84 01       	movw	r16, r8
    3a1c:	73 01       	movw	r14, r6
    3a1e:	e8 2a       	or	r14, r24
    3a20:	f9 2a       	or	r15, r25
    3a22:	0a 2b       	or	r16, r26
    3a24:	1b 2b       	or	r17, r27
    3a26:	4f ef       	ldi	r20, 0xFF	; 255
    3a28:	a4 2e       	mov	r10, r20
    3a2a:	4f ef       	ldi	r20, 0xFF	; 255
    3a2c:	b4 2e       	mov	r11, r20
    3a2e:	c1 2c       	mov	r12, r1
    3a30:	d1 2c       	mov	r13, r1
    3a32:	ae 20       	and	r10, r14
    3a34:	bf 20       	and	r11, r15
    3a36:	c0 22       	and	r12, r16
    3a38:	d1 22       	and	r13, r17
    3a3a:	78 01       	movw	r14, r16
    3a3c:	00 27       	eor	r16, r16
    3a3e:	11 27       	eor	r17, r17
    3a40:	6d a0       	ldd	r6, Y+37	; 0x25
    3a42:	7e a0       	ldd	r7, Y+38	; 0x26
    3a44:	8f a0       	ldd	r8, Y+39	; 0x27
    3a46:	98 a4       	ldd	r9, Y+40	; 0x28
    3a48:	4f ef       	ldi	r20, 0xFF	; 255
    3a4a:	5f ef       	ldi	r21, 0xFF	; 255
    3a4c:	60 e0       	ldi	r22, 0x00	; 0
    3a4e:	70 e0       	ldi	r23, 0x00	; 0
    3a50:	64 22       	and	r6, r20
    3a52:	75 22       	and	r7, r21
    3a54:	86 22       	and	r8, r22
    3a56:	97 22       	and	r9, r23
    3a58:	8d a1       	ldd	r24, Y+37	; 0x25
    3a5a:	9e a1       	ldd	r25, Y+38	; 0x26
    3a5c:	af a1       	ldd	r26, Y+39	; 0x27
    3a5e:	b8 a5       	ldd	r27, Y+40	; 0x28
    3a60:	bd 01       	movw	r22, r26
    3a62:	88 27       	eor	r24, r24
    3a64:	99 27       	eor	r25, r25
    3a66:	65 96       	adiw	r28, 0x15	; 21
    3a68:	6c af       	std	Y+60, r22	; 0x3c
    3a6a:	7d af       	std	Y+61, r23	; 0x3d
    3a6c:	8e af       	std	Y+62, r24	; 0x3e
    3a6e:	9f af       	std	Y+63, r25	; 0x3f
    3a70:	65 97       	sbiw	r28, 0x15	; 21
    3a72:	c6 01       	movw	r24, r12
    3a74:	b5 01       	movw	r22, r10
    3a76:	a4 01       	movw	r20, r8
    3a78:	93 01       	movw	r18, r6
    3a7a:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    3a7e:	61 96       	adiw	r28, 0x11	; 17
    3a80:	6c af       	std	Y+60, r22	; 0x3c
    3a82:	7d af       	std	Y+61, r23	; 0x3d
    3a84:	8e af       	std	Y+62, r24	; 0x3e
    3a86:	9f af       	std	Y+63, r25	; 0x3f
    3a88:	61 97       	sbiw	r28, 0x11	; 17
    3a8a:	c6 01       	movw	r24, r12
    3a8c:	b5 01       	movw	r22, r10
    3a8e:	65 96       	adiw	r28, 0x15	; 21
    3a90:	2c ad       	ldd	r18, Y+60	; 0x3c
    3a92:	3d ad       	ldd	r19, Y+61	; 0x3d
    3a94:	4e ad       	ldd	r20, Y+62	; 0x3e
    3a96:	5f ad       	ldd	r21, Y+63	; 0x3f
    3a98:	65 97       	sbiw	r28, 0x15	; 21
    3a9a:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    3a9e:	1b 01       	movw	r2, r22
    3aa0:	2c 01       	movw	r4, r24
    3aa2:	c8 01       	movw	r24, r16
    3aa4:	b7 01       	movw	r22, r14
    3aa6:	a4 01       	movw	r20, r8
    3aa8:	93 01       	movw	r18, r6
    3aaa:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    3aae:	5b 01       	movw	r10, r22
    3ab0:	6c 01       	movw	r12, r24
    3ab2:	c8 01       	movw	r24, r16
    3ab4:	b7 01       	movw	r22, r14
    3ab6:	65 96       	adiw	r28, 0x15	; 21
    3ab8:	2c ad       	ldd	r18, Y+60	; 0x3c
    3aba:	3d ad       	ldd	r19, Y+61	; 0x3d
    3abc:	4e ad       	ldd	r20, Y+62	; 0x3e
    3abe:	5f ad       	ldd	r21, Y+63	; 0x3f
    3ac0:	65 97       	sbiw	r28, 0x15	; 21
    3ac2:	0e 94 34 34 	call	0x6868	; 0x6868 <__mulsi3>
    3ac6:	7b 01       	movw	r14, r22
    3ac8:	8c 01       	movw	r16, r24
    3aca:	a6 01       	movw	r20, r12
    3acc:	95 01       	movw	r18, r10
    3ace:	22 0d       	add	r18, r2
    3ad0:	33 1d       	adc	r19, r3
    3ad2:	44 1d       	adc	r20, r4
    3ad4:	55 1d       	adc	r21, r5
    3ad6:	61 96       	adiw	r28, 0x11	; 17
    3ad8:	6c ac       	ldd	r6, Y+60	; 0x3c
    3ada:	7d ac       	ldd	r7, Y+61	; 0x3d
    3adc:	8e ac       	ldd	r8, Y+62	; 0x3e
    3ade:	9f ac       	ldd	r9, Y+63	; 0x3f
    3ae0:	61 97       	sbiw	r28, 0x11	; 17
    3ae2:	c4 01       	movw	r24, r8
    3ae4:	aa 27       	eor	r26, r26
    3ae6:	bb 27       	eor	r27, r27
    3ae8:	28 0f       	add	r18, r24
    3aea:	39 1f       	adc	r19, r25
    3aec:	4a 1f       	adc	r20, r26
    3aee:	5b 1f       	adc	r21, r27
    3af0:	2a 15       	cp	r18, r10
    3af2:	3b 05       	cpc	r19, r11
    3af4:	4c 05       	cpc	r20, r12
    3af6:	5d 05       	cpc	r21, r13
    3af8:	48 f4       	brcc	.+18     	; 0x3b0c <__umoddi3+0xb70>
    3afa:	81 2c       	mov	r8, r1
    3afc:	91 2c       	mov	r9, r1
    3afe:	e1 e0       	ldi	r30, 0x01	; 1
    3b00:	ae 2e       	mov	r10, r30
    3b02:	b1 2c       	mov	r11, r1
    3b04:	e8 0c       	add	r14, r8
    3b06:	f9 1c       	adc	r15, r9
    3b08:	0a 1d       	adc	r16, r10
    3b0a:	1b 1d       	adc	r17, r11
    3b0c:	ca 01       	movw	r24, r20
    3b0e:	aa 27       	eor	r26, r26
    3b10:	bb 27       	eor	r27, r27
    3b12:	57 01       	movw	r10, r14
    3b14:	68 01       	movw	r12, r16
    3b16:	a8 0e       	add	r10, r24
    3b18:	b9 1e       	adc	r11, r25
    3b1a:	ca 1e       	adc	r12, r26
    3b1c:	db 1e       	adc	r13, r27
    3b1e:	a9 01       	movw	r20, r18
    3b20:	33 27       	eor	r19, r19
    3b22:	22 27       	eor	r18, r18
    3b24:	61 96       	adiw	r28, 0x11	; 17
    3b26:	8c ad       	ldd	r24, Y+60	; 0x3c
    3b28:	9d ad       	ldd	r25, Y+61	; 0x3d
    3b2a:	ae ad       	ldd	r26, Y+62	; 0x3e
    3b2c:	bf ad       	ldd	r27, Y+63	; 0x3f
    3b2e:	61 97       	sbiw	r28, 0x11	; 17
    3b30:	a0 70       	andi	r26, 0x00	; 0
    3b32:	b0 70       	andi	r27, 0x00	; 0
    3b34:	28 0f       	add	r18, r24
    3b36:	39 1f       	adc	r19, r25
    3b38:	4a 1f       	adc	r20, r26
    3b3a:	5b 1f       	adc	r21, r27
    3b3c:	e9 8c       	ldd	r14, Y+25	; 0x19
    3b3e:	fa 8c       	ldd	r15, Y+26	; 0x1a
    3b40:	0b 8d       	ldd	r16, Y+27	; 0x1b
    3b42:	1c 8d       	ldd	r17, Y+28	; 0x1c
    3b44:	ea 14       	cp	r14, r10
    3b46:	fb 04       	cpc	r15, r11
    3b48:	0c 05       	cpc	r16, r12
    3b4a:	1d 05       	cpc	r17, r13
    3b4c:	70 f0       	brcs	.+28     	; 0x3b6a <__umoddi3+0xbce>
    3b4e:	ae 14       	cp	r10, r14
    3b50:	bf 04       	cpc	r11, r15
    3b52:	c0 06       	cpc	r12, r16
    3b54:	d1 06       	cpc	r13, r17
    3b56:	69 f5       	brne	.+90     	; 0x3bb2 <__umoddi3+0xc16>
    3b58:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3b5a:	7e 8d       	ldd	r23, Y+30	; 0x1e
    3b5c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3b5e:	98 a1       	ldd	r25, Y+32	; 0x20
    3b60:	62 17       	cp	r22, r18
    3b62:	73 07       	cpc	r23, r19
    3b64:	84 07       	cpc	r24, r20
    3b66:	95 07       	cpc	r25, r21
    3b68:	20 f5       	brcc	.+72     	; 0x3bb2 <__umoddi3+0xc16>
    3b6a:	da 01       	movw	r26, r20
    3b6c:	c9 01       	movw	r24, r18
    3b6e:	6d a0       	ldd	r6, Y+37	; 0x25
    3b70:	7e a0       	ldd	r7, Y+38	; 0x26
    3b72:	8f a0       	ldd	r8, Y+39	; 0x27
    3b74:	98 a4       	ldd	r9, Y+40	; 0x28
    3b76:	86 19       	sub	r24, r6
    3b78:	97 09       	sbc	r25, r7
    3b7a:	a8 09       	sbc	r26, r8
    3b7c:	b9 09       	sbc	r27, r9
    3b7e:	e9 a4       	ldd	r14, Y+41	; 0x29
    3b80:	fa a4       	ldd	r15, Y+42	; 0x2a
    3b82:	0b a5       	ldd	r16, Y+43	; 0x2b
    3b84:	1c a5       	ldd	r17, Y+44	; 0x2c
    3b86:	ae 18       	sub	r10, r14
    3b88:	bf 08       	sbc	r11, r15
    3b8a:	c0 0a       	sbc	r12, r16
    3b8c:	d1 0a       	sbc	r13, r17
    3b8e:	ee 24       	eor	r14, r14
    3b90:	ff 24       	eor	r15, r15
    3b92:	87 01       	movw	r16, r14
    3b94:	28 17       	cp	r18, r24
    3b96:	39 07       	cpc	r19, r25
    3b98:	4a 07       	cpc	r20, r26
    3b9a:	5b 07       	cpc	r21, r27
    3b9c:	28 f4       	brcc	.+10     	; 0x3ba8 <__umoddi3+0xc0c>
    3b9e:	21 e0       	ldi	r18, 0x01	; 1
    3ba0:	e2 2e       	mov	r14, r18
    3ba2:	f1 2c       	mov	r15, r1
    3ba4:	01 2d       	mov	r16, r1
    3ba6:	11 2d       	mov	r17, r1
    3ba8:	ae 18       	sub	r10, r14
    3baa:	bf 08       	sbc	r11, r15
    3bac:	c0 0a       	sbc	r12, r16
    3bae:	d1 0a       	sbc	r13, r17
    3bb0:	02 c0       	rjmp	.+4      	; 0x3bb6 <__umoddi3+0xc1a>
    3bb2:	da 01       	movw	r26, r20
    3bb4:	c9 01       	movw	r24, r18
    3bb6:	6d 8c       	ldd	r6, Y+29	; 0x1d
    3bb8:	7e 8c       	ldd	r7, Y+30	; 0x1e
    3bba:	8f 8c       	ldd	r8, Y+31	; 0x1f
    3bbc:	98 a0       	ldd	r9, Y+32	; 0x20
    3bbe:	68 1a       	sub	r6, r24
    3bc0:	79 0a       	sbc	r7, r25
    3bc2:	8a 0a       	sbc	r8, r26
    3bc4:	9b 0a       	sbc	r9, r27
    3bc6:	49 8d       	ldd	r20, Y+25	; 0x19
    3bc8:	5a 8d       	ldd	r21, Y+26	; 0x1a
    3bca:	6b 8d       	ldd	r22, Y+27	; 0x1b
    3bcc:	7c 8d       	ldd	r23, Y+28	; 0x1c
    3bce:	4a 19       	sub	r20, r10
    3bd0:	5b 09       	sbc	r21, r11
    3bd2:	6c 09       	sbc	r22, r12
    3bd4:	7d 09       	sbc	r23, r13
    3bd6:	5a 01       	movw	r10, r20
    3bd8:	6b 01       	movw	r12, r22
    3bda:	22 24       	eor	r2, r2
    3bdc:	33 24       	eor	r3, r3
    3bde:	21 01       	movw	r4, r2
    3be0:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3be2:	7e 8d       	ldd	r23, Y+30	; 0x1e
    3be4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3be6:	98 a1       	ldd	r25, Y+32	; 0x20
    3be8:	66 15       	cp	r22, r6
    3bea:	77 05       	cpc	r23, r7
    3bec:	88 05       	cpc	r24, r8
    3bee:	99 05       	cpc	r25, r9
    3bf0:	28 f4       	brcc	.+10     	; 0x3bfc <__umoddi3+0xc60>
    3bf2:	81 e0       	ldi	r24, 0x01	; 1
    3bf4:	28 2e       	mov	r2, r24
    3bf6:	31 2c       	mov	r3, r1
    3bf8:	41 2c       	mov	r4, r1
    3bfa:	51 2c       	mov	r5, r1
    3bfc:	86 01       	movw	r16, r12
    3bfe:	75 01       	movw	r14, r10
    3c00:	e2 18       	sub	r14, r2
    3c02:	f3 08       	sbc	r15, r3
    3c04:	04 09       	sbc	r16, r4
    3c06:	15 09       	sbc	r17, r5
    3c08:	a8 01       	movw	r20, r16
    3c0a:	97 01       	movw	r18, r14
    3c0c:	66 96       	adiw	r28, 0x16	; 22
    3c0e:	0f ac       	ldd	r0, Y+63	; 0x3f
    3c10:	66 97       	sbiw	r28, 0x16	; 22
    3c12:	04 c0       	rjmp	.+8      	; 0x3c1c <__umoddi3+0xc80>
    3c14:	22 0f       	add	r18, r18
    3c16:	33 1f       	adc	r19, r19
    3c18:	44 1f       	adc	r20, r20
    3c1a:	55 1f       	adc	r21, r21
    3c1c:	0a 94       	dec	r0
    3c1e:	d2 f7       	brpl	.-12     	; 0x3c14 <__umoddi3+0xc78>
    3c20:	d4 01       	movw	r26, r8
    3c22:	c3 01       	movw	r24, r6
    3c24:	67 96       	adiw	r28, 0x17	; 23
    3c26:	0f ac       	ldd	r0, Y+63	; 0x3f
    3c28:	67 97       	sbiw	r28, 0x17	; 23
    3c2a:	04 c0       	rjmp	.+8      	; 0x3c34 <__umoddi3+0xc98>
    3c2c:	b6 95       	lsr	r27
    3c2e:	a7 95       	ror	r26
    3c30:	97 95       	ror	r25
    3c32:	87 95       	ror	r24
    3c34:	0a 94       	dec	r0
    3c36:	d2 f7       	brpl	.-12     	; 0x3c2c <__umoddi3+0xc90>
    3c38:	28 2b       	or	r18, r24
    3c3a:	39 2b       	or	r19, r25
    3c3c:	4a 2b       	or	r20, r26
    3c3e:	5b 2b       	or	r21, r27
    3c40:	29 8b       	std	Y+17, r18	; 0x11
    3c42:	3a 8b       	std	Y+18, r19	; 0x12
    3c44:	4b 8b       	std	Y+19, r20	; 0x13
    3c46:	5c 8b       	std	Y+20, r21	; 0x14
    3c48:	67 96       	adiw	r28, 0x17	; 23
    3c4a:	0f ac       	ldd	r0, Y+63	; 0x3f
    3c4c:	67 97       	sbiw	r28, 0x17	; 23
    3c4e:	04 c0       	rjmp	.+8      	; 0x3c58 <__umoddi3+0xcbc>
    3c50:	16 95       	lsr	r17
    3c52:	07 95       	ror	r16
    3c54:	f7 94       	ror	r15
    3c56:	e7 94       	ror	r14
    3c58:	0a 94       	dec	r0
    3c5a:	d2 f7       	brpl	.-12     	; 0x3c50 <__umoddi3+0xcb4>
    3c5c:	ed 8a       	std	Y+21, r14	; 0x15
    3c5e:	fe 8a       	std	Y+22, r15	; 0x16
    3c60:	0f 8b       	std	Y+23, r16	; 0x17
    3c62:	18 8f       	std	Y+24, r17	; 0x18
    3c64:	3a 89       	ldd	r19, Y+18	; 0x12
    3c66:	4b 89       	ldd	r20, Y+19	; 0x13
    3c68:	5c 89       	ldd	r21, Y+20	; 0x14
    3c6a:	6e 2d       	mov	r22, r14
    3c6c:	7e 89       	ldd	r23, Y+22	; 0x16
    3c6e:	8f 89       	ldd	r24, Y+23	; 0x17
    3c70:	98 8d       	ldd	r25, Y+24	; 0x18
    3c72:	c5 5a       	subi	r28, 0xA5	; 165
    3c74:	df 4f       	sbci	r29, 0xFF	; 255
    3c76:	e2 e1       	ldi	r30, 0x12	; 18
    3c78:	0c 94 91 34 	jmp	0x6922	; 0x6922 <__epilogue_restores__>

00003c7c <_fpadd_parts>:
    3c7c:	a0 e0       	ldi	r26, 0x00	; 0
    3c7e:	b0 e0       	ldi	r27, 0x00	; 0
    3c80:	e4 e4       	ldi	r30, 0x44	; 68
    3c82:	fe e1       	ldi	r31, 0x1E	; 30
    3c84:	0c 94 75 34 	jmp	0x68ea	; 0x68ea <__prologue_saves__>
    3c88:	dc 01       	movw	r26, r24
    3c8a:	2b 01       	movw	r4, r22
    3c8c:	fa 01       	movw	r30, r20
    3c8e:	9c 91       	ld	r25, X
    3c90:	92 30       	cpi	r25, 0x02	; 2
    3c92:	08 f4       	brcc	.+2      	; 0x3c96 <_fpadd_parts+0x1a>
    3c94:	39 c1       	rjmp	.+626    	; 0x3f08 <_fpadd_parts+0x28c>
    3c96:	eb 01       	movw	r28, r22
    3c98:	88 81       	ld	r24, Y
    3c9a:	82 30       	cpi	r24, 0x02	; 2
    3c9c:	08 f4       	brcc	.+2      	; 0x3ca0 <_fpadd_parts+0x24>
    3c9e:	33 c1       	rjmp	.+614    	; 0x3f06 <_fpadd_parts+0x28a>
    3ca0:	94 30       	cpi	r25, 0x04	; 4
    3ca2:	69 f4       	brne	.+26     	; 0x3cbe <_fpadd_parts+0x42>
    3ca4:	84 30       	cpi	r24, 0x04	; 4
    3ca6:	09 f0       	breq	.+2      	; 0x3caa <_fpadd_parts+0x2e>
    3ca8:	2f c1       	rjmp	.+606    	; 0x3f08 <_fpadd_parts+0x28c>
    3caa:	11 96       	adiw	r26, 0x01	; 1
    3cac:	9c 91       	ld	r25, X
    3cae:	11 97       	sbiw	r26, 0x01	; 1
    3cb0:	89 81       	ldd	r24, Y+1	; 0x01
    3cb2:	98 17       	cp	r25, r24
    3cb4:	09 f4       	brne	.+2      	; 0x3cb8 <_fpadd_parts+0x3c>
    3cb6:	28 c1       	rjmp	.+592    	; 0x3f08 <_fpadd_parts+0x28c>
    3cb8:	ad ed       	ldi	r26, 0xDD	; 221
    3cba:	b0 e0       	ldi	r27, 0x00	; 0
    3cbc:	25 c1       	rjmp	.+586    	; 0x3f08 <_fpadd_parts+0x28c>
    3cbe:	84 30       	cpi	r24, 0x04	; 4
    3cc0:	09 f4       	brne	.+2      	; 0x3cc4 <_fpadd_parts+0x48>
    3cc2:	21 c1       	rjmp	.+578    	; 0x3f06 <_fpadd_parts+0x28a>
    3cc4:	82 30       	cpi	r24, 0x02	; 2
    3cc6:	a9 f4       	brne	.+42     	; 0x3cf2 <_fpadd_parts+0x76>
    3cc8:	92 30       	cpi	r25, 0x02	; 2
    3cca:	09 f0       	breq	.+2      	; 0x3cce <_fpadd_parts+0x52>
    3ccc:	1d c1       	rjmp	.+570    	; 0x3f08 <_fpadd_parts+0x28c>
    3cce:	9a 01       	movw	r18, r20
    3cd0:	ad 01       	movw	r20, r26
    3cd2:	88 e0       	ldi	r24, 0x08	; 8
    3cd4:	ea 01       	movw	r28, r20
    3cd6:	09 90       	ld	r0, Y+
    3cd8:	ae 01       	movw	r20, r28
    3cda:	e9 01       	movw	r28, r18
    3cdc:	09 92       	st	Y+, r0
    3cde:	9e 01       	movw	r18, r28
    3ce0:	81 50       	subi	r24, 0x01	; 1
    3ce2:	c1 f7       	brne	.-16     	; 0x3cd4 <_fpadd_parts+0x58>
    3ce4:	e2 01       	movw	r28, r4
    3ce6:	89 81       	ldd	r24, Y+1	; 0x01
    3ce8:	11 96       	adiw	r26, 0x01	; 1
    3cea:	9c 91       	ld	r25, X
    3cec:	89 23       	and	r24, r25
    3cee:	81 83       	std	Z+1, r24	; 0x01
    3cf0:	08 c1       	rjmp	.+528    	; 0x3f02 <_fpadd_parts+0x286>
    3cf2:	92 30       	cpi	r25, 0x02	; 2
    3cf4:	09 f4       	brne	.+2      	; 0x3cf8 <_fpadd_parts+0x7c>
    3cf6:	07 c1       	rjmp	.+526    	; 0x3f06 <_fpadd_parts+0x28a>
    3cf8:	12 96       	adiw	r26, 0x02	; 2
    3cfa:	2d 90       	ld	r2, X+
    3cfc:	3c 90       	ld	r3, X
    3cfe:	13 97       	sbiw	r26, 0x03	; 3
    3d00:	eb 01       	movw	r28, r22
    3d02:	8a 81       	ldd	r24, Y+2	; 0x02
    3d04:	9b 81       	ldd	r25, Y+3	; 0x03
    3d06:	14 96       	adiw	r26, 0x04	; 4
    3d08:	ad 90       	ld	r10, X+
    3d0a:	bd 90       	ld	r11, X+
    3d0c:	cd 90       	ld	r12, X+
    3d0e:	dc 90       	ld	r13, X
    3d10:	17 97       	sbiw	r26, 0x07	; 7
    3d12:	ec 80       	ldd	r14, Y+4	; 0x04
    3d14:	fd 80       	ldd	r15, Y+5	; 0x05
    3d16:	0e 81       	ldd	r16, Y+6	; 0x06
    3d18:	1f 81       	ldd	r17, Y+7	; 0x07
    3d1a:	91 01       	movw	r18, r2
    3d1c:	28 1b       	sub	r18, r24
    3d1e:	39 0b       	sbc	r19, r25
    3d20:	b9 01       	movw	r22, r18
    3d22:	37 ff       	sbrs	r19, 7
    3d24:	04 c0       	rjmp	.+8      	; 0x3d2e <_fpadd_parts+0xb2>
    3d26:	66 27       	eor	r22, r22
    3d28:	77 27       	eor	r23, r23
    3d2a:	62 1b       	sub	r22, r18
    3d2c:	73 0b       	sbc	r23, r19
    3d2e:	60 32       	cpi	r22, 0x20	; 32
    3d30:	71 05       	cpc	r23, r1
    3d32:	0c f0       	brlt	.+2      	; 0x3d36 <_fpadd_parts+0xba>
    3d34:	61 c0       	rjmp	.+194    	; 0x3df8 <_fpadd_parts+0x17c>
    3d36:	12 16       	cp	r1, r18
    3d38:	13 06       	cpc	r1, r19
    3d3a:	6c f5       	brge	.+90     	; 0x3d96 <_fpadd_parts+0x11a>
    3d3c:	37 01       	movw	r6, r14
    3d3e:	48 01       	movw	r8, r16
    3d40:	06 2e       	mov	r0, r22
    3d42:	04 c0       	rjmp	.+8      	; 0x3d4c <_fpadd_parts+0xd0>
    3d44:	96 94       	lsr	r9
    3d46:	87 94       	ror	r8
    3d48:	77 94       	ror	r7
    3d4a:	67 94       	ror	r6
    3d4c:	0a 94       	dec	r0
    3d4e:	d2 f7       	brpl	.-12     	; 0x3d44 <_fpadd_parts+0xc8>
    3d50:	21 e0       	ldi	r18, 0x01	; 1
    3d52:	30 e0       	ldi	r19, 0x00	; 0
    3d54:	40 e0       	ldi	r20, 0x00	; 0
    3d56:	50 e0       	ldi	r21, 0x00	; 0
    3d58:	04 c0       	rjmp	.+8      	; 0x3d62 <_fpadd_parts+0xe6>
    3d5a:	22 0f       	add	r18, r18
    3d5c:	33 1f       	adc	r19, r19
    3d5e:	44 1f       	adc	r20, r20
    3d60:	55 1f       	adc	r21, r21
    3d62:	6a 95       	dec	r22
    3d64:	d2 f7       	brpl	.-12     	; 0x3d5a <_fpadd_parts+0xde>
    3d66:	21 50       	subi	r18, 0x01	; 1
    3d68:	30 40       	sbci	r19, 0x00	; 0
    3d6a:	40 40       	sbci	r20, 0x00	; 0
    3d6c:	50 40       	sbci	r21, 0x00	; 0
    3d6e:	2e 21       	and	r18, r14
    3d70:	3f 21       	and	r19, r15
    3d72:	40 23       	and	r20, r16
    3d74:	51 23       	and	r21, r17
    3d76:	21 15       	cp	r18, r1
    3d78:	31 05       	cpc	r19, r1
    3d7a:	41 05       	cpc	r20, r1
    3d7c:	51 05       	cpc	r21, r1
    3d7e:	21 f0       	breq	.+8      	; 0x3d88 <_fpadd_parts+0x10c>
    3d80:	21 e0       	ldi	r18, 0x01	; 1
    3d82:	30 e0       	ldi	r19, 0x00	; 0
    3d84:	40 e0       	ldi	r20, 0x00	; 0
    3d86:	50 e0       	ldi	r21, 0x00	; 0
    3d88:	79 01       	movw	r14, r18
    3d8a:	8a 01       	movw	r16, r20
    3d8c:	e6 28       	or	r14, r6
    3d8e:	f7 28       	or	r15, r7
    3d90:	08 29       	or	r16, r8
    3d92:	19 29       	or	r17, r9
    3d94:	3c c0       	rjmp	.+120    	; 0x3e0e <_fpadd_parts+0x192>
    3d96:	23 2b       	or	r18, r19
    3d98:	d1 f1       	breq	.+116    	; 0x3e0e <_fpadd_parts+0x192>
    3d9a:	26 0e       	add	r2, r22
    3d9c:	37 1e       	adc	r3, r23
    3d9e:	35 01       	movw	r6, r10
    3da0:	46 01       	movw	r8, r12
    3da2:	06 2e       	mov	r0, r22
    3da4:	04 c0       	rjmp	.+8      	; 0x3dae <_fpadd_parts+0x132>
    3da6:	96 94       	lsr	r9
    3da8:	87 94       	ror	r8
    3daa:	77 94       	ror	r7
    3dac:	67 94       	ror	r6
    3dae:	0a 94       	dec	r0
    3db0:	d2 f7       	brpl	.-12     	; 0x3da6 <_fpadd_parts+0x12a>
    3db2:	21 e0       	ldi	r18, 0x01	; 1
    3db4:	30 e0       	ldi	r19, 0x00	; 0
    3db6:	40 e0       	ldi	r20, 0x00	; 0
    3db8:	50 e0       	ldi	r21, 0x00	; 0
    3dba:	04 c0       	rjmp	.+8      	; 0x3dc4 <_fpadd_parts+0x148>
    3dbc:	22 0f       	add	r18, r18
    3dbe:	33 1f       	adc	r19, r19
    3dc0:	44 1f       	adc	r20, r20
    3dc2:	55 1f       	adc	r21, r21
    3dc4:	6a 95       	dec	r22
    3dc6:	d2 f7       	brpl	.-12     	; 0x3dbc <_fpadd_parts+0x140>
    3dc8:	21 50       	subi	r18, 0x01	; 1
    3dca:	30 40       	sbci	r19, 0x00	; 0
    3dcc:	40 40       	sbci	r20, 0x00	; 0
    3dce:	50 40       	sbci	r21, 0x00	; 0
    3dd0:	2a 21       	and	r18, r10
    3dd2:	3b 21       	and	r19, r11
    3dd4:	4c 21       	and	r20, r12
    3dd6:	5d 21       	and	r21, r13
    3dd8:	21 15       	cp	r18, r1
    3dda:	31 05       	cpc	r19, r1
    3ddc:	41 05       	cpc	r20, r1
    3dde:	51 05       	cpc	r21, r1
    3de0:	21 f0       	breq	.+8      	; 0x3dea <_fpadd_parts+0x16e>
    3de2:	21 e0       	ldi	r18, 0x01	; 1
    3de4:	30 e0       	ldi	r19, 0x00	; 0
    3de6:	40 e0       	ldi	r20, 0x00	; 0
    3de8:	50 e0       	ldi	r21, 0x00	; 0
    3dea:	59 01       	movw	r10, r18
    3dec:	6a 01       	movw	r12, r20
    3dee:	a6 28       	or	r10, r6
    3df0:	b7 28       	or	r11, r7
    3df2:	c8 28       	or	r12, r8
    3df4:	d9 28       	or	r13, r9
    3df6:	0b c0       	rjmp	.+22     	; 0x3e0e <_fpadd_parts+0x192>
    3df8:	82 15       	cp	r24, r2
    3dfa:	93 05       	cpc	r25, r3
    3dfc:	2c f0       	brlt	.+10     	; 0x3e08 <_fpadd_parts+0x18c>
    3dfe:	1c 01       	movw	r2, r24
    3e00:	aa 24       	eor	r10, r10
    3e02:	bb 24       	eor	r11, r11
    3e04:	65 01       	movw	r12, r10
    3e06:	03 c0       	rjmp	.+6      	; 0x3e0e <_fpadd_parts+0x192>
    3e08:	ee 24       	eor	r14, r14
    3e0a:	ff 24       	eor	r15, r15
    3e0c:	87 01       	movw	r16, r14
    3e0e:	11 96       	adiw	r26, 0x01	; 1
    3e10:	9c 91       	ld	r25, X
    3e12:	d2 01       	movw	r26, r4
    3e14:	11 96       	adiw	r26, 0x01	; 1
    3e16:	8c 91       	ld	r24, X
    3e18:	98 17       	cp	r25, r24
    3e1a:	09 f4       	brne	.+2      	; 0x3e1e <_fpadd_parts+0x1a2>
    3e1c:	45 c0       	rjmp	.+138    	; 0x3ea8 <_fpadd_parts+0x22c>
    3e1e:	99 23       	and	r25, r25
    3e20:	39 f0       	breq	.+14     	; 0x3e30 <_fpadd_parts+0x1b4>
    3e22:	a8 01       	movw	r20, r16
    3e24:	97 01       	movw	r18, r14
    3e26:	2a 19       	sub	r18, r10
    3e28:	3b 09       	sbc	r19, r11
    3e2a:	4c 09       	sbc	r20, r12
    3e2c:	5d 09       	sbc	r21, r13
    3e2e:	06 c0       	rjmp	.+12     	; 0x3e3c <_fpadd_parts+0x1c0>
    3e30:	a6 01       	movw	r20, r12
    3e32:	95 01       	movw	r18, r10
    3e34:	2e 19       	sub	r18, r14
    3e36:	3f 09       	sbc	r19, r15
    3e38:	40 0b       	sbc	r20, r16
    3e3a:	51 0b       	sbc	r21, r17
    3e3c:	57 fd       	sbrc	r21, 7
    3e3e:	08 c0       	rjmp	.+16     	; 0x3e50 <_fpadd_parts+0x1d4>
    3e40:	11 82       	std	Z+1, r1	; 0x01
    3e42:	33 82       	std	Z+3, r3	; 0x03
    3e44:	22 82       	std	Z+2, r2	; 0x02
    3e46:	24 83       	std	Z+4, r18	; 0x04
    3e48:	35 83       	std	Z+5, r19	; 0x05
    3e4a:	46 83       	std	Z+6, r20	; 0x06
    3e4c:	57 83       	std	Z+7, r21	; 0x07
    3e4e:	1d c0       	rjmp	.+58     	; 0x3e8a <_fpadd_parts+0x20e>
    3e50:	81 e0       	ldi	r24, 0x01	; 1
    3e52:	81 83       	std	Z+1, r24	; 0x01
    3e54:	33 82       	std	Z+3, r3	; 0x03
    3e56:	22 82       	std	Z+2, r2	; 0x02
    3e58:	88 27       	eor	r24, r24
    3e5a:	99 27       	eor	r25, r25
    3e5c:	dc 01       	movw	r26, r24
    3e5e:	82 1b       	sub	r24, r18
    3e60:	93 0b       	sbc	r25, r19
    3e62:	a4 0b       	sbc	r26, r20
    3e64:	b5 0b       	sbc	r27, r21
    3e66:	84 83       	std	Z+4, r24	; 0x04
    3e68:	95 83       	std	Z+5, r25	; 0x05
    3e6a:	a6 83       	std	Z+6, r26	; 0x06
    3e6c:	b7 83       	std	Z+7, r27	; 0x07
    3e6e:	0d c0       	rjmp	.+26     	; 0x3e8a <_fpadd_parts+0x20e>
    3e70:	22 0f       	add	r18, r18
    3e72:	33 1f       	adc	r19, r19
    3e74:	44 1f       	adc	r20, r20
    3e76:	55 1f       	adc	r21, r21
    3e78:	24 83       	std	Z+4, r18	; 0x04
    3e7a:	35 83       	std	Z+5, r19	; 0x05
    3e7c:	46 83       	std	Z+6, r20	; 0x06
    3e7e:	57 83       	std	Z+7, r21	; 0x07
    3e80:	82 81       	ldd	r24, Z+2	; 0x02
    3e82:	93 81       	ldd	r25, Z+3	; 0x03
    3e84:	01 97       	sbiw	r24, 0x01	; 1
    3e86:	93 83       	std	Z+3, r25	; 0x03
    3e88:	82 83       	std	Z+2, r24	; 0x02
    3e8a:	24 81       	ldd	r18, Z+4	; 0x04
    3e8c:	35 81       	ldd	r19, Z+5	; 0x05
    3e8e:	46 81       	ldd	r20, Z+6	; 0x06
    3e90:	57 81       	ldd	r21, Z+7	; 0x07
    3e92:	da 01       	movw	r26, r20
    3e94:	c9 01       	movw	r24, r18
    3e96:	01 97       	sbiw	r24, 0x01	; 1
    3e98:	a1 09       	sbc	r26, r1
    3e9a:	b1 09       	sbc	r27, r1
    3e9c:	8f 5f       	subi	r24, 0xFF	; 255
    3e9e:	9f 4f       	sbci	r25, 0xFF	; 255
    3ea0:	af 4f       	sbci	r26, 0xFF	; 255
    3ea2:	bf 43       	sbci	r27, 0x3F	; 63
    3ea4:	28 f3       	brcs	.-54     	; 0x3e70 <_fpadd_parts+0x1f4>
    3ea6:	0b c0       	rjmp	.+22     	; 0x3ebe <_fpadd_parts+0x242>
    3ea8:	91 83       	std	Z+1, r25	; 0x01
    3eaa:	33 82       	std	Z+3, r3	; 0x03
    3eac:	22 82       	std	Z+2, r2	; 0x02
    3eae:	ea 0c       	add	r14, r10
    3eb0:	fb 1c       	adc	r15, r11
    3eb2:	0c 1d       	adc	r16, r12
    3eb4:	1d 1d       	adc	r17, r13
    3eb6:	e4 82       	std	Z+4, r14	; 0x04
    3eb8:	f5 82       	std	Z+5, r15	; 0x05
    3eba:	06 83       	std	Z+6, r16	; 0x06
    3ebc:	17 83       	std	Z+7, r17	; 0x07
    3ebe:	83 e0       	ldi	r24, 0x03	; 3
    3ec0:	80 83       	st	Z, r24
    3ec2:	24 81       	ldd	r18, Z+4	; 0x04
    3ec4:	35 81       	ldd	r19, Z+5	; 0x05
    3ec6:	46 81       	ldd	r20, Z+6	; 0x06
    3ec8:	57 81       	ldd	r21, Z+7	; 0x07
    3eca:	57 ff       	sbrs	r21, 7
    3ecc:	1a c0       	rjmp	.+52     	; 0x3f02 <_fpadd_parts+0x286>
    3ece:	c9 01       	movw	r24, r18
    3ed0:	aa 27       	eor	r26, r26
    3ed2:	97 fd       	sbrc	r25, 7
    3ed4:	a0 95       	com	r26
    3ed6:	ba 2f       	mov	r27, r26
    3ed8:	81 70       	andi	r24, 0x01	; 1
    3eda:	90 70       	andi	r25, 0x00	; 0
    3edc:	a0 70       	andi	r26, 0x00	; 0
    3ede:	b0 70       	andi	r27, 0x00	; 0
    3ee0:	56 95       	lsr	r21
    3ee2:	47 95       	ror	r20
    3ee4:	37 95       	ror	r19
    3ee6:	27 95       	ror	r18
    3ee8:	82 2b       	or	r24, r18
    3eea:	93 2b       	or	r25, r19
    3eec:	a4 2b       	or	r26, r20
    3eee:	b5 2b       	or	r27, r21
    3ef0:	84 83       	std	Z+4, r24	; 0x04
    3ef2:	95 83       	std	Z+5, r25	; 0x05
    3ef4:	a6 83       	std	Z+6, r26	; 0x06
    3ef6:	b7 83       	std	Z+7, r27	; 0x07
    3ef8:	82 81       	ldd	r24, Z+2	; 0x02
    3efa:	93 81       	ldd	r25, Z+3	; 0x03
    3efc:	01 96       	adiw	r24, 0x01	; 1
    3efe:	93 83       	std	Z+3, r25	; 0x03
    3f00:	82 83       	std	Z+2, r24	; 0x02
    3f02:	df 01       	movw	r26, r30
    3f04:	01 c0       	rjmp	.+2      	; 0x3f08 <_fpadd_parts+0x28c>
    3f06:	d2 01       	movw	r26, r4
    3f08:	cd 01       	movw	r24, r26
    3f0a:	cd b7       	in	r28, 0x3d	; 61
    3f0c:	de b7       	in	r29, 0x3e	; 62
    3f0e:	e2 e1       	ldi	r30, 0x12	; 18
    3f10:	0c 94 91 34 	jmp	0x6922	; 0x6922 <__epilogue_restores__>

00003f14 <__subsf3>:
    3f14:	a0 e2       	ldi	r26, 0x20	; 32
    3f16:	b0 e0       	ldi	r27, 0x00	; 0
    3f18:	e0 e9       	ldi	r30, 0x90	; 144
    3f1a:	ff e1       	ldi	r31, 0x1F	; 31
    3f1c:	0c 94 81 34 	jmp	0x6902	; 0x6902 <__prologue_saves__+0x18>
    3f20:	69 83       	std	Y+1, r22	; 0x01
    3f22:	7a 83       	std	Y+2, r23	; 0x02
    3f24:	8b 83       	std	Y+3, r24	; 0x03
    3f26:	9c 83       	std	Y+4, r25	; 0x04
    3f28:	2d 83       	std	Y+5, r18	; 0x05
    3f2a:	3e 83       	std	Y+6, r19	; 0x06
    3f2c:	4f 83       	std	Y+7, r20	; 0x07
    3f2e:	58 87       	std	Y+8, r21	; 0x08
    3f30:	e9 e0       	ldi	r30, 0x09	; 9
    3f32:	ee 2e       	mov	r14, r30
    3f34:	f1 2c       	mov	r15, r1
    3f36:	ec 0e       	add	r14, r28
    3f38:	fd 1e       	adc	r15, r29
    3f3a:	ce 01       	movw	r24, r28
    3f3c:	01 96       	adiw	r24, 0x01	; 1
    3f3e:	b7 01       	movw	r22, r14
    3f40:	0e 94 0d 24 	call	0x481a	; 0x481a <__unpack_f>
    3f44:	8e 01       	movw	r16, r28
    3f46:	0f 5e       	subi	r16, 0xEF	; 239
    3f48:	1f 4f       	sbci	r17, 0xFF	; 255
    3f4a:	ce 01       	movw	r24, r28
    3f4c:	05 96       	adiw	r24, 0x05	; 5
    3f4e:	b8 01       	movw	r22, r16
    3f50:	0e 94 0d 24 	call	0x481a	; 0x481a <__unpack_f>
    3f54:	8a 89       	ldd	r24, Y+18	; 0x12
    3f56:	91 e0       	ldi	r25, 0x01	; 1
    3f58:	89 27       	eor	r24, r25
    3f5a:	8a 8b       	std	Y+18, r24	; 0x12
    3f5c:	c7 01       	movw	r24, r14
    3f5e:	b8 01       	movw	r22, r16
    3f60:	ae 01       	movw	r20, r28
    3f62:	47 5e       	subi	r20, 0xE7	; 231
    3f64:	5f 4f       	sbci	r21, 0xFF	; 255
    3f66:	0e 94 3e 1e 	call	0x3c7c	; 0x3c7c <_fpadd_parts>
    3f6a:	0e 94 38 23 	call	0x4670	; 0x4670 <__pack_f>
    3f6e:	a0 96       	adiw	r28, 0x20	; 32
    3f70:	e6 e0       	ldi	r30, 0x06	; 6
    3f72:	0c 94 9d 34 	jmp	0x693a	; 0x693a <__epilogue_restores__+0x18>

00003f76 <__addsf3>:
    3f76:	a0 e2       	ldi	r26, 0x20	; 32
    3f78:	b0 e0       	ldi	r27, 0x00	; 0
    3f7a:	e1 ec       	ldi	r30, 0xC1	; 193
    3f7c:	ff e1       	ldi	r31, 0x1F	; 31
    3f7e:	0c 94 81 34 	jmp	0x6902	; 0x6902 <__prologue_saves__+0x18>
    3f82:	69 83       	std	Y+1, r22	; 0x01
    3f84:	7a 83       	std	Y+2, r23	; 0x02
    3f86:	8b 83       	std	Y+3, r24	; 0x03
    3f88:	9c 83       	std	Y+4, r25	; 0x04
    3f8a:	2d 83       	std	Y+5, r18	; 0x05
    3f8c:	3e 83       	std	Y+6, r19	; 0x06
    3f8e:	4f 83       	std	Y+7, r20	; 0x07
    3f90:	58 87       	std	Y+8, r21	; 0x08
    3f92:	f9 e0       	ldi	r31, 0x09	; 9
    3f94:	ef 2e       	mov	r14, r31
    3f96:	f1 2c       	mov	r15, r1
    3f98:	ec 0e       	add	r14, r28
    3f9a:	fd 1e       	adc	r15, r29
    3f9c:	ce 01       	movw	r24, r28
    3f9e:	01 96       	adiw	r24, 0x01	; 1
    3fa0:	b7 01       	movw	r22, r14
    3fa2:	0e 94 0d 24 	call	0x481a	; 0x481a <__unpack_f>
    3fa6:	8e 01       	movw	r16, r28
    3fa8:	0f 5e       	subi	r16, 0xEF	; 239
    3faa:	1f 4f       	sbci	r17, 0xFF	; 255
    3fac:	ce 01       	movw	r24, r28
    3fae:	05 96       	adiw	r24, 0x05	; 5
    3fb0:	b8 01       	movw	r22, r16
    3fb2:	0e 94 0d 24 	call	0x481a	; 0x481a <__unpack_f>
    3fb6:	c7 01       	movw	r24, r14
    3fb8:	b8 01       	movw	r22, r16
    3fba:	ae 01       	movw	r20, r28
    3fbc:	47 5e       	subi	r20, 0xE7	; 231
    3fbe:	5f 4f       	sbci	r21, 0xFF	; 255
    3fc0:	0e 94 3e 1e 	call	0x3c7c	; 0x3c7c <_fpadd_parts>
    3fc4:	0e 94 38 23 	call	0x4670	; 0x4670 <__pack_f>
    3fc8:	a0 96       	adiw	r28, 0x20	; 32
    3fca:	e6 e0       	ldi	r30, 0x06	; 6
    3fcc:	0c 94 9d 34 	jmp	0x693a	; 0x693a <__epilogue_restores__+0x18>

00003fd0 <__mulsf3>:
    3fd0:	a0 e2       	ldi	r26, 0x20	; 32
    3fd2:	b0 e0       	ldi	r27, 0x00	; 0
    3fd4:	ee ee       	ldi	r30, 0xEE	; 238
    3fd6:	ff e1       	ldi	r31, 0x1F	; 31
    3fd8:	0c 94 75 34 	jmp	0x68ea	; 0x68ea <__prologue_saves__>
    3fdc:	69 83       	std	Y+1, r22	; 0x01
    3fde:	7a 83       	std	Y+2, r23	; 0x02
    3fe0:	8b 83       	std	Y+3, r24	; 0x03
    3fe2:	9c 83       	std	Y+4, r25	; 0x04
    3fe4:	2d 83       	std	Y+5, r18	; 0x05
    3fe6:	3e 83       	std	Y+6, r19	; 0x06
    3fe8:	4f 83       	std	Y+7, r20	; 0x07
    3fea:	58 87       	std	Y+8, r21	; 0x08
    3fec:	ce 01       	movw	r24, r28
    3fee:	01 96       	adiw	r24, 0x01	; 1
    3ff0:	be 01       	movw	r22, r28
    3ff2:	67 5f       	subi	r22, 0xF7	; 247
    3ff4:	7f 4f       	sbci	r23, 0xFF	; 255
    3ff6:	0e 94 0d 24 	call	0x481a	; 0x481a <__unpack_f>
    3ffa:	ce 01       	movw	r24, r28
    3ffc:	05 96       	adiw	r24, 0x05	; 5
    3ffe:	be 01       	movw	r22, r28
    4000:	6f 5e       	subi	r22, 0xEF	; 239
    4002:	7f 4f       	sbci	r23, 0xFF	; 255
    4004:	0e 94 0d 24 	call	0x481a	; 0x481a <__unpack_f>
    4008:	99 85       	ldd	r25, Y+9	; 0x09
    400a:	92 30       	cpi	r25, 0x02	; 2
    400c:	88 f0       	brcs	.+34     	; 0x4030 <__mulsf3+0x60>
    400e:	89 89       	ldd	r24, Y+17	; 0x11
    4010:	82 30       	cpi	r24, 0x02	; 2
    4012:	c8 f0       	brcs	.+50     	; 0x4046 <__mulsf3+0x76>
    4014:	94 30       	cpi	r25, 0x04	; 4
    4016:	19 f4       	brne	.+6      	; 0x401e <__mulsf3+0x4e>
    4018:	82 30       	cpi	r24, 0x02	; 2
    401a:	51 f4       	brne	.+20     	; 0x4030 <__mulsf3+0x60>
    401c:	04 c0       	rjmp	.+8      	; 0x4026 <__mulsf3+0x56>
    401e:	84 30       	cpi	r24, 0x04	; 4
    4020:	29 f4       	brne	.+10     	; 0x402c <__mulsf3+0x5c>
    4022:	92 30       	cpi	r25, 0x02	; 2
    4024:	81 f4       	brne	.+32     	; 0x4046 <__mulsf3+0x76>
    4026:	8d ed       	ldi	r24, 0xDD	; 221
    4028:	90 e0       	ldi	r25, 0x00	; 0
    402a:	c6 c0       	rjmp	.+396    	; 0x41b8 <__mulsf3+0x1e8>
    402c:	92 30       	cpi	r25, 0x02	; 2
    402e:	49 f4       	brne	.+18     	; 0x4042 <__mulsf3+0x72>
    4030:	20 e0       	ldi	r18, 0x00	; 0
    4032:	9a 85       	ldd	r25, Y+10	; 0x0a
    4034:	8a 89       	ldd	r24, Y+18	; 0x12
    4036:	98 13       	cpse	r25, r24
    4038:	21 e0       	ldi	r18, 0x01	; 1
    403a:	2a 87       	std	Y+10, r18	; 0x0a
    403c:	ce 01       	movw	r24, r28
    403e:	09 96       	adiw	r24, 0x09	; 9
    4040:	bb c0       	rjmp	.+374    	; 0x41b8 <__mulsf3+0x1e8>
    4042:	82 30       	cpi	r24, 0x02	; 2
    4044:	49 f4       	brne	.+18     	; 0x4058 <__mulsf3+0x88>
    4046:	20 e0       	ldi	r18, 0x00	; 0
    4048:	9a 85       	ldd	r25, Y+10	; 0x0a
    404a:	8a 89       	ldd	r24, Y+18	; 0x12
    404c:	98 13       	cpse	r25, r24
    404e:	21 e0       	ldi	r18, 0x01	; 1
    4050:	2a 8b       	std	Y+18, r18	; 0x12
    4052:	ce 01       	movw	r24, r28
    4054:	41 96       	adiw	r24, 0x11	; 17
    4056:	b0 c0       	rjmp	.+352    	; 0x41b8 <__mulsf3+0x1e8>
    4058:	2d 84       	ldd	r2, Y+13	; 0x0d
    405a:	3e 84       	ldd	r3, Y+14	; 0x0e
    405c:	4f 84       	ldd	r4, Y+15	; 0x0f
    405e:	58 88       	ldd	r5, Y+16	; 0x10
    4060:	6d 88       	ldd	r6, Y+21	; 0x15
    4062:	7e 88       	ldd	r7, Y+22	; 0x16
    4064:	8f 88       	ldd	r8, Y+23	; 0x17
    4066:	98 8c       	ldd	r9, Y+24	; 0x18
    4068:	ee 24       	eor	r14, r14
    406a:	ff 24       	eor	r15, r15
    406c:	87 01       	movw	r16, r14
    406e:	aa 24       	eor	r10, r10
    4070:	bb 24       	eor	r11, r11
    4072:	65 01       	movw	r12, r10
    4074:	40 e0       	ldi	r20, 0x00	; 0
    4076:	50 e0       	ldi	r21, 0x00	; 0
    4078:	60 e0       	ldi	r22, 0x00	; 0
    407a:	70 e0       	ldi	r23, 0x00	; 0
    407c:	e0 e0       	ldi	r30, 0x00	; 0
    407e:	f0 e0       	ldi	r31, 0x00	; 0
    4080:	c1 01       	movw	r24, r2
    4082:	81 70       	andi	r24, 0x01	; 1
    4084:	90 70       	andi	r25, 0x00	; 0
    4086:	89 2b       	or	r24, r25
    4088:	e9 f0       	breq	.+58     	; 0x40c4 <__mulsf3+0xf4>
    408a:	e6 0c       	add	r14, r6
    408c:	f7 1c       	adc	r15, r7
    408e:	08 1d       	adc	r16, r8
    4090:	19 1d       	adc	r17, r9
    4092:	9a 01       	movw	r18, r20
    4094:	ab 01       	movw	r20, r22
    4096:	2a 0d       	add	r18, r10
    4098:	3b 1d       	adc	r19, r11
    409a:	4c 1d       	adc	r20, r12
    409c:	5d 1d       	adc	r21, r13
    409e:	80 e0       	ldi	r24, 0x00	; 0
    40a0:	90 e0       	ldi	r25, 0x00	; 0
    40a2:	a0 e0       	ldi	r26, 0x00	; 0
    40a4:	b0 e0       	ldi	r27, 0x00	; 0
    40a6:	e6 14       	cp	r14, r6
    40a8:	f7 04       	cpc	r15, r7
    40aa:	08 05       	cpc	r16, r8
    40ac:	19 05       	cpc	r17, r9
    40ae:	20 f4       	brcc	.+8      	; 0x40b8 <__mulsf3+0xe8>
    40b0:	81 e0       	ldi	r24, 0x01	; 1
    40b2:	90 e0       	ldi	r25, 0x00	; 0
    40b4:	a0 e0       	ldi	r26, 0x00	; 0
    40b6:	b0 e0       	ldi	r27, 0x00	; 0
    40b8:	ba 01       	movw	r22, r20
    40ba:	a9 01       	movw	r20, r18
    40bc:	48 0f       	add	r20, r24
    40be:	59 1f       	adc	r21, r25
    40c0:	6a 1f       	adc	r22, r26
    40c2:	7b 1f       	adc	r23, r27
    40c4:	aa 0c       	add	r10, r10
    40c6:	bb 1c       	adc	r11, r11
    40c8:	cc 1c       	adc	r12, r12
    40ca:	dd 1c       	adc	r13, r13
    40cc:	97 fe       	sbrs	r9, 7
    40ce:	08 c0       	rjmp	.+16     	; 0x40e0 <__mulsf3+0x110>
    40d0:	81 e0       	ldi	r24, 0x01	; 1
    40d2:	90 e0       	ldi	r25, 0x00	; 0
    40d4:	a0 e0       	ldi	r26, 0x00	; 0
    40d6:	b0 e0       	ldi	r27, 0x00	; 0
    40d8:	a8 2a       	or	r10, r24
    40da:	b9 2a       	or	r11, r25
    40dc:	ca 2a       	or	r12, r26
    40de:	db 2a       	or	r13, r27
    40e0:	31 96       	adiw	r30, 0x01	; 1
    40e2:	e0 32       	cpi	r30, 0x20	; 32
    40e4:	f1 05       	cpc	r31, r1
    40e6:	49 f0       	breq	.+18     	; 0x40fa <__mulsf3+0x12a>
    40e8:	66 0c       	add	r6, r6
    40ea:	77 1c       	adc	r7, r7
    40ec:	88 1c       	adc	r8, r8
    40ee:	99 1c       	adc	r9, r9
    40f0:	56 94       	lsr	r5
    40f2:	47 94       	ror	r4
    40f4:	37 94       	ror	r3
    40f6:	27 94       	ror	r2
    40f8:	c3 cf       	rjmp	.-122    	; 0x4080 <__mulsf3+0xb0>
    40fa:	fa 85       	ldd	r31, Y+10	; 0x0a
    40fc:	ea 89       	ldd	r30, Y+18	; 0x12
    40fe:	2b 89       	ldd	r18, Y+19	; 0x13
    4100:	3c 89       	ldd	r19, Y+20	; 0x14
    4102:	8b 85       	ldd	r24, Y+11	; 0x0b
    4104:	9c 85       	ldd	r25, Y+12	; 0x0c
    4106:	28 0f       	add	r18, r24
    4108:	39 1f       	adc	r19, r25
    410a:	2e 5f       	subi	r18, 0xFE	; 254
    410c:	3f 4f       	sbci	r19, 0xFF	; 255
    410e:	17 c0       	rjmp	.+46     	; 0x413e <__mulsf3+0x16e>
    4110:	ca 01       	movw	r24, r20
    4112:	81 70       	andi	r24, 0x01	; 1
    4114:	90 70       	andi	r25, 0x00	; 0
    4116:	89 2b       	or	r24, r25
    4118:	61 f0       	breq	.+24     	; 0x4132 <__mulsf3+0x162>
    411a:	16 95       	lsr	r17
    411c:	07 95       	ror	r16
    411e:	f7 94       	ror	r15
    4120:	e7 94       	ror	r14
    4122:	80 e0       	ldi	r24, 0x00	; 0
    4124:	90 e0       	ldi	r25, 0x00	; 0
    4126:	a0 e0       	ldi	r26, 0x00	; 0
    4128:	b0 e8       	ldi	r27, 0x80	; 128
    412a:	e8 2a       	or	r14, r24
    412c:	f9 2a       	or	r15, r25
    412e:	0a 2b       	or	r16, r26
    4130:	1b 2b       	or	r17, r27
    4132:	76 95       	lsr	r23
    4134:	67 95       	ror	r22
    4136:	57 95       	ror	r21
    4138:	47 95       	ror	r20
    413a:	2f 5f       	subi	r18, 0xFF	; 255
    413c:	3f 4f       	sbci	r19, 0xFF	; 255
    413e:	77 fd       	sbrc	r23, 7
    4140:	e7 cf       	rjmp	.-50     	; 0x4110 <__mulsf3+0x140>
    4142:	0c c0       	rjmp	.+24     	; 0x415c <__mulsf3+0x18c>
    4144:	44 0f       	add	r20, r20
    4146:	55 1f       	adc	r21, r21
    4148:	66 1f       	adc	r22, r22
    414a:	77 1f       	adc	r23, r23
    414c:	17 fd       	sbrc	r17, 7
    414e:	41 60       	ori	r20, 0x01	; 1
    4150:	ee 0c       	add	r14, r14
    4152:	ff 1c       	adc	r15, r15
    4154:	00 1f       	adc	r16, r16
    4156:	11 1f       	adc	r17, r17
    4158:	21 50       	subi	r18, 0x01	; 1
    415a:	30 40       	sbci	r19, 0x00	; 0
    415c:	40 30       	cpi	r20, 0x00	; 0
    415e:	90 e0       	ldi	r25, 0x00	; 0
    4160:	59 07       	cpc	r21, r25
    4162:	90 e0       	ldi	r25, 0x00	; 0
    4164:	69 07       	cpc	r22, r25
    4166:	90 e4       	ldi	r25, 0x40	; 64
    4168:	79 07       	cpc	r23, r25
    416a:	60 f3       	brcs	.-40     	; 0x4144 <__mulsf3+0x174>
    416c:	2b 8f       	std	Y+27, r18	; 0x1b
    416e:	3c 8f       	std	Y+28, r19	; 0x1c
    4170:	db 01       	movw	r26, r22
    4172:	ca 01       	movw	r24, r20
    4174:	8f 77       	andi	r24, 0x7F	; 127
    4176:	90 70       	andi	r25, 0x00	; 0
    4178:	a0 70       	andi	r26, 0x00	; 0
    417a:	b0 70       	andi	r27, 0x00	; 0
    417c:	80 34       	cpi	r24, 0x40	; 64
    417e:	91 05       	cpc	r25, r1
    4180:	a1 05       	cpc	r26, r1
    4182:	b1 05       	cpc	r27, r1
    4184:	61 f4       	brne	.+24     	; 0x419e <__mulsf3+0x1ce>
    4186:	47 fd       	sbrc	r20, 7
    4188:	0a c0       	rjmp	.+20     	; 0x419e <__mulsf3+0x1ce>
    418a:	e1 14       	cp	r14, r1
    418c:	f1 04       	cpc	r15, r1
    418e:	01 05       	cpc	r16, r1
    4190:	11 05       	cpc	r17, r1
    4192:	29 f0       	breq	.+10     	; 0x419e <__mulsf3+0x1ce>
    4194:	40 5c       	subi	r20, 0xC0	; 192
    4196:	5f 4f       	sbci	r21, 0xFF	; 255
    4198:	6f 4f       	sbci	r22, 0xFF	; 255
    419a:	7f 4f       	sbci	r23, 0xFF	; 255
    419c:	40 78       	andi	r20, 0x80	; 128
    419e:	1a 8e       	std	Y+26, r1	; 0x1a
    41a0:	fe 17       	cp	r31, r30
    41a2:	11 f0       	breq	.+4      	; 0x41a8 <__mulsf3+0x1d8>
    41a4:	81 e0       	ldi	r24, 0x01	; 1
    41a6:	8a 8f       	std	Y+26, r24	; 0x1a
    41a8:	4d 8f       	std	Y+29, r20	; 0x1d
    41aa:	5e 8f       	std	Y+30, r21	; 0x1e
    41ac:	6f 8f       	std	Y+31, r22	; 0x1f
    41ae:	78 a3       	std	Y+32, r23	; 0x20
    41b0:	83 e0       	ldi	r24, 0x03	; 3
    41b2:	89 8f       	std	Y+25, r24	; 0x19
    41b4:	ce 01       	movw	r24, r28
    41b6:	49 96       	adiw	r24, 0x19	; 25
    41b8:	0e 94 38 23 	call	0x4670	; 0x4670 <__pack_f>
    41bc:	a0 96       	adiw	r28, 0x20	; 32
    41be:	e2 e1       	ldi	r30, 0x12	; 18
    41c0:	0c 94 91 34 	jmp	0x6922	; 0x6922 <__epilogue_restores__>

000041c4 <__divsf3>:
    41c4:	a8 e1       	ldi	r26, 0x18	; 24
    41c6:	b0 e0       	ldi	r27, 0x00	; 0
    41c8:	e8 ee       	ldi	r30, 0xE8	; 232
    41ca:	f0 e2       	ldi	r31, 0x20	; 32
    41cc:	0c 94 7d 34 	jmp	0x68fa	; 0x68fa <__prologue_saves__+0x10>
    41d0:	69 83       	std	Y+1, r22	; 0x01
    41d2:	7a 83       	std	Y+2, r23	; 0x02
    41d4:	8b 83       	std	Y+3, r24	; 0x03
    41d6:	9c 83       	std	Y+4, r25	; 0x04
    41d8:	2d 83       	std	Y+5, r18	; 0x05
    41da:	3e 83       	std	Y+6, r19	; 0x06
    41dc:	4f 83       	std	Y+7, r20	; 0x07
    41de:	58 87       	std	Y+8, r21	; 0x08
    41e0:	b9 e0       	ldi	r27, 0x09	; 9
    41e2:	eb 2e       	mov	r14, r27
    41e4:	f1 2c       	mov	r15, r1
    41e6:	ec 0e       	add	r14, r28
    41e8:	fd 1e       	adc	r15, r29
    41ea:	ce 01       	movw	r24, r28
    41ec:	01 96       	adiw	r24, 0x01	; 1
    41ee:	b7 01       	movw	r22, r14
    41f0:	0e 94 0d 24 	call	0x481a	; 0x481a <__unpack_f>
    41f4:	8e 01       	movw	r16, r28
    41f6:	0f 5e       	subi	r16, 0xEF	; 239
    41f8:	1f 4f       	sbci	r17, 0xFF	; 255
    41fa:	ce 01       	movw	r24, r28
    41fc:	05 96       	adiw	r24, 0x05	; 5
    41fe:	b8 01       	movw	r22, r16
    4200:	0e 94 0d 24 	call	0x481a	; 0x481a <__unpack_f>
    4204:	29 85       	ldd	r18, Y+9	; 0x09
    4206:	22 30       	cpi	r18, 0x02	; 2
    4208:	08 f4       	brcc	.+2      	; 0x420c <__divsf3+0x48>
    420a:	7e c0       	rjmp	.+252    	; 0x4308 <__divsf3+0x144>
    420c:	39 89       	ldd	r19, Y+17	; 0x11
    420e:	32 30       	cpi	r19, 0x02	; 2
    4210:	10 f4       	brcc	.+4      	; 0x4216 <__divsf3+0x52>
    4212:	b8 01       	movw	r22, r16
    4214:	7c c0       	rjmp	.+248    	; 0x430e <__divsf3+0x14a>
    4216:	8a 85       	ldd	r24, Y+10	; 0x0a
    4218:	9a 89       	ldd	r25, Y+18	; 0x12
    421a:	89 27       	eor	r24, r25
    421c:	8a 87       	std	Y+10, r24	; 0x0a
    421e:	24 30       	cpi	r18, 0x04	; 4
    4220:	11 f0       	breq	.+4      	; 0x4226 <__divsf3+0x62>
    4222:	22 30       	cpi	r18, 0x02	; 2
    4224:	31 f4       	brne	.+12     	; 0x4232 <__divsf3+0x6e>
    4226:	23 17       	cp	r18, r19
    4228:	09 f0       	breq	.+2      	; 0x422c <__divsf3+0x68>
    422a:	6e c0       	rjmp	.+220    	; 0x4308 <__divsf3+0x144>
    422c:	6d ed       	ldi	r22, 0xDD	; 221
    422e:	70 e0       	ldi	r23, 0x00	; 0
    4230:	6e c0       	rjmp	.+220    	; 0x430e <__divsf3+0x14a>
    4232:	34 30       	cpi	r19, 0x04	; 4
    4234:	39 f4       	brne	.+14     	; 0x4244 <__divsf3+0x80>
    4236:	1d 86       	std	Y+13, r1	; 0x0d
    4238:	1e 86       	std	Y+14, r1	; 0x0e
    423a:	1f 86       	std	Y+15, r1	; 0x0f
    423c:	18 8a       	std	Y+16, r1	; 0x10
    423e:	1c 86       	std	Y+12, r1	; 0x0c
    4240:	1b 86       	std	Y+11, r1	; 0x0b
    4242:	04 c0       	rjmp	.+8      	; 0x424c <__divsf3+0x88>
    4244:	32 30       	cpi	r19, 0x02	; 2
    4246:	21 f4       	brne	.+8      	; 0x4250 <__divsf3+0x8c>
    4248:	84 e0       	ldi	r24, 0x04	; 4
    424a:	89 87       	std	Y+9, r24	; 0x09
    424c:	b7 01       	movw	r22, r14
    424e:	5f c0       	rjmp	.+190    	; 0x430e <__divsf3+0x14a>
    4250:	2b 85       	ldd	r18, Y+11	; 0x0b
    4252:	3c 85       	ldd	r19, Y+12	; 0x0c
    4254:	8b 89       	ldd	r24, Y+19	; 0x13
    4256:	9c 89       	ldd	r25, Y+20	; 0x14
    4258:	28 1b       	sub	r18, r24
    425a:	39 0b       	sbc	r19, r25
    425c:	3c 87       	std	Y+12, r19	; 0x0c
    425e:	2b 87       	std	Y+11, r18	; 0x0b
    4260:	ed 84       	ldd	r14, Y+13	; 0x0d
    4262:	fe 84       	ldd	r15, Y+14	; 0x0e
    4264:	0f 85       	ldd	r16, Y+15	; 0x0f
    4266:	18 89       	ldd	r17, Y+16	; 0x10
    4268:	ad 88       	ldd	r10, Y+21	; 0x15
    426a:	be 88       	ldd	r11, Y+22	; 0x16
    426c:	cf 88       	ldd	r12, Y+23	; 0x17
    426e:	d8 8c       	ldd	r13, Y+24	; 0x18
    4270:	ea 14       	cp	r14, r10
    4272:	fb 04       	cpc	r15, r11
    4274:	0c 05       	cpc	r16, r12
    4276:	1d 05       	cpc	r17, r13
    4278:	40 f4       	brcc	.+16     	; 0x428a <__divsf3+0xc6>
    427a:	ee 0c       	add	r14, r14
    427c:	ff 1c       	adc	r15, r15
    427e:	00 1f       	adc	r16, r16
    4280:	11 1f       	adc	r17, r17
    4282:	21 50       	subi	r18, 0x01	; 1
    4284:	30 40       	sbci	r19, 0x00	; 0
    4286:	3c 87       	std	Y+12, r19	; 0x0c
    4288:	2b 87       	std	Y+11, r18	; 0x0b
    428a:	20 e0       	ldi	r18, 0x00	; 0
    428c:	30 e0       	ldi	r19, 0x00	; 0
    428e:	40 e0       	ldi	r20, 0x00	; 0
    4290:	50 e0       	ldi	r21, 0x00	; 0
    4292:	80 e0       	ldi	r24, 0x00	; 0
    4294:	90 e0       	ldi	r25, 0x00	; 0
    4296:	a0 e0       	ldi	r26, 0x00	; 0
    4298:	b0 e4       	ldi	r27, 0x40	; 64
    429a:	60 e0       	ldi	r22, 0x00	; 0
    429c:	70 e0       	ldi	r23, 0x00	; 0
    429e:	ea 14       	cp	r14, r10
    42a0:	fb 04       	cpc	r15, r11
    42a2:	0c 05       	cpc	r16, r12
    42a4:	1d 05       	cpc	r17, r13
    42a6:	40 f0       	brcs	.+16     	; 0x42b8 <__divsf3+0xf4>
    42a8:	28 2b       	or	r18, r24
    42aa:	39 2b       	or	r19, r25
    42ac:	4a 2b       	or	r20, r26
    42ae:	5b 2b       	or	r21, r27
    42b0:	ea 18       	sub	r14, r10
    42b2:	fb 08       	sbc	r15, r11
    42b4:	0c 09       	sbc	r16, r12
    42b6:	1d 09       	sbc	r17, r13
    42b8:	b6 95       	lsr	r27
    42ba:	a7 95       	ror	r26
    42bc:	97 95       	ror	r25
    42be:	87 95       	ror	r24
    42c0:	ee 0c       	add	r14, r14
    42c2:	ff 1c       	adc	r15, r15
    42c4:	00 1f       	adc	r16, r16
    42c6:	11 1f       	adc	r17, r17
    42c8:	6f 5f       	subi	r22, 0xFF	; 255
    42ca:	7f 4f       	sbci	r23, 0xFF	; 255
    42cc:	6f 31       	cpi	r22, 0x1F	; 31
    42ce:	71 05       	cpc	r23, r1
    42d0:	31 f7       	brne	.-52     	; 0x429e <__divsf3+0xda>
    42d2:	da 01       	movw	r26, r20
    42d4:	c9 01       	movw	r24, r18
    42d6:	8f 77       	andi	r24, 0x7F	; 127
    42d8:	90 70       	andi	r25, 0x00	; 0
    42da:	a0 70       	andi	r26, 0x00	; 0
    42dc:	b0 70       	andi	r27, 0x00	; 0
    42de:	80 34       	cpi	r24, 0x40	; 64
    42e0:	91 05       	cpc	r25, r1
    42e2:	a1 05       	cpc	r26, r1
    42e4:	b1 05       	cpc	r27, r1
    42e6:	61 f4       	brne	.+24     	; 0x4300 <__divsf3+0x13c>
    42e8:	27 fd       	sbrc	r18, 7
    42ea:	0a c0       	rjmp	.+20     	; 0x4300 <__divsf3+0x13c>
    42ec:	e1 14       	cp	r14, r1
    42ee:	f1 04       	cpc	r15, r1
    42f0:	01 05       	cpc	r16, r1
    42f2:	11 05       	cpc	r17, r1
    42f4:	29 f0       	breq	.+10     	; 0x4300 <__divsf3+0x13c>
    42f6:	20 5c       	subi	r18, 0xC0	; 192
    42f8:	3f 4f       	sbci	r19, 0xFF	; 255
    42fa:	4f 4f       	sbci	r20, 0xFF	; 255
    42fc:	5f 4f       	sbci	r21, 0xFF	; 255
    42fe:	20 78       	andi	r18, 0x80	; 128
    4300:	2d 87       	std	Y+13, r18	; 0x0d
    4302:	3e 87       	std	Y+14, r19	; 0x0e
    4304:	4f 87       	std	Y+15, r20	; 0x0f
    4306:	58 8b       	std	Y+16, r21	; 0x10
    4308:	be 01       	movw	r22, r28
    430a:	67 5f       	subi	r22, 0xF7	; 247
    430c:	7f 4f       	sbci	r23, 0xFF	; 255
    430e:	cb 01       	movw	r24, r22
    4310:	0e 94 38 23 	call	0x4670	; 0x4670 <__pack_f>
    4314:	68 96       	adiw	r28, 0x18	; 24
    4316:	ea e0       	ldi	r30, 0x0A	; 10
    4318:	0c 94 99 34 	jmp	0x6932	; 0x6932 <__epilogue_restores__+0x10>

0000431c <__gesf2>:
    431c:	a8 e1       	ldi	r26, 0x18	; 24
    431e:	b0 e0       	ldi	r27, 0x00	; 0
    4320:	e4 e9       	ldi	r30, 0x94	; 148
    4322:	f1 e2       	ldi	r31, 0x21	; 33
    4324:	0c 94 81 34 	jmp	0x6902	; 0x6902 <__prologue_saves__+0x18>
    4328:	69 83       	std	Y+1, r22	; 0x01
    432a:	7a 83       	std	Y+2, r23	; 0x02
    432c:	8b 83       	std	Y+3, r24	; 0x03
    432e:	9c 83       	std	Y+4, r25	; 0x04
    4330:	2d 83       	std	Y+5, r18	; 0x05
    4332:	3e 83       	std	Y+6, r19	; 0x06
    4334:	4f 83       	std	Y+7, r20	; 0x07
    4336:	58 87       	std	Y+8, r21	; 0x08
    4338:	89 e0       	ldi	r24, 0x09	; 9
    433a:	e8 2e       	mov	r14, r24
    433c:	f1 2c       	mov	r15, r1
    433e:	ec 0e       	add	r14, r28
    4340:	fd 1e       	adc	r15, r29
    4342:	ce 01       	movw	r24, r28
    4344:	01 96       	adiw	r24, 0x01	; 1
    4346:	b7 01       	movw	r22, r14
    4348:	0e 94 0d 24 	call	0x481a	; 0x481a <__unpack_f>
    434c:	8e 01       	movw	r16, r28
    434e:	0f 5e       	subi	r16, 0xEF	; 239
    4350:	1f 4f       	sbci	r17, 0xFF	; 255
    4352:	ce 01       	movw	r24, r28
    4354:	05 96       	adiw	r24, 0x05	; 5
    4356:	b8 01       	movw	r22, r16
    4358:	0e 94 0d 24 	call	0x481a	; 0x481a <__unpack_f>
    435c:	89 85       	ldd	r24, Y+9	; 0x09
    435e:	82 30       	cpi	r24, 0x02	; 2
    4360:	40 f0       	brcs	.+16     	; 0x4372 <__gesf2+0x56>
    4362:	89 89       	ldd	r24, Y+17	; 0x11
    4364:	82 30       	cpi	r24, 0x02	; 2
    4366:	28 f0       	brcs	.+10     	; 0x4372 <__gesf2+0x56>
    4368:	c7 01       	movw	r24, r14
    436a:	b8 01       	movw	r22, r16
    436c:	0e 94 85 24 	call	0x490a	; 0x490a <__fpcmp_parts_f>
    4370:	01 c0       	rjmp	.+2      	; 0x4374 <__gesf2+0x58>
    4372:	8f ef       	ldi	r24, 0xFF	; 255
    4374:	68 96       	adiw	r28, 0x18	; 24
    4376:	e6 e0       	ldi	r30, 0x06	; 6
    4378:	0c 94 9d 34 	jmp	0x693a	; 0x693a <__epilogue_restores__+0x18>

0000437c <__floatsisf>:
    437c:	a8 e0       	ldi	r26, 0x08	; 8
    437e:	b0 e0       	ldi	r27, 0x00	; 0
    4380:	e4 ec       	ldi	r30, 0xC4	; 196
    4382:	f1 e2       	ldi	r31, 0x21	; 33
    4384:	0c 94 7e 34 	jmp	0x68fc	; 0x68fc <__prologue_saves__+0x12>
    4388:	9b 01       	movw	r18, r22
    438a:	ac 01       	movw	r20, r24
    438c:	83 e0       	ldi	r24, 0x03	; 3
    438e:	89 83       	std	Y+1, r24	; 0x01
    4390:	da 01       	movw	r26, r20
    4392:	c9 01       	movw	r24, r18
    4394:	88 27       	eor	r24, r24
    4396:	b7 fd       	sbrc	r27, 7
    4398:	83 95       	inc	r24
    439a:	99 27       	eor	r25, r25
    439c:	aa 27       	eor	r26, r26
    439e:	bb 27       	eor	r27, r27
    43a0:	b8 2e       	mov	r11, r24
    43a2:	21 15       	cp	r18, r1
    43a4:	31 05       	cpc	r19, r1
    43a6:	41 05       	cpc	r20, r1
    43a8:	51 05       	cpc	r21, r1
    43aa:	19 f4       	brne	.+6      	; 0x43b2 <__floatsisf+0x36>
    43ac:	82 e0       	ldi	r24, 0x02	; 2
    43ae:	89 83       	std	Y+1, r24	; 0x01
    43b0:	3a c0       	rjmp	.+116    	; 0x4426 <__floatsisf+0xaa>
    43b2:	88 23       	and	r24, r24
    43b4:	a9 f0       	breq	.+42     	; 0x43e0 <__floatsisf+0x64>
    43b6:	20 30       	cpi	r18, 0x00	; 0
    43b8:	80 e0       	ldi	r24, 0x00	; 0
    43ba:	38 07       	cpc	r19, r24
    43bc:	80 e0       	ldi	r24, 0x00	; 0
    43be:	48 07       	cpc	r20, r24
    43c0:	80 e8       	ldi	r24, 0x80	; 128
    43c2:	58 07       	cpc	r21, r24
    43c4:	29 f4       	brne	.+10     	; 0x43d0 <__floatsisf+0x54>
    43c6:	60 e0       	ldi	r22, 0x00	; 0
    43c8:	70 e0       	ldi	r23, 0x00	; 0
    43ca:	80 e0       	ldi	r24, 0x00	; 0
    43cc:	9f ec       	ldi	r25, 0xCF	; 207
    43ce:	30 c0       	rjmp	.+96     	; 0x4430 <__floatsisf+0xb4>
    43d0:	ee 24       	eor	r14, r14
    43d2:	ff 24       	eor	r15, r15
    43d4:	87 01       	movw	r16, r14
    43d6:	e2 1a       	sub	r14, r18
    43d8:	f3 0a       	sbc	r15, r19
    43da:	04 0b       	sbc	r16, r20
    43dc:	15 0b       	sbc	r17, r21
    43de:	02 c0       	rjmp	.+4      	; 0x43e4 <__floatsisf+0x68>
    43e0:	79 01       	movw	r14, r18
    43e2:	8a 01       	movw	r16, r20
    43e4:	8e e1       	ldi	r24, 0x1E	; 30
    43e6:	c8 2e       	mov	r12, r24
    43e8:	d1 2c       	mov	r13, r1
    43ea:	dc 82       	std	Y+4, r13	; 0x04
    43ec:	cb 82       	std	Y+3, r12	; 0x03
    43ee:	ed 82       	std	Y+5, r14	; 0x05
    43f0:	fe 82       	std	Y+6, r15	; 0x06
    43f2:	0f 83       	std	Y+7, r16	; 0x07
    43f4:	18 87       	std	Y+8, r17	; 0x08
    43f6:	c8 01       	movw	r24, r16
    43f8:	b7 01       	movw	r22, r14
    43fa:	0e 94 e9 22 	call	0x45d2	; 0x45d2 <__clzsi2>
    43fe:	01 97       	sbiw	r24, 0x01	; 1
    4400:	18 16       	cp	r1, r24
    4402:	19 06       	cpc	r1, r25
    4404:	84 f4       	brge	.+32     	; 0x4426 <__floatsisf+0xaa>
    4406:	08 2e       	mov	r0, r24
    4408:	04 c0       	rjmp	.+8      	; 0x4412 <__floatsisf+0x96>
    440a:	ee 0c       	add	r14, r14
    440c:	ff 1c       	adc	r15, r15
    440e:	00 1f       	adc	r16, r16
    4410:	11 1f       	adc	r17, r17
    4412:	0a 94       	dec	r0
    4414:	d2 f7       	brpl	.-12     	; 0x440a <__floatsisf+0x8e>
    4416:	ed 82       	std	Y+5, r14	; 0x05
    4418:	fe 82       	std	Y+6, r15	; 0x06
    441a:	0f 83       	std	Y+7, r16	; 0x07
    441c:	18 87       	std	Y+8, r17	; 0x08
    441e:	c8 1a       	sub	r12, r24
    4420:	d9 0a       	sbc	r13, r25
    4422:	dc 82       	std	Y+4, r13	; 0x04
    4424:	cb 82       	std	Y+3, r12	; 0x03
    4426:	ba 82       	std	Y+2, r11	; 0x02
    4428:	ce 01       	movw	r24, r28
    442a:	01 96       	adiw	r24, 0x01	; 1
    442c:	0e 94 38 23 	call	0x4670	; 0x4670 <__pack_f>
    4430:	28 96       	adiw	r28, 0x08	; 8
    4432:	e9 e0       	ldi	r30, 0x09	; 9
    4434:	0c 94 9a 34 	jmp	0x6934	; 0x6934 <__epilogue_restores__+0x12>

00004438 <__fixsfsi>:
    4438:	ac e0       	ldi	r26, 0x0C	; 12
    443a:	b0 e0       	ldi	r27, 0x00	; 0
    443c:	e2 e2       	ldi	r30, 0x22	; 34
    443e:	f2 e2       	ldi	r31, 0x22	; 34
    4440:	0c 94 85 34 	jmp	0x690a	; 0x690a <__prologue_saves__+0x20>
    4444:	69 83       	std	Y+1, r22	; 0x01
    4446:	7a 83       	std	Y+2, r23	; 0x02
    4448:	8b 83       	std	Y+3, r24	; 0x03
    444a:	9c 83       	std	Y+4, r25	; 0x04
    444c:	ce 01       	movw	r24, r28
    444e:	01 96       	adiw	r24, 0x01	; 1
    4450:	be 01       	movw	r22, r28
    4452:	6b 5f       	subi	r22, 0xFB	; 251
    4454:	7f 4f       	sbci	r23, 0xFF	; 255
    4456:	0e 94 0d 24 	call	0x481a	; 0x481a <__unpack_f>
    445a:	8d 81       	ldd	r24, Y+5	; 0x05
    445c:	82 30       	cpi	r24, 0x02	; 2
    445e:	61 f1       	breq	.+88     	; 0x44b8 <__fixsfsi+0x80>
    4460:	82 30       	cpi	r24, 0x02	; 2
    4462:	50 f1       	brcs	.+84     	; 0x44b8 <__fixsfsi+0x80>
    4464:	84 30       	cpi	r24, 0x04	; 4
    4466:	21 f4       	brne	.+8      	; 0x4470 <__fixsfsi+0x38>
    4468:	8e 81       	ldd	r24, Y+6	; 0x06
    446a:	88 23       	and	r24, r24
    446c:	51 f1       	breq	.+84     	; 0x44c2 <__fixsfsi+0x8a>
    446e:	2e c0       	rjmp	.+92     	; 0x44cc <__fixsfsi+0x94>
    4470:	2f 81       	ldd	r18, Y+7	; 0x07
    4472:	38 85       	ldd	r19, Y+8	; 0x08
    4474:	37 fd       	sbrc	r19, 7
    4476:	20 c0       	rjmp	.+64     	; 0x44b8 <__fixsfsi+0x80>
    4478:	6e 81       	ldd	r22, Y+6	; 0x06
    447a:	2f 31       	cpi	r18, 0x1F	; 31
    447c:	31 05       	cpc	r19, r1
    447e:	1c f0       	brlt	.+6      	; 0x4486 <__fixsfsi+0x4e>
    4480:	66 23       	and	r22, r22
    4482:	f9 f0       	breq	.+62     	; 0x44c2 <__fixsfsi+0x8a>
    4484:	23 c0       	rjmp	.+70     	; 0x44cc <__fixsfsi+0x94>
    4486:	8e e1       	ldi	r24, 0x1E	; 30
    4488:	90 e0       	ldi	r25, 0x00	; 0
    448a:	82 1b       	sub	r24, r18
    448c:	93 0b       	sbc	r25, r19
    448e:	29 85       	ldd	r18, Y+9	; 0x09
    4490:	3a 85       	ldd	r19, Y+10	; 0x0a
    4492:	4b 85       	ldd	r20, Y+11	; 0x0b
    4494:	5c 85       	ldd	r21, Y+12	; 0x0c
    4496:	04 c0       	rjmp	.+8      	; 0x44a0 <__fixsfsi+0x68>
    4498:	56 95       	lsr	r21
    449a:	47 95       	ror	r20
    449c:	37 95       	ror	r19
    449e:	27 95       	ror	r18
    44a0:	8a 95       	dec	r24
    44a2:	d2 f7       	brpl	.-12     	; 0x4498 <__fixsfsi+0x60>
    44a4:	66 23       	and	r22, r22
    44a6:	b1 f0       	breq	.+44     	; 0x44d4 <__fixsfsi+0x9c>
    44a8:	50 95       	com	r21
    44aa:	40 95       	com	r20
    44ac:	30 95       	com	r19
    44ae:	21 95       	neg	r18
    44b0:	3f 4f       	sbci	r19, 0xFF	; 255
    44b2:	4f 4f       	sbci	r20, 0xFF	; 255
    44b4:	5f 4f       	sbci	r21, 0xFF	; 255
    44b6:	0e c0       	rjmp	.+28     	; 0x44d4 <__fixsfsi+0x9c>
    44b8:	20 e0       	ldi	r18, 0x00	; 0
    44ba:	30 e0       	ldi	r19, 0x00	; 0
    44bc:	40 e0       	ldi	r20, 0x00	; 0
    44be:	50 e0       	ldi	r21, 0x00	; 0
    44c0:	09 c0       	rjmp	.+18     	; 0x44d4 <__fixsfsi+0x9c>
    44c2:	2f ef       	ldi	r18, 0xFF	; 255
    44c4:	3f ef       	ldi	r19, 0xFF	; 255
    44c6:	4f ef       	ldi	r20, 0xFF	; 255
    44c8:	5f e7       	ldi	r21, 0x7F	; 127
    44ca:	04 c0       	rjmp	.+8      	; 0x44d4 <__fixsfsi+0x9c>
    44cc:	20 e0       	ldi	r18, 0x00	; 0
    44ce:	30 e0       	ldi	r19, 0x00	; 0
    44d0:	40 e0       	ldi	r20, 0x00	; 0
    44d2:	50 e8       	ldi	r21, 0x80	; 128
    44d4:	b9 01       	movw	r22, r18
    44d6:	ca 01       	movw	r24, r20
    44d8:	2c 96       	adiw	r28, 0x0c	; 12
    44da:	e2 e0       	ldi	r30, 0x02	; 2
    44dc:	0c 94 a1 34 	jmp	0x6942	; 0x6942 <__epilogue_restores__+0x20>

000044e0 <__floatunsisf>:
    44e0:	a8 e0       	ldi	r26, 0x08	; 8
    44e2:	b0 e0       	ldi	r27, 0x00	; 0
    44e4:	e6 e7       	ldi	r30, 0x76	; 118
    44e6:	f2 e2       	ldi	r31, 0x22	; 34
    44e8:	0c 94 7d 34 	jmp	0x68fa	; 0x68fa <__prologue_saves__+0x10>
    44ec:	7b 01       	movw	r14, r22
    44ee:	8c 01       	movw	r16, r24
    44f0:	61 15       	cp	r22, r1
    44f2:	71 05       	cpc	r23, r1
    44f4:	81 05       	cpc	r24, r1
    44f6:	91 05       	cpc	r25, r1
    44f8:	19 f4       	brne	.+6      	; 0x4500 <__floatunsisf+0x20>
    44fa:	82 e0       	ldi	r24, 0x02	; 2
    44fc:	89 83       	std	Y+1, r24	; 0x01
    44fe:	60 c0       	rjmp	.+192    	; 0x45c0 <__floatunsisf+0xe0>
    4500:	83 e0       	ldi	r24, 0x03	; 3
    4502:	89 83       	std	Y+1, r24	; 0x01
    4504:	8e e1       	ldi	r24, 0x1E	; 30
    4506:	c8 2e       	mov	r12, r24
    4508:	d1 2c       	mov	r13, r1
    450a:	dc 82       	std	Y+4, r13	; 0x04
    450c:	cb 82       	std	Y+3, r12	; 0x03
    450e:	ed 82       	std	Y+5, r14	; 0x05
    4510:	fe 82       	std	Y+6, r15	; 0x06
    4512:	0f 83       	std	Y+7, r16	; 0x07
    4514:	18 87       	std	Y+8, r17	; 0x08
    4516:	c8 01       	movw	r24, r16
    4518:	b7 01       	movw	r22, r14
    451a:	0e 94 e9 22 	call	0x45d2	; 0x45d2 <__clzsi2>
    451e:	fc 01       	movw	r30, r24
    4520:	31 97       	sbiw	r30, 0x01	; 1
    4522:	f7 ff       	sbrs	r31, 7
    4524:	3b c0       	rjmp	.+118    	; 0x459c <__floatunsisf+0xbc>
    4526:	22 27       	eor	r18, r18
    4528:	33 27       	eor	r19, r19
    452a:	2e 1b       	sub	r18, r30
    452c:	3f 0b       	sbc	r19, r31
    452e:	57 01       	movw	r10, r14
    4530:	68 01       	movw	r12, r16
    4532:	02 2e       	mov	r0, r18
    4534:	04 c0       	rjmp	.+8      	; 0x453e <__floatunsisf+0x5e>
    4536:	d6 94       	lsr	r13
    4538:	c7 94       	ror	r12
    453a:	b7 94       	ror	r11
    453c:	a7 94       	ror	r10
    453e:	0a 94       	dec	r0
    4540:	d2 f7       	brpl	.-12     	; 0x4536 <__floatunsisf+0x56>
    4542:	40 e0       	ldi	r20, 0x00	; 0
    4544:	50 e0       	ldi	r21, 0x00	; 0
    4546:	60 e0       	ldi	r22, 0x00	; 0
    4548:	70 e0       	ldi	r23, 0x00	; 0
    454a:	81 e0       	ldi	r24, 0x01	; 1
    454c:	90 e0       	ldi	r25, 0x00	; 0
    454e:	a0 e0       	ldi	r26, 0x00	; 0
    4550:	b0 e0       	ldi	r27, 0x00	; 0
    4552:	04 c0       	rjmp	.+8      	; 0x455c <__floatunsisf+0x7c>
    4554:	88 0f       	add	r24, r24
    4556:	99 1f       	adc	r25, r25
    4558:	aa 1f       	adc	r26, r26
    455a:	bb 1f       	adc	r27, r27
    455c:	2a 95       	dec	r18
    455e:	d2 f7       	brpl	.-12     	; 0x4554 <__floatunsisf+0x74>
    4560:	01 97       	sbiw	r24, 0x01	; 1
    4562:	a1 09       	sbc	r26, r1
    4564:	b1 09       	sbc	r27, r1
    4566:	8e 21       	and	r24, r14
    4568:	9f 21       	and	r25, r15
    456a:	a0 23       	and	r26, r16
    456c:	b1 23       	and	r27, r17
    456e:	00 97       	sbiw	r24, 0x00	; 0
    4570:	a1 05       	cpc	r26, r1
    4572:	b1 05       	cpc	r27, r1
    4574:	21 f0       	breq	.+8      	; 0x457e <__floatunsisf+0x9e>
    4576:	41 e0       	ldi	r20, 0x01	; 1
    4578:	50 e0       	ldi	r21, 0x00	; 0
    457a:	60 e0       	ldi	r22, 0x00	; 0
    457c:	70 e0       	ldi	r23, 0x00	; 0
    457e:	4a 29       	or	r20, r10
    4580:	5b 29       	or	r21, r11
    4582:	6c 29       	or	r22, r12
    4584:	7d 29       	or	r23, r13
    4586:	4d 83       	std	Y+5, r20	; 0x05
    4588:	5e 83       	std	Y+6, r21	; 0x06
    458a:	6f 83       	std	Y+7, r22	; 0x07
    458c:	78 87       	std	Y+8, r23	; 0x08
    458e:	8e e1       	ldi	r24, 0x1E	; 30
    4590:	90 e0       	ldi	r25, 0x00	; 0
    4592:	8e 1b       	sub	r24, r30
    4594:	9f 0b       	sbc	r25, r31
    4596:	9c 83       	std	Y+4, r25	; 0x04
    4598:	8b 83       	std	Y+3, r24	; 0x03
    459a:	12 c0       	rjmp	.+36     	; 0x45c0 <__floatunsisf+0xe0>
    459c:	30 97       	sbiw	r30, 0x00	; 0
    459e:	81 f0       	breq	.+32     	; 0x45c0 <__floatunsisf+0xe0>
    45a0:	0e 2e       	mov	r0, r30
    45a2:	04 c0       	rjmp	.+8      	; 0x45ac <__floatunsisf+0xcc>
    45a4:	ee 0c       	add	r14, r14
    45a6:	ff 1c       	adc	r15, r15
    45a8:	00 1f       	adc	r16, r16
    45aa:	11 1f       	adc	r17, r17
    45ac:	0a 94       	dec	r0
    45ae:	d2 f7       	brpl	.-12     	; 0x45a4 <__floatunsisf+0xc4>
    45b0:	ed 82       	std	Y+5, r14	; 0x05
    45b2:	fe 82       	std	Y+6, r15	; 0x06
    45b4:	0f 83       	std	Y+7, r16	; 0x07
    45b6:	18 87       	std	Y+8, r17	; 0x08
    45b8:	ce 1a       	sub	r12, r30
    45ba:	df 0a       	sbc	r13, r31
    45bc:	dc 82       	std	Y+4, r13	; 0x04
    45be:	cb 82       	std	Y+3, r12	; 0x03
    45c0:	1a 82       	std	Y+2, r1	; 0x02
    45c2:	ce 01       	movw	r24, r28
    45c4:	01 96       	adiw	r24, 0x01	; 1
    45c6:	0e 94 38 23 	call	0x4670	; 0x4670 <__pack_f>
    45ca:	28 96       	adiw	r28, 0x08	; 8
    45cc:	ea e0       	ldi	r30, 0x0A	; 10
    45ce:	0c 94 99 34 	jmp	0x6932	; 0x6932 <__epilogue_restores__+0x10>

000045d2 <__clzsi2>:
    45d2:	ef 92       	push	r14
    45d4:	ff 92       	push	r15
    45d6:	0f 93       	push	r16
    45d8:	1f 93       	push	r17
    45da:	7b 01       	movw	r14, r22
    45dc:	8c 01       	movw	r16, r24
    45de:	80 e0       	ldi	r24, 0x00	; 0
    45e0:	e8 16       	cp	r14, r24
    45e2:	80 e0       	ldi	r24, 0x00	; 0
    45e4:	f8 06       	cpc	r15, r24
    45e6:	81 e0       	ldi	r24, 0x01	; 1
    45e8:	08 07       	cpc	r16, r24
    45ea:	80 e0       	ldi	r24, 0x00	; 0
    45ec:	18 07       	cpc	r17, r24
    45ee:	88 f4       	brcc	.+34     	; 0x4612 <__clzsi2+0x40>
    45f0:	8f ef       	ldi	r24, 0xFF	; 255
    45f2:	e8 16       	cp	r14, r24
    45f4:	f1 04       	cpc	r15, r1
    45f6:	01 05       	cpc	r16, r1
    45f8:	11 05       	cpc	r17, r1
    45fa:	31 f0       	breq	.+12     	; 0x4608 <__clzsi2+0x36>
    45fc:	28 f0       	brcs	.+10     	; 0x4608 <__clzsi2+0x36>
    45fe:	88 e0       	ldi	r24, 0x08	; 8
    4600:	90 e0       	ldi	r25, 0x00	; 0
    4602:	a0 e0       	ldi	r26, 0x00	; 0
    4604:	b0 e0       	ldi	r27, 0x00	; 0
    4606:	17 c0       	rjmp	.+46     	; 0x4636 <__clzsi2+0x64>
    4608:	80 e0       	ldi	r24, 0x00	; 0
    460a:	90 e0       	ldi	r25, 0x00	; 0
    460c:	a0 e0       	ldi	r26, 0x00	; 0
    460e:	b0 e0       	ldi	r27, 0x00	; 0
    4610:	12 c0       	rjmp	.+36     	; 0x4636 <__clzsi2+0x64>
    4612:	80 e0       	ldi	r24, 0x00	; 0
    4614:	e8 16       	cp	r14, r24
    4616:	80 e0       	ldi	r24, 0x00	; 0
    4618:	f8 06       	cpc	r15, r24
    461a:	80 e0       	ldi	r24, 0x00	; 0
    461c:	08 07       	cpc	r16, r24
    461e:	81 e0       	ldi	r24, 0x01	; 1
    4620:	18 07       	cpc	r17, r24
    4622:	28 f0       	brcs	.+10     	; 0x462e <__clzsi2+0x5c>
    4624:	88 e1       	ldi	r24, 0x18	; 24
    4626:	90 e0       	ldi	r25, 0x00	; 0
    4628:	a0 e0       	ldi	r26, 0x00	; 0
    462a:	b0 e0       	ldi	r27, 0x00	; 0
    462c:	04 c0       	rjmp	.+8      	; 0x4636 <__clzsi2+0x64>
    462e:	80 e1       	ldi	r24, 0x10	; 16
    4630:	90 e0       	ldi	r25, 0x00	; 0
    4632:	a0 e0       	ldi	r26, 0x00	; 0
    4634:	b0 e0       	ldi	r27, 0x00	; 0
    4636:	20 e2       	ldi	r18, 0x20	; 32
    4638:	30 e0       	ldi	r19, 0x00	; 0
    463a:	40 e0       	ldi	r20, 0x00	; 0
    463c:	50 e0       	ldi	r21, 0x00	; 0
    463e:	28 1b       	sub	r18, r24
    4640:	39 0b       	sbc	r19, r25
    4642:	4a 0b       	sbc	r20, r26
    4644:	5b 0b       	sbc	r21, r27
    4646:	04 c0       	rjmp	.+8      	; 0x4650 <__clzsi2+0x7e>
    4648:	16 95       	lsr	r17
    464a:	07 95       	ror	r16
    464c:	f7 94       	ror	r15
    464e:	e7 94       	ror	r14
    4650:	8a 95       	dec	r24
    4652:	d2 f7       	brpl	.-12     	; 0x4648 <__clzsi2+0x76>
    4654:	f7 01       	movw	r30, r14
    4656:	eb 51       	subi	r30, 0x1B	; 27
    4658:	ff 4f       	sbci	r31, 0xFF	; 255
    465a:	80 81       	ld	r24, Z
    465c:	28 1b       	sub	r18, r24
    465e:	31 09       	sbc	r19, r1
    4660:	41 09       	sbc	r20, r1
    4662:	51 09       	sbc	r21, r1
    4664:	c9 01       	movw	r24, r18
    4666:	1f 91       	pop	r17
    4668:	0f 91       	pop	r16
    466a:	ff 90       	pop	r15
    466c:	ef 90       	pop	r14
    466e:	08 95       	ret

00004670 <__pack_f>:
    4670:	df 92       	push	r13
    4672:	ef 92       	push	r14
    4674:	ff 92       	push	r15
    4676:	0f 93       	push	r16
    4678:	1f 93       	push	r17
    467a:	fc 01       	movw	r30, r24
    467c:	e4 80       	ldd	r14, Z+4	; 0x04
    467e:	f5 80       	ldd	r15, Z+5	; 0x05
    4680:	06 81       	ldd	r16, Z+6	; 0x06
    4682:	17 81       	ldd	r17, Z+7	; 0x07
    4684:	d1 80       	ldd	r13, Z+1	; 0x01
    4686:	80 81       	ld	r24, Z
    4688:	82 30       	cpi	r24, 0x02	; 2
    468a:	48 f4       	brcc	.+18     	; 0x469e <__pack_f+0x2e>
    468c:	80 e0       	ldi	r24, 0x00	; 0
    468e:	90 e0       	ldi	r25, 0x00	; 0
    4690:	a0 e1       	ldi	r26, 0x10	; 16
    4692:	b0 e0       	ldi	r27, 0x00	; 0
    4694:	e8 2a       	or	r14, r24
    4696:	f9 2a       	or	r15, r25
    4698:	0a 2b       	or	r16, r26
    469a:	1b 2b       	or	r17, r27
    469c:	a5 c0       	rjmp	.+330    	; 0x47e8 <__pack_f+0x178>
    469e:	84 30       	cpi	r24, 0x04	; 4
    46a0:	09 f4       	brne	.+2      	; 0x46a4 <__pack_f+0x34>
    46a2:	9f c0       	rjmp	.+318    	; 0x47e2 <__pack_f+0x172>
    46a4:	82 30       	cpi	r24, 0x02	; 2
    46a6:	21 f4       	brne	.+8      	; 0x46b0 <__pack_f+0x40>
    46a8:	ee 24       	eor	r14, r14
    46aa:	ff 24       	eor	r15, r15
    46ac:	87 01       	movw	r16, r14
    46ae:	05 c0       	rjmp	.+10     	; 0x46ba <__pack_f+0x4a>
    46b0:	e1 14       	cp	r14, r1
    46b2:	f1 04       	cpc	r15, r1
    46b4:	01 05       	cpc	r16, r1
    46b6:	11 05       	cpc	r17, r1
    46b8:	19 f4       	brne	.+6      	; 0x46c0 <__pack_f+0x50>
    46ba:	e0 e0       	ldi	r30, 0x00	; 0
    46bc:	f0 e0       	ldi	r31, 0x00	; 0
    46be:	96 c0       	rjmp	.+300    	; 0x47ec <__pack_f+0x17c>
    46c0:	62 81       	ldd	r22, Z+2	; 0x02
    46c2:	73 81       	ldd	r23, Z+3	; 0x03
    46c4:	9f ef       	ldi	r25, 0xFF	; 255
    46c6:	62 38       	cpi	r22, 0x82	; 130
    46c8:	79 07       	cpc	r23, r25
    46ca:	0c f0       	brlt	.+2      	; 0x46ce <__pack_f+0x5e>
    46cc:	5b c0       	rjmp	.+182    	; 0x4784 <__pack_f+0x114>
    46ce:	22 e8       	ldi	r18, 0x82	; 130
    46d0:	3f ef       	ldi	r19, 0xFF	; 255
    46d2:	26 1b       	sub	r18, r22
    46d4:	37 0b       	sbc	r19, r23
    46d6:	2a 31       	cpi	r18, 0x1A	; 26
    46d8:	31 05       	cpc	r19, r1
    46da:	2c f0       	brlt	.+10     	; 0x46e6 <__pack_f+0x76>
    46dc:	20 e0       	ldi	r18, 0x00	; 0
    46de:	30 e0       	ldi	r19, 0x00	; 0
    46e0:	40 e0       	ldi	r20, 0x00	; 0
    46e2:	50 e0       	ldi	r21, 0x00	; 0
    46e4:	2a c0       	rjmp	.+84     	; 0x473a <__pack_f+0xca>
    46e6:	b8 01       	movw	r22, r16
    46e8:	a7 01       	movw	r20, r14
    46ea:	02 2e       	mov	r0, r18
    46ec:	04 c0       	rjmp	.+8      	; 0x46f6 <__pack_f+0x86>
    46ee:	76 95       	lsr	r23
    46f0:	67 95       	ror	r22
    46f2:	57 95       	ror	r21
    46f4:	47 95       	ror	r20
    46f6:	0a 94       	dec	r0
    46f8:	d2 f7       	brpl	.-12     	; 0x46ee <__pack_f+0x7e>
    46fa:	81 e0       	ldi	r24, 0x01	; 1
    46fc:	90 e0       	ldi	r25, 0x00	; 0
    46fe:	a0 e0       	ldi	r26, 0x00	; 0
    4700:	b0 e0       	ldi	r27, 0x00	; 0
    4702:	04 c0       	rjmp	.+8      	; 0x470c <__pack_f+0x9c>
    4704:	88 0f       	add	r24, r24
    4706:	99 1f       	adc	r25, r25
    4708:	aa 1f       	adc	r26, r26
    470a:	bb 1f       	adc	r27, r27
    470c:	2a 95       	dec	r18
    470e:	d2 f7       	brpl	.-12     	; 0x4704 <__pack_f+0x94>
    4710:	01 97       	sbiw	r24, 0x01	; 1
    4712:	a1 09       	sbc	r26, r1
    4714:	b1 09       	sbc	r27, r1
    4716:	8e 21       	and	r24, r14
    4718:	9f 21       	and	r25, r15
    471a:	a0 23       	and	r26, r16
    471c:	b1 23       	and	r27, r17
    471e:	00 97       	sbiw	r24, 0x00	; 0
    4720:	a1 05       	cpc	r26, r1
    4722:	b1 05       	cpc	r27, r1
    4724:	21 f0       	breq	.+8      	; 0x472e <__pack_f+0xbe>
    4726:	81 e0       	ldi	r24, 0x01	; 1
    4728:	90 e0       	ldi	r25, 0x00	; 0
    472a:	a0 e0       	ldi	r26, 0x00	; 0
    472c:	b0 e0       	ldi	r27, 0x00	; 0
    472e:	9a 01       	movw	r18, r20
    4730:	ab 01       	movw	r20, r22
    4732:	28 2b       	or	r18, r24
    4734:	39 2b       	or	r19, r25
    4736:	4a 2b       	or	r20, r26
    4738:	5b 2b       	or	r21, r27
    473a:	da 01       	movw	r26, r20
    473c:	c9 01       	movw	r24, r18
    473e:	8f 77       	andi	r24, 0x7F	; 127
    4740:	90 70       	andi	r25, 0x00	; 0
    4742:	a0 70       	andi	r26, 0x00	; 0
    4744:	b0 70       	andi	r27, 0x00	; 0
    4746:	80 34       	cpi	r24, 0x40	; 64
    4748:	91 05       	cpc	r25, r1
    474a:	a1 05       	cpc	r26, r1
    474c:	b1 05       	cpc	r27, r1
    474e:	39 f4       	brne	.+14     	; 0x475e <__pack_f+0xee>
    4750:	27 ff       	sbrs	r18, 7
    4752:	09 c0       	rjmp	.+18     	; 0x4766 <__pack_f+0xf6>
    4754:	20 5c       	subi	r18, 0xC0	; 192
    4756:	3f 4f       	sbci	r19, 0xFF	; 255
    4758:	4f 4f       	sbci	r20, 0xFF	; 255
    475a:	5f 4f       	sbci	r21, 0xFF	; 255
    475c:	04 c0       	rjmp	.+8      	; 0x4766 <__pack_f+0xf6>
    475e:	21 5c       	subi	r18, 0xC1	; 193
    4760:	3f 4f       	sbci	r19, 0xFF	; 255
    4762:	4f 4f       	sbci	r20, 0xFF	; 255
    4764:	5f 4f       	sbci	r21, 0xFF	; 255
    4766:	e0 e0       	ldi	r30, 0x00	; 0
    4768:	f0 e0       	ldi	r31, 0x00	; 0
    476a:	20 30       	cpi	r18, 0x00	; 0
    476c:	a0 e0       	ldi	r26, 0x00	; 0
    476e:	3a 07       	cpc	r19, r26
    4770:	a0 e0       	ldi	r26, 0x00	; 0
    4772:	4a 07       	cpc	r20, r26
    4774:	a0 e4       	ldi	r26, 0x40	; 64
    4776:	5a 07       	cpc	r21, r26
    4778:	10 f0       	brcs	.+4      	; 0x477e <__pack_f+0x10e>
    477a:	e1 e0       	ldi	r30, 0x01	; 1
    477c:	f0 e0       	ldi	r31, 0x00	; 0
    477e:	79 01       	movw	r14, r18
    4780:	8a 01       	movw	r16, r20
    4782:	27 c0       	rjmp	.+78     	; 0x47d2 <__pack_f+0x162>
    4784:	60 38       	cpi	r22, 0x80	; 128
    4786:	71 05       	cpc	r23, r1
    4788:	64 f5       	brge	.+88     	; 0x47e2 <__pack_f+0x172>
    478a:	fb 01       	movw	r30, r22
    478c:	e1 58       	subi	r30, 0x81	; 129
    478e:	ff 4f       	sbci	r31, 0xFF	; 255
    4790:	d8 01       	movw	r26, r16
    4792:	c7 01       	movw	r24, r14
    4794:	8f 77       	andi	r24, 0x7F	; 127
    4796:	90 70       	andi	r25, 0x00	; 0
    4798:	a0 70       	andi	r26, 0x00	; 0
    479a:	b0 70       	andi	r27, 0x00	; 0
    479c:	80 34       	cpi	r24, 0x40	; 64
    479e:	91 05       	cpc	r25, r1
    47a0:	a1 05       	cpc	r26, r1
    47a2:	b1 05       	cpc	r27, r1
    47a4:	39 f4       	brne	.+14     	; 0x47b4 <__pack_f+0x144>
    47a6:	e7 fe       	sbrs	r14, 7
    47a8:	0d c0       	rjmp	.+26     	; 0x47c4 <__pack_f+0x154>
    47aa:	80 e4       	ldi	r24, 0x40	; 64
    47ac:	90 e0       	ldi	r25, 0x00	; 0
    47ae:	a0 e0       	ldi	r26, 0x00	; 0
    47b0:	b0 e0       	ldi	r27, 0x00	; 0
    47b2:	04 c0       	rjmp	.+8      	; 0x47bc <__pack_f+0x14c>
    47b4:	8f e3       	ldi	r24, 0x3F	; 63
    47b6:	90 e0       	ldi	r25, 0x00	; 0
    47b8:	a0 e0       	ldi	r26, 0x00	; 0
    47ba:	b0 e0       	ldi	r27, 0x00	; 0
    47bc:	e8 0e       	add	r14, r24
    47be:	f9 1e       	adc	r15, r25
    47c0:	0a 1f       	adc	r16, r26
    47c2:	1b 1f       	adc	r17, r27
    47c4:	17 ff       	sbrs	r17, 7
    47c6:	05 c0       	rjmp	.+10     	; 0x47d2 <__pack_f+0x162>
    47c8:	16 95       	lsr	r17
    47ca:	07 95       	ror	r16
    47cc:	f7 94       	ror	r15
    47ce:	e7 94       	ror	r14
    47d0:	31 96       	adiw	r30, 0x01	; 1
    47d2:	87 e0       	ldi	r24, 0x07	; 7
    47d4:	16 95       	lsr	r17
    47d6:	07 95       	ror	r16
    47d8:	f7 94       	ror	r15
    47da:	e7 94       	ror	r14
    47dc:	8a 95       	dec	r24
    47de:	d1 f7       	brne	.-12     	; 0x47d4 <__pack_f+0x164>
    47e0:	05 c0       	rjmp	.+10     	; 0x47ec <__pack_f+0x17c>
    47e2:	ee 24       	eor	r14, r14
    47e4:	ff 24       	eor	r15, r15
    47e6:	87 01       	movw	r16, r14
    47e8:	ef ef       	ldi	r30, 0xFF	; 255
    47ea:	f0 e0       	ldi	r31, 0x00	; 0
    47ec:	6e 2f       	mov	r22, r30
    47ee:	67 95       	ror	r22
    47f0:	66 27       	eor	r22, r22
    47f2:	67 95       	ror	r22
    47f4:	90 2f       	mov	r25, r16
    47f6:	9f 77       	andi	r25, 0x7F	; 127
    47f8:	d7 94       	ror	r13
    47fa:	dd 24       	eor	r13, r13
    47fc:	d7 94       	ror	r13
    47fe:	8e 2f       	mov	r24, r30
    4800:	86 95       	lsr	r24
    4802:	49 2f       	mov	r20, r25
    4804:	46 2b       	or	r20, r22
    4806:	58 2f       	mov	r21, r24
    4808:	5d 29       	or	r21, r13
    480a:	b7 01       	movw	r22, r14
    480c:	ca 01       	movw	r24, r20
    480e:	1f 91       	pop	r17
    4810:	0f 91       	pop	r16
    4812:	ff 90       	pop	r15
    4814:	ef 90       	pop	r14
    4816:	df 90       	pop	r13
    4818:	08 95       	ret

0000481a <__unpack_f>:
    481a:	fc 01       	movw	r30, r24
    481c:	db 01       	movw	r26, r22
    481e:	40 81       	ld	r20, Z
    4820:	51 81       	ldd	r21, Z+1	; 0x01
    4822:	22 81       	ldd	r18, Z+2	; 0x02
    4824:	62 2f       	mov	r22, r18
    4826:	6f 77       	andi	r22, 0x7F	; 127
    4828:	70 e0       	ldi	r23, 0x00	; 0
    482a:	22 1f       	adc	r18, r18
    482c:	22 27       	eor	r18, r18
    482e:	22 1f       	adc	r18, r18
    4830:	93 81       	ldd	r25, Z+3	; 0x03
    4832:	89 2f       	mov	r24, r25
    4834:	88 0f       	add	r24, r24
    4836:	82 2b       	or	r24, r18
    4838:	28 2f       	mov	r18, r24
    483a:	30 e0       	ldi	r19, 0x00	; 0
    483c:	99 1f       	adc	r25, r25
    483e:	99 27       	eor	r25, r25
    4840:	99 1f       	adc	r25, r25
    4842:	11 96       	adiw	r26, 0x01	; 1
    4844:	9c 93       	st	X, r25
    4846:	11 97       	sbiw	r26, 0x01	; 1
    4848:	21 15       	cp	r18, r1
    484a:	31 05       	cpc	r19, r1
    484c:	a9 f5       	brne	.+106    	; 0x48b8 <__unpack_f+0x9e>
    484e:	41 15       	cp	r20, r1
    4850:	51 05       	cpc	r21, r1
    4852:	61 05       	cpc	r22, r1
    4854:	71 05       	cpc	r23, r1
    4856:	11 f4       	brne	.+4      	; 0x485c <__unpack_f+0x42>
    4858:	82 e0       	ldi	r24, 0x02	; 2
    485a:	37 c0       	rjmp	.+110    	; 0x48ca <__unpack_f+0xb0>
    485c:	82 e8       	ldi	r24, 0x82	; 130
    485e:	9f ef       	ldi	r25, 0xFF	; 255
    4860:	13 96       	adiw	r26, 0x03	; 3
    4862:	9c 93       	st	X, r25
    4864:	8e 93       	st	-X, r24
    4866:	12 97       	sbiw	r26, 0x02	; 2
    4868:	9a 01       	movw	r18, r20
    486a:	ab 01       	movw	r20, r22
    486c:	67 e0       	ldi	r22, 0x07	; 7
    486e:	22 0f       	add	r18, r18
    4870:	33 1f       	adc	r19, r19
    4872:	44 1f       	adc	r20, r20
    4874:	55 1f       	adc	r21, r21
    4876:	6a 95       	dec	r22
    4878:	d1 f7       	brne	.-12     	; 0x486e <__unpack_f+0x54>
    487a:	83 e0       	ldi	r24, 0x03	; 3
    487c:	8c 93       	st	X, r24
    487e:	0d c0       	rjmp	.+26     	; 0x489a <__unpack_f+0x80>
    4880:	22 0f       	add	r18, r18
    4882:	33 1f       	adc	r19, r19
    4884:	44 1f       	adc	r20, r20
    4886:	55 1f       	adc	r21, r21
    4888:	12 96       	adiw	r26, 0x02	; 2
    488a:	8d 91       	ld	r24, X+
    488c:	9c 91       	ld	r25, X
    488e:	13 97       	sbiw	r26, 0x03	; 3
    4890:	01 97       	sbiw	r24, 0x01	; 1
    4892:	13 96       	adiw	r26, 0x03	; 3
    4894:	9c 93       	st	X, r25
    4896:	8e 93       	st	-X, r24
    4898:	12 97       	sbiw	r26, 0x02	; 2
    489a:	20 30       	cpi	r18, 0x00	; 0
    489c:	80 e0       	ldi	r24, 0x00	; 0
    489e:	38 07       	cpc	r19, r24
    48a0:	80 e0       	ldi	r24, 0x00	; 0
    48a2:	48 07       	cpc	r20, r24
    48a4:	80 e4       	ldi	r24, 0x40	; 64
    48a6:	58 07       	cpc	r21, r24
    48a8:	58 f3       	brcs	.-42     	; 0x4880 <__unpack_f+0x66>
    48aa:	14 96       	adiw	r26, 0x04	; 4
    48ac:	2d 93       	st	X+, r18
    48ae:	3d 93       	st	X+, r19
    48b0:	4d 93       	st	X+, r20
    48b2:	5c 93       	st	X, r21
    48b4:	17 97       	sbiw	r26, 0x07	; 7
    48b6:	08 95       	ret
    48b8:	2f 3f       	cpi	r18, 0xFF	; 255
    48ba:	31 05       	cpc	r19, r1
    48bc:	79 f4       	brne	.+30     	; 0x48dc <__unpack_f+0xc2>
    48be:	41 15       	cp	r20, r1
    48c0:	51 05       	cpc	r21, r1
    48c2:	61 05       	cpc	r22, r1
    48c4:	71 05       	cpc	r23, r1
    48c6:	19 f4       	brne	.+6      	; 0x48ce <__unpack_f+0xb4>
    48c8:	84 e0       	ldi	r24, 0x04	; 4
    48ca:	8c 93       	st	X, r24
    48cc:	08 95       	ret
    48ce:	64 ff       	sbrs	r22, 4
    48d0:	03 c0       	rjmp	.+6      	; 0x48d8 <__unpack_f+0xbe>
    48d2:	81 e0       	ldi	r24, 0x01	; 1
    48d4:	8c 93       	st	X, r24
    48d6:	12 c0       	rjmp	.+36     	; 0x48fc <__unpack_f+0xe2>
    48d8:	1c 92       	st	X, r1
    48da:	10 c0       	rjmp	.+32     	; 0x48fc <__unpack_f+0xe2>
    48dc:	2f 57       	subi	r18, 0x7F	; 127
    48de:	30 40       	sbci	r19, 0x00	; 0
    48e0:	13 96       	adiw	r26, 0x03	; 3
    48e2:	3c 93       	st	X, r19
    48e4:	2e 93       	st	-X, r18
    48e6:	12 97       	sbiw	r26, 0x02	; 2
    48e8:	83 e0       	ldi	r24, 0x03	; 3
    48ea:	8c 93       	st	X, r24
    48ec:	87 e0       	ldi	r24, 0x07	; 7
    48ee:	44 0f       	add	r20, r20
    48f0:	55 1f       	adc	r21, r21
    48f2:	66 1f       	adc	r22, r22
    48f4:	77 1f       	adc	r23, r23
    48f6:	8a 95       	dec	r24
    48f8:	d1 f7       	brne	.-12     	; 0x48ee <__unpack_f+0xd4>
    48fa:	70 64       	ori	r23, 0x40	; 64
    48fc:	14 96       	adiw	r26, 0x04	; 4
    48fe:	4d 93       	st	X+, r20
    4900:	5d 93       	st	X+, r21
    4902:	6d 93       	st	X+, r22
    4904:	7c 93       	st	X, r23
    4906:	17 97       	sbiw	r26, 0x07	; 7
    4908:	08 95       	ret

0000490a <__fpcmp_parts_f>:
    490a:	1f 93       	push	r17
    490c:	dc 01       	movw	r26, r24
    490e:	fb 01       	movw	r30, r22
    4910:	9c 91       	ld	r25, X
    4912:	92 30       	cpi	r25, 0x02	; 2
    4914:	08 f4       	brcc	.+2      	; 0x4918 <__fpcmp_parts_f+0xe>
    4916:	47 c0       	rjmp	.+142    	; 0x49a6 <__fpcmp_parts_f+0x9c>
    4918:	80 81       	ld	r24, Z
    491a:	82 30       	cpi	r24, 0x02	; 2
    491c:	08 f4       	brcc	.+2      	; 0x4920 <__fpcmp_parts_f+0x16>
    491e:	43 c0       	rjmp	.+134    	; 0x49a6 <__fpcmp_parts_f+0x9c>
    4920:	94 30       	cpi	r25, 0x04	; 4
    4922:	51 f4       	brne	.+20     	; 0x4938 <__fpcmp_parts_f+0x2e>
    4924:	11 96       	adiw	r26, 0x01	; 1
    4926:	1c 91       	ld	r17, X
    4928:	84 30       	cpi	r24, 0x04	; 4
    492a:	99 f5       	brne	.+102    	; 0x4992 <__fpcmp_parts_f+0x88>
    492c:	81 81       	ldd	r24, Z+1	; 0x01
    492e:	68 2f       	mov	r22, r24
    4930:	70 e0       	ldi	r23, 0x00	; 0
    4932:	61 1b       	sub	r22, r17
    4934:	71 09       	sbc	r23, r1
    4936:	3f c0       	rjmp	.+126    	; 0x49b6 <__fpcmp_parts_f+0xac>
    4938:	84 30       	cpi	r24, 0x04	; 4
    493a:	21 f0       	breq	.+8      	; 0x4944 <__fpcmp_parts_f+0x3a>
    493c:	92 30       	cpi	r25, 0x02	; 2
    493e:	31 f4       	brne	.+12     	; 0x494c <__fpcmp_parts_f+0x42>
    4940:	82 30       	cpi	r24, 0x02	; 2
    4942:	b9 f1       	breq	.+110    	; 0x49b2 <__fpcmp_parts_f+0xa8>
    4944:	81 81       	ldd	r24, Z+1	; 0x01
    4946:	88 23       	and	r24, r24
    4948:	89 f1       	breq	.+98     	; 0x49ac <__fpcmp_parts_f+0xa2>
    494a:	2d c0       	rjmp	.+90     	; 0x49a6 <__fpcmp_parts_f+0x9c>
    494c:	11 96       	adiw	r26, 0x01	; 1
    494e:	1c 91       	ld	r17, X
    4950:	11 97       	sbiw	r26, 0x01	; 1
    4952:	82 30       	cpi	r24, 0x02	; 2
    4954:	f1 f0       	breq	.+60     	; 0x4992 <__fpcmp_parts_f+0x88>
    4956:	81 81       	ldd	r24, Z+1	; 0x01
    4958:	18 17       	cp	r17, r24
    495a:	d9 f4       	brne	.+54     	; 0x4992 <__fpcmp_parts_f+0x88>
    495c:	12 96       	adiw	r26, 0x02	; 2
    495e:	2d 91       	ld	r18, X+
    4960:	3c 91       	ld	r19, X
    4962:	13 97       	sbiw	r26, 0x03	; 3
    4964:	82 81       	ldd	r24, Z+2	; 0x02
    4966:	93 81       	ldd	r25, Z+3	; 0x03
    4968:	82 17       	cp	r24, r18
    496a:	93 07       	cpc	r25, r19
    496c:	94 f0       	brlt	.+36     	; 0x4992 <__fpcmp_parts_f+0x88>
    496e:	28 17       	cp	r18, r24
    4970:	39 07       	cpc	r19, r25
    4972:	bc f0       	brlt	.+46     	; 0x49a2 <__fpcmp_parts_f+0x98>
    4974:	14 96       	adiw	r26, 0x04	; 4
    4976:	8d 91       	ld	r24, X+
    4978:	9d 91       	ld	r25, X+
    497a:	0d 90       	ld	r0, X+
    497c:	bc 91       	ld	r27, X
    497e:	a0 2d       	mov	r26, r0
    4980:	24 81       	ldd	r18, Z+4	; 0x04
    4982:	35 81       	ldd	r19, Z+5	; 0x05
    4984:	46 81       	ldd	r20, Z+6	; 0x06
    4986:	57 81       	ldd	r21, Z+7	; 0x07
    4988:	28 17       	cp	r18, r24
    498a:	39 07       	cpc	r19, r25
    498c:	4a 07       	cpc	r20, r26
    498e:	5b 07       	cpc	r21, r27
    4990:	18 f4       	brcc	.+6      	; 0x4998 <__fpcmp_parts_f+0x8e>
    4992:	11 23       	and	r17, r17
    4994:	41 f0       	breq	.+16     	; 0x49a6 <__fpcmp_parts_f+0x9c>
    4996:	0a c0       	rjmp	.+20     	; 0x49ac <__fpcmp_parts_f+0xa2>
    4998:	82 17       	cp	r24, r18
    499a:	93 07       	cpc	r25, r19
    499c:	a4 07       	cpc	r26, r20
    499e:	b5 07       	cpc	r27, r21
    49a0:	40 f4       	brcc	.+16     	; 0x49b2 <__fpcmp_parts_f+0xa8>
    49a2:	11 23       	and	r17, r17
    49a4:	19 f0       	breq	.+6      	; 0x49ac <__fpcmp_parts_f+0xa2>
    49a6:	61 e0       	ldi	r22, 0x01	; 1
    49a8:	70 e0       	ldi	r23, 0x00	; 0
    49aa:	05 c0       	rjmp	.+10     	; 0x49b6 <__fpcmp_parts_f+0xac>
    49ac:	6f ef       	ldi	r22, 0xFF	; 255
    49ae:	7f ef       	ldi	r23, 0xFF	; 255
    49b0:	02 c0       	rjmp	.+4      	; 0x49b6 <__fpcmp_parts_f+0xac>
    49b2:	60 e0       	ldi	r22, 0x00	; 0
    49b4:	70 e0       	ldi	r23, 0x00	; 0
    49b6:	cb 01       	movw	r24, r22
    49b8:	1f 91       	pop	r17
    49ba:	08 95       	ret

000049bc <MWDT_SartWDT>:
#include "WDT_Private.h"
#include "WDT_Config.h"
#include "WDT_Interface.h"

void MWDT_SartWDT(u8 copy_u8Mode){
	switch(copy_u8Mode){
    49bc:	83 30       	cpi	r24, 0x03	; 3
    49be:	e1 f0       	breq	.+56     	; 0x49f8 <MWDT_SartWDT+0x3c>
    49c0:	84 30       	cpi	r24, 0x04	; 4
    49c2:	28 f4       	brcc	.+10     	; 0x49ce <MWDT_SartWDT+0x12>
    49c4:	81 30       	cpi	r24, 0x01	; 1
    49c6:	79 f0       	breq	.+30     	; 0x49e6 <MWDT_SartWDT+0x2a>
    49c8:	82 30       	cpi	r24, 0x02	; 2
    49ca:	98 f4       	brcc	.+38     	; 0x49f2 <MWDT_SartWDT+0x36>
    49cc:	09 c0       	rjmp	.+18     	; 0x49e0 <MWDT_SartWDT+0x24>
    49ce:	85 30       	cpi	r24, 0x05	; 5
    49d0:	f9 f0       	breq	.+62     	; 0x4a10 <MWDT_SartWDT+0x54>
    49d2:	85 30       	cpi	r24, 0x05	; 5
    49d4:	d0 f0       	brcs	.+52     	; 0x4a0a <MWDT_SartWDT+0x4e>
    49d6:	86 30       	cpi	r24, 0x06	; 6
    49d8:	09 f1       	breq	.+66     	; 0x4a1c <MWDT_SartWDT+0x60>
    49da:	87 30       	cpi	r24, 0x07	; 7
    49dc:	59 f5       	brne	.+86     	; 0x4a34 <MWDT_SartWDT+0x78>
    49de:	21 c0       	rjmp	.+66     	; 0x4a22 <MWDT_SartWDT+0x66>
	case WDT_MODE16K:
		CLR_BIT(WDTCR_REG,WDP0);
    49e0:	81 b5       	in	r24, 0x21	; 33
    49e2:	8e 7f       	andi	r24, 0xFE	; 254
    49e4:	02 c0       	rjmp	.+4      	; 0x49ea <MWDT_SartWDT+0x2e>
		CLR_BIT(WDTCR_REG,WDP1);
		CLR_BIT(WDTCR_REG,WDP2);
		break;
	case WDT_MODE32K:
		SET_BIT(WDTCR_REG,WDP0);
    49e6:	81 b5       	in	r24, 0x21	; 33
    49e8:	81 60       	ori	r24, 0x01	; 1
    49ea:	81 bd       	out	0x21, r24	; 33
		CLR_BIT(WDTCR_REG,WDP1);
    49ec:	81 b5       	in	r24, 0x21	; 33
    49ee:	8d 7f       	andi	r24, 0xFD	; 253
    49f0:	08 c0       	rjmp	.+16     	; 0x4a02 <MWDT_SartWDT+0x46>
		CLR_BIT(WDTCR_REG,WDP2);
		break;
	case WDT_MODE64K:
		CLR_BIT(WDTCR_REG,WDP0);
    49f2:	81 b5       	in	r24, 0x21	; 33
    49f4:	8e 7f       	andi	r24, 0xFE	; 254
    49f6:	02 c0       	rjmp	.+4      	; 0x49fc <MWDT_SartWDT+0x40>
		SET_BIT(WDTCR_REG,WDP1);
		CLR_BIT(WDTCR_REG,WDP2);
		break;
	case WDT_MODE128K:
		SET_BIT(WDTCR_REG,WDP0);
    49f8:	81 b5       	in	r24, 0x21	; 33
    49fa:	81 60       	ori	r24, 0x01	; 1
    49fc:	81 bd       	out	0x21, r24	; 33
		SET_BIT(WDTCR_REG,WDP1);
    49fe:	81 b5       	in	r24, 0x21	; 33
    4a00:	82 60       	ori	r24, 0x02	; 2
    4a02:	81 bd       	out	0x21, r24	; 33
		CLR_BIT(WDTCR_REG,WDP2);
    4a04:	81 b5       	in	r24, 0x21	; 33
    4a06:	8b 7f       	andi	r24, 0xFB	; 251
    4a08:	14 c0       	rjmp	.+40     	; 0x4a32 <MWDT_SartWDT+0x76>
		break;
	case WDT_MODE256K:
		CLR_BIT(WDTCR_REG,WDP0);
    4a0a:	81 b5       	in	r24, 0x21	; 33
    4a0c:	8e 7f       	andi	r24, 0xFE	; 254
    4a0e:	02 c0       	rjmp	.+4      	; 0x4a14 <MWDT_SartWDT+0x58>
		CLR_BIT(WDTCR_REG,WDP1);
		SET_BIT(WDTCR_REG,WDP2);
		break;
	case WDT_MODE512K:
		SET_BIT(WDTCR_REG,WDP0);
    4a10:	81 b5       	in	r24, 0x21	; 33
    4a12:	81 60       	ori	r24, 0x01	; 1
    4a14:	81 bd       	out	0x21, r24	; 33
		CLR_BIT(WDTCR_REG,WDP1);
    4a16:	81 b5       	in	r24, 0x21	; 33
    4a18:	8d 7f       	andi	r24, 0xFD	; 253
    4a1a:	08 c0       	rjmp	.+16     	; 0x4a2c <MWDT_SartWDT+0x70>
		SET_BIT(WDTCR_REG,WDP2);
		break;
	case WDT_MODE1024K:
		CLR_BIT(WDTCR_REG,WDP0);
    4a1c:	81 b5       	in	r24, 0x21	; 33
    4a1e:	8e 7f       	andi	r24, 0xFE	; 254
    4a20:	02 c0       	rjmp	.+4      	; 0x4a26 <MWDT_SartWDT+0x6a>
		SET_BIT(WDTCR_REG,WDP1);
		SET_BIT(WDTCR_REG,WDP2);
		break;
	case WDT_MODE2048K:
		SET_BIT(WDTCR_REG,WDP0);
    4a22:	81 b5       	in	r24, 0x21	; 33
    4a24:	81 60       	ori	r24, 0x01	; 1
    4a26:	81 bd       	out	0x21, r24	; 33
		SET_BIT(WDTCR_REG,WDP1);
    4a28:	81 b5       	in	r24, 0x21	; 33
    4a2a:	82 60       	ori	r24, 0x02	; 2
    4a2c:	81 bd       	out	0x21, r24	; 33
		SET_BIT(WDTCR_REG,WDP2);
    4a2e:	81 b5       	in	r24, 0x21	; 33
    4a30:	84 60       	ori	r24, 0x04	; 4
    4a32:	81 bd       	out	0x21, r24	; 33
		break;
	}
	//start WDT
	SET_BIT(WDTCR_REG,WDE);
    4a34:	81 b5       	in	r24, 0x21	; 33
    4a36:	88 60       	ori	r24, 0x08	; 8
    4a38:	81 bd       	out	0x21, r24	; 33
}
    4a3a:	08 95       	ret

00004a3c <MWDT_StopWDT>:

void MWDT_StopWDT(void){
	WDTCR_REG|=0x18;
    4a3c:	81 b5       	in	r24, 0x21	; 33
    4a3e:	88 61       	ori	r24, 0x18	; 24
    4a40:	81 bd       	out	0x21, r24	; 33
	WDTCR_REG=0;
    4a42:	11 bc       	out	0x21, r1	; 33
}
    4a44:	08 95       	ret

00004a46 <USART_voidInit>:

	/*
		$ Set Baud Rate
		Hint : UBRRH then UBRRL to avoid problems
	 */
	UBRRH = (u8)(Local_u16UBRR >> 8) ; /* MSBs at Local_u16UBRR */
    4a46:	10 bc       	out	0x20, r1	; 32
	UBRRL = (u8)Local_u16UBRR ;
    4a48:	83 e3       	ldi	r24, 0x33	; 51
    4a4a:	89 b9       	out	0x09, r24	; 9


	/***** Check 3 Modes   *****/
#if (USART_MODE == ASYNCHRONOUS) && (USART_SYSTEM_SPEED == USART_X1)

	CLR_BIT(UCSRA , UCSRA_U2X) ;
    4a4c:	59 98       	cbi	0x0b, 1	; 11

	/*Multi-Processor Communication mode*/
#if USART_MPCM == DISABLE
	CLR_BIT(UCSRA , UCSRA_MPCM) ;
#elif USART_MPCM == ENABLE
	SET_BIT(UCSRA , UCSRA_MPCM) ;
    4a4e:	58 9a       	sbi	0x0b, 0	; 11
	SET_BIT(Local_u8UCSRC , UCSRC_UCSZ1) ;
	CLR_BIT(UCSRB , UCSRB_UCSZ2) ;
#elif USART_DATA_SIZE == DATA_SIZE_8_BIT
	SET_BIT(Local_u8UCSRC , UCSRC_UCSZ0) ;
	SET_BIT(Local_u8UCSRC , UCSRC_UCSZ1) ;
	CLR_BIT(UCSRB , UCSRB_UCSZ2) ;
    4a50:	52 98       	cbi	0x0a, 2	; 10

	/*Set UCSRC Mode*/
	SET_BIT(Local_u8UCSRC , UCSRC_URSEL) ;

	/*Store the value in UCSRC Register (one operation) */
	UCSRC = Local_u8UCSRC ;
    4a52:	86 e8       	ldi	r24, 0x86	; 134
    4a54:	80 bd       	out	0x20, r24	; 32

	/* Finally Enable the components */

	/*RX Complete Interrupt Enable*/
#if USART_RX_COMPLETE_INTERRUPT == DISABLE
	CLR_BIT(UCSRB , UCSRB_RXCIE) ;
    4a56:	57 98       	cbi	0x0a, 7	; 10
#error "Wrong USART_RX_COMPLETE_INTERRUPT config"
#endif

	/*TX Complete Interrupt Enable*/
#if USART_TX_COMPLETE_INTERRUPT == DISABLE
	CLR_BIT(UCSRB , UCSRB_TXCIE) ;
    4a58:	56 98       	cbi	0x0a, 6	; 10
#error "Wrong USART_TX_COMPLETE_INTERRUPT config"
#endif

	/*UDR Empty Interrupt Enable*/
#if USART_UDR_EMPTY_INTERRUPT == DISABLE
	CLR_BIT(UCSRB , UCSRB_UDRIE) ;
    4a5a:	55 98       	cbi	0x0a, 5	; 10

	/*Receive Enable*/
#if USART_RECEIVER_ENABLE == DISABLE
	CLR_BIT(UCSRB , UCSRB_RXEN) ;
#elif USART_RECEIVER_ENABLE == ENABLE
	SET_BIT(UCSRB , UCSRB_RXEN) ;
    4a5c:	54 9a       	sbi	0x0a, 4	; 10

	/*Transmitter Enable*/
#if USART_TRANSMITTER_ENABLE == DISABLE
	CLR_BIT(UCSRB , UCSRB_TXEN) ;
#elif USART_TRANSMITTER_ENABLE == ENABLE
	SET_BIT(UCSRB , UCSRB_TXEN) ; /*Configure PD1 as alternative pin function*/
    4a5e:	53 9a       	sbi	0x0a, 3	; 10
#else
#error "Wrong USART_TRANSMITTER_ENABLE config"
#endif
}
    4a60:	08 95       	ret

00004a62 <USART_u8SendData>:

//-------------------------------------------------------------------------------------------------------------------------------

u8 USART_u8SendData (u8 Copy_u8Data)
{
    4a62:	28 2f       	mov	r18, r24
	u8 Local_u8ErrorState = E_OK ;
	u32 Local_u32TimeoutCounter = 0 ;
	if (USART_u8State == IDLE)
    4a64:	80 91 f8 01 	lds	r24, 0x01F8
    4a68:	88 23       	and	r24, r24
    4a6a:	11 f0       	breq	.+4      	; 0x4a70 <USART_u8SendData+0xe>
    4a6c:	81 e0       	ldi	r24, 0x01	; 1
    4a6e:	08 95       	ret
    4a70:	80 e0       	ldi	r24, 0x00	; 0
    4a72:	90 e0       	ldi	r25, 0x00	; 0
    4a74:	01 c0       	rjmp	.+2      	; 0x4a78 <USART_u8SendData+0x16>
			Hint : TIMEOUT to avoid infinity loop
		 */
		/*Wait until a Receiving complete or Timing out*/
		while (((GET_BIT(UCSRA , UCSRA_UDRE)) == 0) && (Local_u32TimeoutCounter != USART_u32TIMEOUT))
		{
			Local_u32TimeoutCounter++ ;
    4a76:	01 96       	adiw	r24, 0x01	; 1

		/*
			Hint : TIMEOUT to avoid infinity loop
		 */
		/*Wait until a Receiving complete or Timing out*/
		while (((GET_BIT(UCSRA , UCSRA_UDRE)) == 0) && (Local_u32TimeoutCounter != USART_u32TIMEOUT))
    4a78:	5d 99       	sbic	0x0b, 5	; 11
    4a7a:	05 c0       	rjmp	.+10     	; 0x4a86 <USART_u8SendData+0x24>
    4a7c:	37 e2       	ldi	r19, 0x27	; 39
    4a7e:	80 31       	cpi	r24, 0x10	; 16
    4a80:	93 07       	cpc	r25, r19
    4a82:	c9 f7       	brne	.-14     	; 0x4a76 <USART_u8SendData+0x14>
    4a84:	06 c0       	rjmp	.+12     	; 0x4a92 <USART_u8SendData+0x30>
		{
			Local_u32TimeoutCounter++ ;
		}

		if (Local_u32TimeoutCounter == USART_u32TIMEOUT)
    4a86:	80 51       	subi	r24, 0x10	; 16
    4a88:	97 42       	sbci	r25, 0x27	; 39
    4a8a:	19 f0       	breq	.+6      	; 0x4a92 <USART_u8SendData+0x30>
		{
			Local_u8ErrorState = E_NOK ;
		}
		else
		{
			UDR = Copy_u8Data ;
    4a8c:	2c b9       	out	0x0c, r18	; 12
    4a8e:	80 e0       	ldi	r24, 0x00	; 0
    4a90:	01 c0       	rjmp	.+2      	; 0x4a94 <USART_u8SendData+0x32>
    4a92:	81 e0       	ldi	r24, 0x01	; 1
		}

		USART_u8State = IDLE ;
    4a94:	10 92 f8 01 	sts	0x01F8, r1
	else
	{
		Local_u8ErrorState = E_NOK ;
	}
	return Local_u8ErrorState ;
}
    4a98:	08 95       	ret

00004a9a <USART_u8RecevieData>:

//-------------------------------------------------------------------------------------------------------------------------------

u8 USART_u8RecevieData (u8 * Copy_u8ReceviedData)
{
    4a9a:	fc 01       	movw	r30, r24
	u8 Local_u8ErrorState ;
	u32 Local_u32TimeoutCounter = 0 ;
	if (Copy_u8ReceviedData != NULL)
    4a9c:	00 97       	sbiw	r24, 0x00	; 0
    4a9e:	11 f4       	brne	.+4      	; 0x4aa4 <USART_u8RecevieData+0xa>
    4aa0:	82 e0       	ldi	r24, 0x02	; 2
    4aa2:	08 95       	ret
	{
		if (USART_u8State == IDLE)
    4aa4:	80 91 f8 01 	lds	r24, 0x01F8
    4aa8:	88 23       	and	r24, r24
    4aaa:	11 f0       	breq	.+4      	; 0x4ab0 <USART_u8RecevieData+0x16>
    4aac:	81 e0       	ldi	r24, 0x01	; 1
    4aae:	08 95       	ret
    4ab0:	80 e0       	ldi	r24, 0x00	; 0
    4ab2:	90 e0       	ldi	r25, 0x00	; 0
    4ab4:	01 c0       	rjmp	.+2      	; 0x4ab8 <USART_u8RecevieData+0x1e>
			USART_u8State = BUSY ;

			/*Wait until a receive complete*/
			while (((GET_BIT(UCSRA , UCSRA_RXC)) == 0) && (Local_u32TimeoutCounter != USART_u32TIMEOUT))
			{
				Local_u32TimeoutCounter++ ;
    4ab6:	01 96       	adiw	r24, 0x01	; 1
		if (USART_u8State == IDLE)
		{
			USART_u8State = BUSY ;

			/*Wait until a receive complete*/
			while (((GET_BIT(UCSRA , UCSRA_RXC)) == 0) && (Local_u32TimeoutCounter != USART_u32TIMEOUT))
    4ab8:	5f 99       	sbic	0x0b, 7	; 11
    4aba:	05 c0       	rjmp	.+10     	; 0x4ac6 <USART_u8RecevieData+0x2c>
    4abc:	27 e2       	ldi	r18, 0x27	; 39
    4abe:	80 31       	cpi	r24, 0x10	; 16
    4ac0:	92 07       	cpc	r25, r18
    4ac2:	c9 f7       	brne	.-14     	; 0x4ab6 <USART_u8RecevieData+0x1c>
    4ac4:	05 c0       	rjmp	.+10     	; 0x4ad0 <USART_u8RecevieData+0x36>
			{
				Local_u32TimeoutCounter++ ;
			}

			if (Local_u32TimeoutCounter == USART_u32TIMEOUT)
    4ac6:	80 51       	subi	r24, 0x10	; 16
    4ac8:	97 42       	sbci	r25, 0x27	; 39
    4aca:	11 f0       	breq	.+4      	; 0x4ad0 <USART_u8RecevieData+0x36>
			{
				Local_u8ErrorState = E_NOK ;
			}
			else
			{
				* Copy_u8ReceviedData = UDR ;
    4acc:	8c b1       	in	r24, 0x0c	; 12
    4ace:	80 83       	st	Z, r24
			}

			USART_u8State = IDLE ;
    4ad0:	10 92 f8 01 	sts	0x01F8, r1
    4ad4:	81 e0       	ldi	r24, 0x01	; 1
	{
		Local_u8ErrorState = E_NOK_NULL_PTR ;
	}

	return Local_u8ErrorState ;
}
    4ad6:	08 95       	ret

00004ad8 <USART_u8SendStringSynch>:


//-------------------------------------------------------------------------------------------------------------------------------

u8 USART_u8SendStringSynch (const u8 * Copy_pchString)
{
    4ad8:	cf 93       	push	r28
    4ada:	df 93       	push	r29
	u8 Local_u8ErrorState = E_OK ;

	u32 Local_u32Index = 0 ;

	if (Copy_pchString != NULL)
    4adc:	00 97       	sbiw	r24, 0x00	; 0
    4ade:	11 f4       	brne	.+4      	; 0x4ae4 <USART_u8SendStringSynch+0xc>
    4ae0:	82 e0       	ldi	r24, 0x02	; 2
    4ae2:	0a c0       	rjmp	.+20     	; 0x4af8 <USART_u8SendStringSynch+0x20>
    4ae4:	ec 01       	movw	r28, r24
    4ae6:	05 c0       	rjmp	.+10     	; 0x4af2 <USART_u8SendStringSynch+0x1a>
	{
		while (Copy_pchString[Local_u32Index] != '\0')
		{
			Local_u8ErrorState = USART_u8SendData(Copy_pchString[Local_u32Index]) ;
    4ae8:	0e 94 31 25 	call	0x4a62	; 0x4a62 <USART_u8SendData>
    4aec:	21 96       	adiw	r28, 0x01	; 1
			Local_u32Index++ ;
			if (Local_u8ErrorState != E_OK)
    4aee:	88 23       	and	r24, r24
    4af0:	19 f4       	brne	.+6      	; 0x4af8 <USART_u8SendStringSynch+0x20>

	u32 Local_u32Index = 0 ;

	if (Copy_pchString != NULL)
	{
		while (Copy_pchString[Local_u32Index] != '\0')
    4af2:	88 81       	ld	r24, Y
    4af4:	88 23       	and	r24, r24
    4af6:	c1 f7       	brne	.-16     	; 0x4ae8 <USART_u8SendStringSynch+0x10>
	{
		Local_u8ErrorState = E_NOK_NULL_PTR ;
	}

	return Local_u8ErrorState ;
}
    4af8:	df 91       	pop	r29
    4afa:	cf 91       	pop	r28
    4afc:	08 95       	ret

00004afe <USART_u8SendStringAsynch>:


//-------------------------------------------------------------------------------------------------------------------------------

u8   USART_u8SendStringAsynch (const u8 * Copy_pchString , void (* NotificationFunc)(void))
{
    4afe:	fc 01       	movw	r30, r24
	u8 Local_u8ErrorState = E_OK ;

	if (USART_u8State == IDLE)
    4b00:	80 91 f8 01 	lds	r24, 0x01F8
    4b04:	88 23       	and	r24, r24
    4b06:	11 f0       	breq	.+4      	; 0x4b0c <USART_u8SendStringAsynch+0xe>
    4b08:	81 e0       	ldi	r24, 0x01	; 1
    4b0a:	08 95       	ret
	{
		if ((Copy_pchString != NULL) && (NotificationFunc != NULL))
    4b0c:	30 97       	sbiw	r30, 0x00	; 0
    4b0e:	a9 f0       	breq	.+42     	; 0x4b3a <USART_u8SendStringAsynch+0x3c>
    4b10:	61 15       	cp	r22, r1
    4b12:	71 05       	cpc	r23, r1
    4b14:	91 f0       	breq	.+36     	; 0x4b3a <USART_u8SendStringAsynch+0x3c>
		{
			/*USART is now Busy*/
			USART_u8State = BUSY ;
    4b16:	81 e0       	ldi	r24, 0x01	; 1
    4b18:	80 93 f8 01 	sts	0x01F8, r24

			/*Assign the USART data globally*/
			USART_pu8SendData = Copy_pchString ;
    4b1c:	f0 93 f7 01 	sts	0x01F7, r31
    4b20:	e0 93 f6 01 	sts	0x01F6, r30
			USART_pvNotificationFunc = NotificationFunc ;
    4b24:	70 93 fa 01 	sts	0x01FA, r23
    4b28:	60 93 f9 01 	sts	0x01F9, r22

			/*Set Index to first element*/
			USART_u8Index = 0 ;
    4b2c:	10 92 fe 01 	sts	0x01FE, r1

			/*Send first Data */
			UDR = USART_pu8SendData[USART_u8Index] ;
    4b30:	80 81       	ld	r24, Z
    4b32:	8c b9       	out	0x0c, r24	; 12

			/*USART Transmit Interrupt Enable*/
			SET_BIT(UCSRB , UCSRB_TXCIE) ;
    4b34:	56 9a       	sbi	0x0a, 6	; 10
    4b36:	80 e0       	ldi	r24, 0x00	; 0
    4b38:	08 95       	ret
{
	u8 Local_u8ErrorState = E_OK ;

	if (USART_u8State == IDLE)
	{
		if ((Copy_pchString != NULL) && (NotificationFunc != NULL))
    4b3a:	82 e0       	ldi	r24, 0x02	; 2
	{
		Local_u8ErrorState = E_NOK ;
	}

	return Local_u8ErrorState ;
}
    4b3c:	08 95       	ret

00004b3e <USART_u8ReceiveBufferSynch>:


//-------------------------------------------------------------------------------------------------------------------------------

u8 USART_u8ReceiveBufferSynch (u8 * Copy_pchString , u32 Copy_u32BufferSize)
{
    4b3e:	ef 92       	push	r14
    4b40:	ff 92       	push	r15
    4b42:	0f 93       	push	r16
    4b44:	1f 93       	push	r17
    4b46:	cf 93       	push	r28
    4b48:	df 93       	push	r29
    4b4a:	8c 01       	movw	r16, r24
    4b4c:	7b 01       	movw	r14, r22
	u8 Local_u8ErrorState = E_OK ;

	u32 Local_u32Index = 0 ;

	if (Copy_pchString != NULL)
    4b4e:	00 97       	sbiw	r24, 0x00	; 0
    4b50:	11 f4       	brne	.+4      	; 0x4b56 <USART_u8ReceiveBufferSynch+0x18>
    4b52:	82 e0       	ldi	r24, 0x02	; 2
    4b54:	0f c0       	rjmp	.+30     	; 0x4b74 <USART_u8ReceiveBufferSynch+0x36>
    4b56:	c0 e0       	ldi	r28, 0x00	; 0
    4b58:	d0 e0       	ldi	r29, 0x00	; 0
    4b5a:	08 c0       	rjmp	.+16     	; 0x4b6c <USART_u8ReceiveBufferSynch+0x2e>
	{
		while (Local_u32Index < Copy_u32BufferSize)
		{
			Local_u8ErrorState = USART_u8RecevieData(&Copy_pchString[Local_u32Index]) ;
    4b5c:	c8 01       	movw	r24, r16
    4b5e:	8c 0f       	add	r24, r28
    4b60:	9d 1f       	adc	r25, r29
    4b62:	0e 94 4d 25 	call	0x4a9a	; 0x4a9a <USART_u8RecevieData>
			Local_u32Index++ ;

			if (Local_u8ErrorState != E_OK)
    4b66:	88 23       	and	r24, r24
    4b68:	29 f4       	brne	.+10     	; 0x4b74 <USART_u8ReceiveBufferSynch+0x36>
	if (Copy_pchString != NULL)
	{
		while (Local_u32Index < Copy_u32BufferSize)
		{
			Local_u8ErrorState = USART_u8RecevieData(&Copy_pchString[Local_u32Index]) ;
			Local_u32Index++ ;
    4b6a:	21 96       	adiw	r28, 0x01	; 1

	u32 Local_u32Index = 0 ;

	if (Copy_pchString != NULL)
	{
		while (Local_u32Index < Copy_u32BufferSize)
    4b6c:	ce 15       	cp	r28, r14
    4b6e:	df 05       	cpc	r29, r15
    4b70:	a8 f3       	brcs	.-22     	; 0x4b5c <USART_u8ReceiveBufferSynch+0x1e>
    4b72:	80 e0       	ldi	r24, 0x00	; 0
	{
		Local_u8ErrorState = E_NOK_NULL_PTR ;
	}

	return Local_u8ErrorState ;
}
    4b74:	df 91       	pop	r29
    4b76:	cf 91       	pop	r28
    4b78:	1f 91       	pop	r17
    4b7a:	0f 91       	pop	r16
    4b7c:	ff 90       	pop	r15
    4b7e:	ef 90       	pop	r14
    4b80:	08 95       	ret

00004b82 <USART_u8ReceiveBufferAsynch>:


//-------------------------------------------------------------------------------------------------------------------------------

u8 USART_u8ReceiveBufferAsynch (u8 * Copy_pchString , u32 Copy_u32BufferSize , void (* NotificationFunc)(void))
{
    4b82:	9c 01       	movw	r18, r24
	u8 Local_u8ErrorState = E_OK ;

	if (USART_u8State == IDLE)
    4b84:	80 91 f8 01 	lds	r24, 0x01F8
    4b88:	88 23       	and	r24, r24
    4b8a:	11 f0       	breq	.+4      	; 0x4b90 <USART_u8ReceiveBufferAsynch+0xe>
    4b8c:	81 e0       	ldi	r24, 0x01	; 1
    4b8e:	08 95       	ret
	{
		if ((Copy_pchString != NULL) && (NotificationFunc != NULL))
    4b90:	21 15       	cp	r18, r1
    4b92:	31 05       	cpc	r19, r1
    4b94:	a9 f0       	breq	.+42     	; 0x4bc0 <USART_u8ReceiveBufferAsynch+0x3e>
    4b96:	41 15       	cp	r20, r1
    4b98:	51 05       	cpc	r21, r1
    4b9a:	91 f0       	breq	.+36     	; 0x4bc0 <USART_u8ReceiveBufferAsynch+0x3e>
		{
			/*USART is now Busy*/
			USART_u8State = BUSY ;
    4b9c:	81 e0       	ldi	r24, 0x01	; 1
    4b9e:	80 93 f8 01 	sts	0x01F8, r24

			/*Assign the USART data globally*/
			USART_pu8ReceiveData = Copy_pchString ;
    4ba2:	30 93 fc 01 	sts	0x01FC, r19
    4ba6:	20 93 fb 01 	sts	0x01FB, r18
			USART_pvNotificationFunc = NotificationFunc ;
    4baa:	50 93 fa 01 	sts	0x01FA, r21
    4bae:	40 93 f9 01 	sts	0x01F9, r20
			USART_u8BufferSize = Copy_u32BufferSize;
    4bb2:	60 93 fd 01 	sts	0x01FD, r22

			/*Set Index to first element*/
			USART_u8Index = 0 ;
    4bb6:	10 92 fe 01 	sts	0x01FE, r1

			/*USART Recieve Interrupt Enable */
			SET_BIT(UCSRB , UCSRB_RXCIE) ;
    4bba:	57 9a       	sbi	0x0a, 7	; 10
    4bbc:	80 e0       	ldi	r24, 0x00	; 0
    4bbe:	08 95       	ret
{
	u8 Local_u8ErrorState = E_OK ;

	if (USART_u8State == IDLE)
	{
		if ((Copy_pchString != NULL) && (NotificationFunc != NULL))
    4bc0:	82 e0       	ldi	r24, 0x02	; 2
	{
		Local_u8ErrorState = E_NOK ;
	}

	return Local_u8ErrorState ;
}
    4bc2:	08 95       	ret

00004bc4 <__vector_13>:

//-------------------------------------------------------------------------------------------------------------------------------
/* ISR for RX complete */
void __vector_13 (void)		__attribute__ ((signal)) ;
void __vector_13 (void)
{
    4bc4:	1f 92       	push	r1
    4bc6:	0f 92       	push	r0
    4bc8:	0f b6       	in	r0, 0x3f	; 63
    4bca:	0f 92       	push	r0
    4bcc:	11 24       	eor	r1, r1
    4bce:	2f 93       	push	r18
    4bd0:	3f 93       	push	r19
    4bd2:	4f 93       	push	r20
    4bd4:	5f 93       	push	r21
    4bd6:	6f 93       	push	r22
    4bd8:	7f 93       	push	r23
    4bda:	8f 93       	push	r24
    4bdc:	9f 93       	push	r25
    4bde:	af 93       	push	r26
    4be0:	bf 93       	push	r27
    4be2:	ef 93       	push	r30
    4be4:	ff 93       	push	r31
		/*Receive next Data*/
		USART_pu8ReceiveData[USART_u8Index] = UDR ;
    4be6:	90 91 fe 01 	lds	r25, 0x01FE
    4bea:	8c b1       	in	r24, 0x0c	; 12
    4bec:	e0 91 fb 01 	lds	r30, 0x01FB
    4bf0:	f0 91 fc 01 	lds	r31, 0x01FC
    4bf4:	e9 0f       	add	r30, r25
    4bf6:	f1 1d       	adc	r31, r1
    4bf8:	80 83       	st	Z, r24

		/*Increment Data index of the buffer*/
		USART_u8Index++ ;
    4bfa:	9f 5f       	subi	r25, 0xFF	; 255
    4bfc:	90 93 fe 01 	sts	0x01FE, r25

		if (USART_u8Index == USART_u8BufferSize)
    4c00:	80 91 fd 01 	lds	r24, 0x01FD
    4c04:	98 17       	cp	r25, r24
    4c06:	51 f4       	brne	.+20     	; 0x4c1c <__vector_13+0x58>
		{
			/*Send Data Complete*/

			USART_u8Index=0;
    4c08:	10 92 fe 01 	sts	0x01FE, r1
			/*USART is now IDLE*/
			USART_u8State = IDLE ;
    4c0c:	10 92 f8 01 	sts	0x01F8, r1

			/*Call Notification Function*/
			USART_pvNotificationFunc() ;
    4c10:	e0 91 f9 01 	lds	r30, 0x01F9
    4c14:	f0 91 fa 01 	lds	r31, 0x01FA
    4c18:	09 95       	icall

			/*USART Recieve Interrupt Disable*/
			CLR_BIT(UCSRB , UCSRB_RXCIE) ;
    4c1a:	57 98       	cbi	0x0a, 7	; 10
		else
		{
			/*Do Noting*/
		}

}
    4c1c:	ff 91       	pop	r31
    4c1e:	ef 91       	pop	r30
    4c20:	bf 91       	pop	r27
    4c22:	af 91       	pop	r26
    4c24:	9f 91       	pop	r25
    4c26:	8f 91       	pop	r24
    4c28:	7f 91       	pop	r23
    4c2a:	6f 91       	pop	r22
    4c2c:	5f 91       	pop	r21
    4c2e:	4f 91       	pop	r20
    4c30:	3f 91       	pop	r19
    4c32:	2f 91       	pop	r18
    4c34:	0f 90       	pop	r0
    4c36:	0f be       	out	0x3f, r0	; 63
    4c38:	0f 90       	pop	r0
    4c3a:	1f 90       	pop	r1
    4c3c:	18 95       	reti

00004c3e <__vector_15>:

//-------------------------------------------------------------------------------------------------------------------------------
/* ISR for TX complete */
void __vector_15 (void)		__attribute__ ((signal)) ;
void __vector_15 (void)
{
    4c3e:	1f 92       	push	r1
    4c40:	0f 92       	push	r0
    4c42:	0f b6       	in	r0, 0x3f	; 63
    4c44:	0f 92       	push	r0
    4c46:	11 24       	eor	r1, r1
    4c48:	2f 93       	push	r18
    4c4a:	3f 93       	push	r19
    4c4c:	4f 93       	push	r20
    4c4e:	5f 93       	push	r21
    4c50:	6f 93       	push	r22
    4c52:	7f 93       	push	r23
    4c54:	8f 93       	push	r24
    4c56:	9f 93       	push	r25
    4c58:	af 93       	push	r26
    4c5a:	bf 93       	push	r27
    4c5c:	ef 93       	push	r30
    4c5e:	ff 93       	push	r31

		/*Increment Data index of the buffer*/
		USART_u8Index++ ;
    4c60:	80 91 fe 01 	lds	r24, 0x01FE
    4c64:	8f 5f       	subi	r24, 0xFF	; 255
    4c66:	80 93 fe 01 	sts	0x01FE, r24

		if (USART_pu8SendData[USART_u8Index] == '\0')
    4c6a:	e0 91 f6 01 	lds	r30, 0x01F6
    4c6e:	f0 91 f7 01 	lds	r31, 0x01F7
    4c72:	e8 0f       	add	r30, r24
    4c74:	f1 1d       	adc	r31, r1
    4c76:	e0 81       	ld	r30, Z
    4c78:	ee 23       	and	r30, r30
    4c7a:	59 f4       	brne	.+22     	; 0x4c92 <__vector_15+0x54>
		{
			/*Receive Data Complete*/
			USART_u8Index=0;
    4c7c:	10 92 fe 01 	sts	0x01FE, r1

			/*USART is now IDLE*/
			USART_u8State = IDLE ;
    4c80:	10 92 f8 01 	sts	0x01F8, r1

			/*Call Notification Function*/
			USART_pvNotificationFunc() ;
    4c84:	e0 91 f9 01 	lds	r30, 0x01F9
    4c88:	f0 91 fa 01 	lds	r31, 0x01FA
    4c8c:	09 95       	icall

			/*USART Transmit Interrupt Disable*/
			CLR_BIT(UCSRB , UCSRB_TXCIE) ;
    4c8e:	56 98       	cbi	0x0a, 6	; 10
    4c90:	01 c0       	rjmp	.+2      	; 0x4c94 <__vector_15+0x56>
		}
		else
		{
			/*Send Data not Complete*/
			/*Send next Data*/
			UDR = USART_pu8SendData[USART_u8Index] ;
    4c92:	ec b9       	out	0x0c, r30	; 12
		}

}
    4c94:	ff 91       	pop	r31
    4c96:	ef 91       	pop	r30
    4c98:	bf 91       	pop	r27
    4c9a:	af 91       	pop	r26
    4c9c:	9f 91       	pop	r25
    4c9e:	8f 91       	pop	r24
    4ca0:	7f 91       	pop	r23
    4ca2:	6f 91       	pop	r22
    4ca4:	5f 91       	pop	r21
    4ca6:	4f 91       	pop	r20
    4ca8:	3f 91       	pop	r19
    4caa:	2f 91       	pop	r18
    4cac:	0f 90       	pop	r0
    4cae:	0f be       	out	0x3f, r0	; 63
    4cb0:	0f 90       	pop	r0
    4cb2:	1f 90       	pop	r1
    4cb4:	18 95       	reti

00004cb6 <TWI_voidInit>:
			#error "wrong TWI_PRESCALER configuration parameter!"
		#endif

	#elif TWI_SPEED == SPEED_400K
			#if TWI_PRESCALER == TWI_PRESCALER_1
				CLR_BIT(TWSR,TWSR_TWPS0);
    4cb6:	08 98       	cbi	0x01, 0	; 1
				CLR_BIT(TWSR,TWSR_TWPS1);
    4cb8:	09 98       	cbi	0x01, 1	; 1
				TWBR = (((FCPU_CLOCK/SPEED_400K)-16)/2);
    4cba:	89 ef       	ldi	r24, 0xF9	; 249
    4cbc:	80 b9       	out	0x00, r24	; 0
	#else
	#error "wrong TWI_SPEED configuration parameter!"
	#endif

	/* Setting the target address*/
		TWAR = (TARGET_ADDRESS<<1);
    4cbe:	12 b8       	out	0x02, r1	; 2

	/*Enable Master*/
		TWCR = ((1<<TWCR_TWINT) | (1<<TWCR_TWEN) | (1<<TWCR_TWEA));
    4cc0:	84 ec       	ldi	r24, 0xC4	; 196
    4cc2:	86 bf       	out	0x36, r24	; 54
		SET_BIT(TWCR,TWCR_TWEN);
#else
#error "wrong TWI_MASTER_SLAVE configuration parameter!"
#endif

}
    4cc4:	08 95       	ret

00004cc6 <TWI_enSendStartCondition>:
	//SET_BIT(TWCR,TWCR_TWSTA);

	/* Clearing flag to perform the required action */
	//SET_BIT(TWCR,TWCR_TWINT);

	TWCR = (1<<TWCR_TWINT)|(1<<TWCR_TWSTA)|(1<<TWCR_TWEN);
    4cc6:	84 ea       	ldi	r24, 0xA4	; 164
    4cc8:	86 bf       	out	0x36, r24	; 54

	/* Polling till interrupt flag is raised again (end of action) */
	while((GET_BIT(TWCR,TWCR_TWINT)) == 0);
    4cca:	06 b6       	in	r0, 0x36	; 54
    4ccc:	07 fe       	sbrs	r0, 7
    4cce:	fd cf       	rjmp	.-6      	; 0x4cca <TWI_enSendStartCondition+0x4>

	/* Checking for action ID */
	if((TWSR & STATUS_MASK) != START_ACK)
    4cd0:	81 b1       	in	r24, 0x01	; 1
    4cd2:	90 e0       	ldi	r25, 0x00	; 0
    4cd4:	88 7f       	andi	r24, 0xF8	; 248
    4cd6:	88 30       	cpi	r24, 0x08	; 8
    4cd8:	09 f0       	breq	.+2      	; 0x4cdc <TWI_enSendStartCondition+0x16>
    4cda:	91 e0       	ldi	r25, 0x01	; 1
	{
		/* Do nothing */
	}

	return Local_enErrorState;
}
    4cdc:	89 2f       	mov	r24, r25
    4cde:	08 95       	ret

00004ce0 <TWI_enSendRepeatedStart>:
	//SET_BIT(TWCR,TWCR_TWEN);

	/* 2) Clearing flag to perform the required action*/
	//SET_BIT(TWCR,TWCR_TWINT);

	TWCR = (1<<TWCR_TWINT)|(1<<TWCR_TWSTA)|(1<<TWCR_TWEN);
    4ce0:	84 ea       	ldi	r24, 0xA4	; 164
    4ce2:	86 bf       	out	0x36, r24	; 54

	/* 3) Polling till interrupt flag is raised again (end of action)*/
	while((GET_BIT(TWCR,TWCR_TWINT)) == 0);
    4ce4:	06 b6       	in	r0, 0x36	; 54
    4ce6:	07 fe       	sbrs	r0, 7
    4ce8:	fd cf       	rjmp	.-6      	; 0x4ce4 <TWI_enSendRepeatedStart+0x4>
	{
		/Do nothing/
	}*/

	return Local_enErrorState;
}
    4cea:	80 e0       	ldi	r24, 0x00	; 0
    4cec:	08 95       	ret

00004cee <TWI_enSendSlaveAddressWithWriteCmd>:

	/* Local enum object for error checking */
	TWI_ErrorState Local_enErrorState = NO_ERROR;

	/* 1) Setting address packet to data register to be sent*/
	TWDR = (Copy_u8SlaveAddress<<1);
    4cee:	88 0f       	add	r24, r24
    4cf0:	83 b9       	out	0x03, r24	; 3

	//SET_BIT(TWCR,TWCR_TWEN);

	/* 3) Clearing flag to perform the required action*/
	//SET_BIT(TWCR,TWCR_TWINT);
	TWCR = (1<<TWCR_TWINT) | (1<<TWCR_TWEN);
    4cf2:	84 e8       	ldi	r24, 0x84	; 132
    4cf4:	86 bf       	out	0x36, r24	; 54

	/* 4) Polling till interrupt flag is raised again (end of action)*/
	while((GET_BIT(TWCR,TWCR_TWINT)) == 0);
    4cf6:	06 b6       	in	r0, 0x36	; 54
    4cf8:	07 fe       	sbrs	r0, 7
    4cfa:	fd cf       	rjmp	.-6      	; 0x4cf6 <TWI_enSendSlaveAddressWithWriteCmd+0x8>

	/* 5) Checking for action ID*/
	if((TWSR & STATUS_MASK) != SLAVE_ADD_AND_WR_ACK)
    4cfc:	81 b1       	in	r24, 0x01	; 1
    4cfe:	88 7f       	andi	r24, 0xF8	; 248
    4d00:	88 31       	cpi	r24, 0x18	; 24
    4d02:	11 f0       	breq	.+4      	; 0x4d08 <TWI_enSendSlaveAddressWithWriteCmd+0x1a>
    4d04:	83 e0       	ldi	r24, 0x03	; 3
    4d06:	08 95       	ret
    4d08:	80 e0       	ldi	r24, 0x00	; 0
	}

	/*return from this function*/
	return Local_enErrorState ;

}
    4d0a:	08 95       	ret

00004d0c <TWI_enSendSlaveAddressWithReadCmd>:
{
	/* Local enum object for error checking */
	TWI_ErrorState Local_enErrorState = NO_ERROR;

	/* 1) Setting address packet to data register to be sent*/
	TWDR = ((Copy_u8SlaveAddress<< 1)|(0x01));
    4d0c:	88 0f       	add	r24, r24
    4d0e:	81 60       	ori	r24, 0x01	; 1
    4d10:	83 b9       	out	0x03, r24	; 3
	//CLR_BIT(TWCR,TWCR_TWSTA);

	/* 3) Clearing flag to perform the required action*/
	//SET_BIT(TWCR,TWCR_TWINT);

	TWCR = (1<<TWCR_TWINT) | (1<<TWCR_TWEN);
    4d12:	84 e8       	ldi	r24, 0x84	; 132
    4d14:	86 bf       	out	0x36, r24	; 54

	/* 4) Polling till interrupt flag is raised again (end of action)*/
	while((GET_BIT(TWCR,TWCR_TWINT)) == 0);
    4d16:	06 b6       	in	r0, 0x36	; 54
    4d18:	07 fe       	sbrs	r0, 7
    4d1a:	fd cf       	rjmp	.-6      	; 0x4d16 <TWI_enSendSlaveAddressWithReadCmd+0xa>

	/* 5) Checking for action ID*/
	if((TWSR & STATUS_MASK) != SLAVE_ADD_AND_WR_ACK)
    4d1c:	81 b1       	in	r24, 0x01	; 1
    4d1e:	88 7f       	andi	r24, 0xF8	; 248
    4d20:	88 31       	cpi	r24, 0x18	; 24
    4d22:	11 f0       	breq	.+4      	; 0x4d28 <TWI_enSendSlaveAddressWithReadCmd+0x1c>
    4d24:	84 e0       	ldi	r24, 0x04	; 4
    4d26:	08 95       	ret
    4d28:	80 e0       	ldi	r24, 0x00	; 0
		/*Do nothing*/
	}

	/*return from this function*/
	return Local_enErrorState ;
}
    4d2a:	08 95       	ret

00004d2c <TWI_enSendByte>:
{
	/* Local enum object for error checking */
	TWI_ErrorState Local_enErrorState = NO_ERROR;

	/* 1) Setting data byte to get transmitter*/
	TWDR = Copy_u8DataByte;
    4d2c:	83 b9       	out	0x03, r24	; 3
	/* 2) Clearing flag to perform the required action*/
	//SET_BIT(TWCR,TWCR_TWINT);

	//SET_BIT(TWCR,TWCR_TWEN);

	TWCR = (1<<TWCR_TWINT) | (1<<TWCR_TWEN) ;
    4d2e:	84 e8       	ldi	r24, 0x84	; 132
    4d30:	86 bf       	out	0x36, r24	; 54

	/* 3) Polling till interrupt flag is raised again (end of action)*/
	while((GET_BIT(TWCR,TWCR_TWINT)) == 0);
    4d32:	06 b6       	in	r0, 0x36	; 54
    4d34:	07 fe       	sbrs	r0, 7
    4d36:	fd cf       	rjmp	.-6      	; 0x4d32 <TWI_enSendByte+0x6>

	/* 4) Checking for action ID*/
	if((TWSR & STATUS_MASK) != MSTR_WR_BYTE_ACK)
    4d38:	81 b1       	in	r24, 0x01	; 1
    4d3a:	88 7f       	andi	r24, 0xF8	; 248
    4d3c:	88 32       	cpi	r24, 0x28	; 40
    4d3e:	11 f0       	breq	.+4      	; 0x4d44 <TWI_enSendByte+0x18>
    4d40:	85 e0       	ldi	r24, 0x05	; 5
    4d42:	08 95       	ret
    4d44:	80 e0       	ldi	r24, 0x00	; 0
	{
		/*Do nothing*/
	}

	return Local_enErrorState;
}
    4d46:	08 95       	ret

00004d48 <TWI_enReceiveByteAck>:

TWI_ErrorState TWI_enReceiveByteAck(u8 * Copy_pu8ReceivedDataByte)
{
    4d48:	fc 01       	movw	r30, r24
	/* Local enum object for error checking */
	TWI_ErrorState Local_enErrorState = NO_ERROR;

	/* 1) Clearing flag to allow slave sending data*/
	//SET_BIT(TWCR,TWCR_TWINT);
	TWCR = (1<<TWCR_TWINT) | (1<<TWCR_TWEN) | (1<<TWCR_TWEA);
    4d4a:	84 ec       	ldi	r24, 0xC4	; 196
    4d4c:	86 bf       	out	0x36, r24	; 54
	/* 2) Polling till interrupt flag is raised again (end of action)*/
	while((GET_BIT(TWCR,TWCR_TWINT)) == 0);
    4d4e:	06 b6       	in	r0, 0x36	; 54
    4d50:	07 fe       	sbrs	r0, 7
    4d52:	fd cf       	rjmp	.-6      	; 0x4d4e <TWI_enReceiveByteAck+0x6>

	/* 3) Checking for action ID*/
	if((TWSR & STATUS_MASK) != MSTR_RD_BYTE_WITH_ACK)
    4d54:	81 b1       	in	r24, 0x01	; 1
    4d56:	88 7f       	andi	r24, 0xF8	; 248
    4d58:	80 35       	cpi	r24, 0x50	; 80
    4d5a:	11 f0       	breq	.+4      	; 0x4d60 <TWI_enReceiveByteAck+0x18>
    4d5c:	86 e0       	ldi	r24, 0x06	; 6
    4d5e:	08 95       	ret
		Local_enErrorState = MSTR_READ_DATA_ERROR;
	}
	else
	{
		/* 4) Getting received data*/
		*Copy_pu8ReceivedDataByte = TWDR;
    4d60:	83 b1       	in	r24, 0x03	; 3
    4d62:	80 83       	st	Z, r24
    4d64:	80 e0       	ldi	r24, 0x00	; 0
	}

	return Local_enErrorState;
}
    4d66:	08 95       	ret

00004d68 <TWI_enReceiveByteNoAck>:

TWI_ErrorState TWI_enReceiveByteNoAck(u8 * Copy_pu8ReceiveDataByte)
{
    4d68:	fc 01       	movw	r30, r24
	/* Local enum object for error checking */
	TWI_ErrorState Local_enErrorState = NO_ERROR;

	/* 1) Setting the acknowledge bit */
	CLR_BIT(TWCR,TWCR_TWEA);
    4d6a:	86 b7       	in	r24, 0x36	; 54
    4d6c:	8f 7b       	andi	r24, 0xBF	; 191
    4d6e:	86 bf       	out	0x36, r24	; 54

	/* 2) Clearing flag to allow slave sending data*/
	//SET_BIT(TWCR,TWCR_TWINT);

	TWCR = (1<<TWCR_TWINT) | (1<<TWCR_TWEN);
    4d70:	84 e8       	ldi	r24, 0x84	; 132
    4d72:	86 bf       	out	0x36, r24	; 54

	/* 3) Polling till interrupt flag is raised again (end of action)*/
	while((GET_BIT(TWCR,TWCR_TWINT)) == 0);
    4d74:	06 b6       	in	r0, 0x36	; 54
    4d76:	07 fe       	sbrs	r0, 7
    4d78:	fd cf       	rjmp	.-6      	; 0x4d74 <TWI_enReceiveByteNoAck+0xc>

	/* 4) Checking for action ID*/
	if((TWSR & STATUS_MASK) != MSTR_RD_BYTE_WITH_NACK)
    4d7a:	81 b1       	in	r24, 0x01	; 1
    4d7c:	88 7f       	andi	r24, 0xF8	; 248
    4d7e:	88 35       	cpi	r24, 0x58	; 88
    4d80:	11 f0       	breq	.+4      	; 0x4d86 <TWI_enReceiveByteNoAck+0x1e>
    4d82:	86 e0       	ldi	r24, 0x06	; 6
    4d84:	08 95       	ret
		Local_enErrorState = MSTR_READ_DATA_ERROR;
	}
	else
	{
		/* 4) Getting received data*/
		*Copy_pu8ReceiveDataByte = TWDR;
    4d86:	83 b1       	in	r24, 0x03	; 3
    4d88:	80 83       	st	Z, r24
    4d8a:	80 e0       	ldi	r24, 0x00	; 0
	}

	return Local_enErrorState;
}
    4d8c:	08 95       	ret

00004d8e <TWI_voidSendStopCondition>:
	//SET_BIT(TWCR,TWCR_TWSTO);

	/* Clearing flag to perform the required action */
	//SET_BIT(TWCR,TWCR_TWINT) ;

	TWCR = (1<<TWCR_TWINT)|(1<<TWCR_TWEN)|(1<<TWCR_TWSTO);
    4d8e:	84 e9       	ldi	r24, 0x94	; 148
    4d90:	86 bf       	out	0x36, r24	; 54
}
    4d92:	08 95       	ret

00004d94 <TIMER0_voidInit>:
{
	/*Set Configurable Modes*/
#if TIMER0_WAVEFORM_GENERATION_MODE == TIMER_NORMAL_MODE

	/*Initialize Waveform Generation Mode as Normal Mode*/
	CLR_BIT(TCCR0 , TCCR0_WGM00) ;
    4d94:	83 b7       	in	r24, 0x33	; 51
    4d96:	8f 7b       	andi	r24, 0xBF	; 191
    4d98:	83 bf       	out	0x33, r24	; 51
	CLR_BIT(TCCR0 , TCCR0_WGM01) ;
    4d9a:	83 b7       	in	r24, 0x33	; 51
    4d9c:	87 7f       	andi	r24, 0xF7	; 247
    4d9e:	83 bf       	out	0x33, r24	; 51

	/*Set the Required Preload Value*/
	TCNT0 = TIMER0_PRELOAD_VAL ;
    4da0:	12 be       	out	0x32, r1	; 50

	/*Timer0 Overflow Interrupt Enable*/
#if TIMER0_OVERFLOW_INTERRUPT == DISABLE
	CLR_BIT(TIMSK , TIMSK_TOIE0) ;
#elif TIMER0_OVERFLOW_INTERRUPT == ENABLE
	SET_BIT(TIMSK , TIMSK_TOIE0) ;
    4da2:	89 b7       	in	r24, 0x39	; 57
    4da4:	81 60       	ori	r24, 0x01	; 1
    4da6:	89 bf       	out	0x39, r24	; 57
#error "Wrong TIMER0_WAVEFORM_GENERATION_MODE Config"

#endif

	/*Set the Required Prescaler*/
	TCCR0 &= TIMER_PRESCALER_MASK ;
    4da8:	83 b7       	in	r24, 0x33	; 51
    4daa:	88 7f       	andi	r24, 0xF8	; 248
    4dac:	83 bf       	out	0x33, r24	; 51
	TCCR0 |= TIMER0_PRESCALER ;
    4dae:	83 b7       	in	r24, 0x33	; 51
    4db0:	84 60       	ori	r24, 0x04	; 4
    4db2:	83 bf       	out	0x33, r24	; 51
}
    4db4:	08 95       	ret

00004db6 <TIMER0_voidSetPreload>:

void TIMER0_voidSetPreload(u8 copy_u8Preload)
{
	TCNT0 = copy_u8Preload ;
    4db6:	82 bf       	out	0x32, r24	; 50
}
    4db8:	08 95       	ret

00004dba <TIMER0_voidSetCTC>:

void TIMER0_voidSetCTC(u8 copy_u8CTC)
{
	OCR0 = copy_u8CTC ;
    4dba:	8c bf       	out	0x3c, r24	; 60
}
    4dbc:	08 95       	ret

00004dbe <TIMER0_voidSetFastPWM>:
{
#if TIMER0_WAVEFORM_GENERATION_MODE == TIMER_FAST_PWM_MODE
	/*Set the Required CTC Value*/
	OCR0 = copy_u8PWM ;
#endif
}
    4dbe:	08 95       	ret

00004dc0 <TIMER0_voidSetPhaseCorrectPWM>:
{
#if TIMER0_WAVEFORM_GENERATION_MODE == TIMER_PWM_MODE
	/*Set the Required CTC Value*/
	OCR0 = copy_u8PWM ;
#endif
}
    4dc0:	08 95       	ret

00004dc2 <TIMER0_u8GetTimerCounterValue>:

u8 TIMER0_u8GetTimerCounterValue(void)
{

	return TCNT0 ;
    4dc2:	82 b7       	in	r24, 0x32	; 50
}
    4dc4:	08 95       	ret

00004dc6 <TIMER1_voidInit>:
	SET_BIT(TCCR1A,TCCR1A_WGM10);
	SET_BIT(TCCR1A,TCCR1A_WGM11);
	SET_BIT(TCCR1B,TCCR1B_WGM12);
	SET_BIT(TCCR1B,TCCR1B_WGM13);
#elif TIMER1_WAVEFORM_GENERATION_MODE == TIMER1_FAST_PWM_ICR1_MODE
	CLR_BIT(TCCR1A,TCCR1A_WGM10);
    4dc6:	8f b5       	in	r24, 0x2f	; 47
    4dc8:	8e 7f       	andi	r24, 0xFE	; 254
    4dca:	8f bd       	out	0x2f, r24	; 47
	SET_BIT(TCCR1A,TCCR1A_WGM11);
    4dcc:	8f b5       	in	r24, 0x2f	; 47
    4dce:	82 60       	ori	r24, 0x02	; 2
    4dd0:	8f bd       	out	0x2f, r24	; 47
	SET_BIT(TCCR1B,TCCR1B_WGM12);
    4dd2:	8e b5       	in	r24, 0x2e	; 46
    4dd4:	88 60       	ori	r24, 0x08	; 8
    4dd6:	8e bd       	out	0x2e, r24	; 46
	SET_BIT(TCCR1B,TCCR1B_WGM13);
    4dd8:	8e b5       	in	r24, 0x2e	; 46
    4dda:	80 61       	ori	r24, 0x10	; 16
    4ddc:	8e bd       	out	0x2e, r24	; 46
#else
#error "Wrong TIMER1_WAVEFORM_GENERATION_MODE Config"
#endif

	/*Set the require CTC Values*/
	OCR1AL = (u8)TIMER1_CTCA_VAL ;
    4dde:	84 ef       	ldi	r24, 0xF4	; 244
    4de0:	8a bd       	out	0x2a, r24	; 42
	OCR1AH |= (TIMER1_CTCA_VAL>>8) ;
    4de2:	8b b5       	in	r24, 0x2b	; 43
    4de4:	81 60       	ori	r24, 0x01	; 1
    4de6:	8b bd       	out	0x2b, r24	; 43

	OCR1BL = TIMER1_CTCB_VAL ;
    4de8:	18 bc       	out	0x28, r1	; 40
	OCR1BH |= (TIMER1_CTCB_VAL>>8) ;
    4dea:	89 b5       	in	r24, 0x29	; 41
    4dec:	89 bd       	out	0x29, r24	; 41
	/*Set ICR1*/
#if TIMER1_WAVEFORM_GENERATION_MODE == TIMER1_FAST_PWM_ICR1_MODE
	ICR1L = (u8)TIMER1_ICR1_VAL ;
    4dee:	80 e2       	ldi	r24, 0x20	; 32
    4df0:	86 bd       	out	0x26, r24	; 38
	ICR1H = (TIMER1_ICR1_VAL>>8) ;
    4df2:	8e e4       	ldi	r24, 0x4E	; 78
    4df4:	87 bd       	out	0x27, r24	; 39
#if TIMER1_ICR_EDGE == RISING_EDGE
	SET_BIT(TCCR1B , TCCR1B_ICES1) ;
    4df6:	8e b5       	in	r24, 0x2e	; 46
    4df8:	80 64       	ori	r24, 0x40	; 64
    4dfa:	8e bd       	out	0x2e, r24	; 46
	/*Set OCR1A mode*/
#if TIMER1_OCR1A_MODE == TIMER_OC_DISCONNECTED
	CLR_BIT(TCCR1A , TCCR1A_COM1A0) ;
	CLR_BIT(TCCR1A , TCCR1A_COM1A1) ;
#elif TIMER1_OCR1A_MODE == TIMER_CLR_ON_CTC_SET_ON_TOP
	CLR_BIT(TCCR1A , TCCR1A_COM1A0) ;
    4dfc:	8f b5       	in	r24, 0x2f	; 47
    4dfe:	8f 7b       	andi	r24, 0xBF	; 191
    4e00:	8f bd       	out	0x2f, r24	; 47
	SET_BIT(TCCR1A , TCCR1A_COM1A1) ;
    4e02:	8f b5       	in	r24, 0x2f	; 47
    4e04:	80 68       	ori	r24, 0x80	; 128
    4e06:	8f bd       	out	0x2f, r24	; 47
	/*Set OCR1B mode*/
#if TIMER1_OCR1B_MODE == TIMER_OC_DISCONNECTED
	CLR_BIT(TCCR1A , TCCR1A_COM1B0) ;
	CLR_BIT(TCCR1A , TCCR1A_COM1B1) ;
#elif TIMER1_OCR1B_MODE == TIMER_CLR_ON_CTC_SET_ON_TOP
	CLR_BIT(TCCR1A , TCCR1A_COM1B0) ;
    4e08:	8f b5       	in	r24, 0x2f	; 47
    4e0a:	8f 7e       	andi	r24, 0xEF	; 239
    4e0c:	8f bd       	out	0x2f, r24	; 47
	SET_BIT(TCCR1A , TCCR1A_COM1B1) ;
    4e0e:	8f b5       	in	r24, 0x2f	; 47
    4e10:	80 62       	ori	r24, 0x20	; 32
    4e12:	8f bd       	out	0x2f, r24	; 47
#error "Wrong TIMER1_OCR1B_MODE Config"
#endif

	/*Timer1 PWM Interrupt Enable*/
#if TIMER1_OVERFLOW_INTERRUPT == DISABLE
	CLR_BIT(TIMSK , TIMSK_TOIE1) ;
    4e14:	89 b7       	in	r24, 0x39	; 57
    4e16:	8b 7f       	andi	r24, 0xFB	; 251
    4e18:	89 bf       	out	0x39, r24	; 57
#else
#error "Wrong TIMER1_OVERFLOW_INTERRUPT Config"
#endif

#if TIMER1_CTCA_INTERRUPT == DISABLE
	CLR_BIT(TIMSK , TIMSK_OCIE1A) ;
    4e1a:	89 b7       	in	r24, 0x39	; 57
    4e1c:	8f 7e       	andi	r24, 0xEF	; 239
    4e1e:	89 bf       	out	0x39, r24	; 57
#else
#error "Wrong TIMER1_CTCA_INTERRUPT Config"
#endif

#if TIMER1_CTCB_INTERRUPT == DISABLE
	CLR_BIT(TIMSK , TIMSK_OCIE1B) ;
    4e20:	89 b7       	in	r24, 0x39	; 57
    4e22:	87 7f       	andi	r24, 0xF7	; 247
    4e24:	89 bf       	out	0x39, r24	; 57
#else
#error "Wrong TIMER1_CTCB_INTERRUPT Config"
#endif

#if TIMER1_ICR_INTERRUPT == DISABLE
	CLR_BIT(TIMSK , TIMSK_TICIE1) ;
    4e26:	89 b7       	in	r24, 0x39	; 57
    4e28:	8f 7d       	andi	r24, 0xDF	; 223
    4e2a:	89 bf       	out	0x39, r24	; 57
#else
#error "Wrong TIMER1_WAVEFORM_GENERATION_MODE Config"
#endif

	/*Set the Required Prescaler*/
	TCCR1B &= TIMER_PRESCALER_MASK ;
    4e2c:	8e b5       	in	r24, 0x2e	; 46
    4e2e:	88 7f       	andi	r24, 0xF8	; 248
    4e30:	8e bd       	out	0x2e, r24	; 46
	TCCR1B |= TIMER1_PRESCALER ;
    4e32:	8e b5       	in	r24, 0x2e	; 46
    4e34:	82 60       	ori	r24, 0x02	; 2
    4e36:	8e bd       	out	0x2e, r24	; 46
}
    4e38:	08 95       	ret

00004e3a <TIMER1_voidSetPreload>:

void TIMER1_voidSetPreload(u16 copy_u8Preload)
{
	TCNT1L = copy_u8Preload ;
    4e3a:	8c bd       	out	0x2c, r24	; 44
	TCNT1H |= (copy_u8Preload>>8) ;
    4e3c:	8d b5       	in	r24, 0x2d	; 45
    4e3e:	89 2b       	or	r24, r25
    4e40:	8d bd       	out	0x2d, r24	; 45
}
    4e42:	08 95       	ret

00004e44 <TIMER1_voidSetCTCA>:

void TIMER1_voidSetCTCA(u16 copy_u8CTCA)
{
	OCR1AL = copy_u8CTCA ;
    4e44:	8a bd       	out	0x2a, r24	; 42
	OCR1AH |= (copy_u8CTCA>>8) ;
    4e46:	8b b5       	in	r24, 0x2b	; 43
    4e48:	89 2b       	or	r24, r25
    4e4a:	8b bd       	out	0x2b, r24	; 43
}
    4e4c:	08 95       	ret

00004e4e <TIMER1_voidSetCTCB>:

void TIMER1_voidSetCTCB(u16 copy_u8CTCB)
{
	OCR1BL = copy_u8CTCB ;
    4e4e:	88 bd       	out	0x28, r24	; 40
	OCR1BH |= (copy_u8CTCB>>8) ;
    4e50:	89 b5       	in	r24, 0x29	; 41
    4e52:	89 2b       	or	r24, r25
    4e54:	89 bd       	out	0x29, r24	; 41
}
    4e56:	08 95       	ret

00004e58 <TIMER1_u8GetTimerCounterValue>:

u16 TIMER1_u8GetTimerCounterValue(void)
{
	u16 Local_Var;
	Local_Var = TCNT1L;
    4e58:	2c b5       	in	r18, 0x2c	; 44
    4e5a:	30 e0       	ldi	r19, 0x00	; 0
	Local_Var |= (TCNT1H<<8);
    4e5c:	4d b5       	in	r20, 0x2d	; 45
    4e5e:	94 2f       	mov	r25, r20
    4e60:	80 e0       	ldi	r24, 0x00	; 0
    4e62:	28 2b       	or	r18, r24
    4e64:	39 2b       	or	r19, r25

	return Local_Var;
}
    4e66:	c9 01       	movw	r24, r18
    4e68:	08 95       	ret

00004e6a <TIMER2_voidInit>:
	OCR2 = TIMER2_CTC_VAL ;

#elif TIMER2_WAVEFORM_GENERATION_MODE == TIMER_CTC_MODE

	/*Initialize Waveform Generation Mode as CTC Mode*/
	CLR_BIT(TCCR2 , TCCR2_WGM20) ;
    4e6a:	85 b5       	in	r24, 0x25	; 37
    4e6c:	8f 7b       	andi	r24, 0xBF	; 191
    4e6e:	85 bd       	out	0x25, r24	; 37
	SET_BIT(TCCR2 , TCCR2_WGM21) ;
    4e70:	85 b5       	in	r24, 0x25	; 37
    4e72:	88 60       	ori	r24, 0x08	; 8
    4e74:	85 bd       	out	0x25, r24	; 37

	/*Set the Required CTC Value*/
	OCR2 = TIMER2_CTC_VAL ;
    4e76:	8f ef       	ldi	r24, 0xFF	; 255
    4e78:	83 bd       	out	0x23, r24	; 35
	/*Set CTC PWM MODE*/
#if TIMER2_OC2_MODE == TIMER_OC_DISCONNECTED
	CLR_BIT(TCCR2 , TCCR2_COM20) ;
	CLR_BIT(TCCR2 , TCCR2_COM21) ;
#elif TIMER2_OC2_MODE == TIMER_OC_TOGGEL
	CLR_BIT(TCCR2 , TCCR2_COM21) ;
    4e7a:	85 b5       	in	r24, 0x25	; 37
    4e7c:	8f 7d       	andi	r24, 0xDF	; 223
    4e7e:	85 bd       	out	0x25, r24	; 37
	SET_BIT(TCCR2 , TCCR2_COM20) ;
    4e80:	85 b5       	in	r24, 0x25	; 37
    4e82:	80 61       	ori	r24, 0x10	; 16
    4e84:	85 bd       	out	0x25, r24	; 37

	/*Timer2 Compare Match Interrupt Enable*/
#if TIMER2_CTC_INTERRUPT == DISABLE
	CLR_BIT(TIMSK , TIMSK_OCIE2) ;
#elif TIMER2_CTC_INTERRUPT == ENABLE
	SET_BIT(TIMSK , TIMSK_OCIE2) ;
    4e86:	89 b7       	in	r24, 0x39	; 57
    4e88:	80 68       	ori	r24, 0x80	; 128
    4e8a:	89 bf       	out	0x39, r24	; 57
#error "Wrong TIMER2_WAVEFORM_GENERATION_MODE Config"

#endif

	/*Set the Required Prescaler*/
	TCCR2 &= TIMER_PRESCALER_MASK ;
    4e8c:	85 b5       	in	r24, 0x25	; 37
    4e8e:	88 7f       	andi	r24, 0xF8	; 248
    4e90:	85 bd       	out	0x25, r24	; 37
	TCCR2 |= TIMER2_PRESCALER ;
    4e92:	85 b5       	in	r24, 0x25	; 37
    4e94:	85 60       	ori	r24, 0x05	; 5
    4e96:	85 bd       	out	0x25, r24	; 37
}
    4e98:	08 95       	ret

00004e9a <TIMER2_voidSetPreload>:

void TIMER2_voidSetPreload(u8 copy_u8Preload)
{
	TCNT2 = copy_u8Preload ;
    4e9a:	84 bd       	out	0x24, r24	; 36
}
    4e9c:	08 95       	ret

00004e9e <TIMER2_voidSetCTC>:
void TIMER2_voidSetCTC(u8 copy_u8CTC)
{
	OCR2 = copy_u8CTC ;
    4e9e:	83 bd       	out	0x23, r24	; 35
}
    4ea0:	08 95       	ret

00004ea2 <TIMER2_voidSetFastPWM>:
{
#if TIMER2_WAVEFORM_GENERATION_MODE == TIMER_FAST_PWM_MODE
	/*Set the Required CTC Value*/
	OCR2 = copy_u8PWM ;
#endif
}
    4ea2:	08 95       	ret

00004ea4 <TIMER2_voidSetPhaseCorrectPWM>:
{
#if TIMER2_WAVEFORM_GENERATION_MODE == TIMER_PWM_MODE
	/*Set the Required CTC Value*/
	OCR2 = copy_u8PWM ;
#endif
}
    4ea4:	08 95       	ret

00004ea6 <TIMER2_u8GetTimerCounterValue>:

u8 TIMER2_u8GetTimerCounterValue(void)
{
	return TCNT2 ;
    4ea6:	84 b5       	in	r24, 0x24	; 36
}
    4ea8:	08 95       	ret

00004eaa <TIMER_voidICUInitEnable>:

/******************ICU************************/
void TIMER_voidICUInitEnable(void)
{
#if TIMER_U8_ICR_INIT_STATE == TIMER_U8ICR_RISING_EDGE
	SET_BIT(TCCR1B,TCCR1B_ICES1);
    4eaa:	8e b5       	in	r24, 0x2e	; 46
    4eac:	80 64       	ori	r24, 0x40	; 64
    4eae:	8e bd       	out	0x2e, r24	; 46
#error "wrong TIMER_U8_ICR_INIT_STATE config"

#endif

	/*Enable Interrupt of ICU*/
	SET_BIT(TIMSK,TIMSK_TICIE1);
    4eb0:	89 b7       	in	r24, 0x39	; 57
    4eb2:	80 62       	ori	r24, 0x20	; 32
    4eb4:	89 bf       	out	0x39, r24	; 57
}
    4eb6:	08 95       	ret

00004eb8 <TIMER_voidICUSetTriggerEdge>:
u8 TIMER_voidICUSetTriggerEdge(u8 copy_u8Edge)
{
	u8 Local_u8ErrorStatus = E_OK;
	if (copy_u8Edge == TIMER_U8ICR_RISING_EDGE)
    4eb8:	82 30       	cpi	r24, 0x02	; 2
    4eba:	29 f4       	brne	.+10     	; 0x4ec6 <TIMER_voidICUSetTriggerEdge+0xe>
	{
		SET_BIT(TCCR1B,TCCR1B_ICES1);
    4ebc:	8e b5       	in	r24, 0x2e	; 46
    4ebe:	80 64       	ori	r24, 0x40	; 64
    4ec0:	8e bd       	out	0x2e, r24	; 46
    4ec2:	80 e0       	ldi	r24, 0x00	; 0
    4ec4:	08 95       	ret

	}
	else if(copy_u8Edge == TIMER_U8ICR_FALLING_EDGE)
    4ec6:	81 30       	cpi	r24, 0x01	; 1
    4ec8:	11 f0       	breq	.+4      	; 0x4ece <TIMER_voidICUSetTriggerEdge+0x16>
    4eca:	81 e0       	ldi	r24, 0x01	; 1
    4ecc:	08 95       	ret
	{
		CLR_BIT(TCCR1B,TCCR1B_ICES1);
    4ece:	8e b5       	in	r24, 0x2e	; 46
    4ed0:	8f 7b       	andi	r24, 0xBF	; 191
    4ed2:	8e bd       	out	0x2e, r24	; 46
    4ed4:	80 e0       	ldi	r24, 0x00	; 0
	{
		Local_u8ErrorStatus = E_NOK;

	}
	return Local_u8ErrorStatus;
}
    4ed6:	08 95       	ret

00004ed8 <TIMER_voidICUEnableInterrupt>:
void TIMER_voidICUEnableInterrupt(void)
{
	SET_BIT(TIMSK,TIMSK_TICIE1);
    4ed8:	89 b7       	in	r24, 0x39	; 57
    4eda:	80 62       	ori	r24, 0x20	; 32
    4edc:	89 bf       	out	0x39, r24	; 57

}
    4ede:	08 95       	ret

00004ee0 <TIMER_voidICUDisableInterrupt>:
void TIMER_voidICUDisableInterrupt(void)
{
	CLR_BIT(TIMSK,TIMSK_TICIE1);
    4ee0:	89 b7       	in	r24, 0x39	; 57
    4ee2:	8f 7d       	andi	r24, 0xDF	; 223
    4ee4:	89 bf       	out	0x39, r24	; 57

}
    4ee6:	08 95       	ret

00004ee8 <TIMER_u16GetICR>:
u16 TIMER_u16GetICR(void)
{
	u16 Local_u16ICRValue;
	Local_u16ICRValue = ICR1L;
    4ee8:	26 b5       	in	r18, 0x26	; 38
    4eea:	30 e0       	ldi	r19, 0x00	; 0
	Local_u16ICRValue |=(ICR1H<<8);
    4eec:	47 b5       	in	r20, 0x27	; 39
    4eee:	94 2f       	mov	r25, r20
    4ef0:	80 e0       	ldi	r24, 0x00	; 0
    4ef2:	28 2b       	or	r18, r24
    4ef4:	39 2b       	or	r19, r25
	return Local_u16ICRValue;
}
    4ef6:	c9 01       	movw	r24, r18
    4ef8:	08 95       	ret

00004efa <TIMER_u8SetCallBack>:

/*****************************************************************************************************/
u8 TIMER_u8SetCallBack(void(*copy_ptfCallBackFunc)(void),u8 copy_u8VectorID)
{
	u8 Local_u8ErrorState = E_OK;
	if((copy_u8VectorID<=TIMER0_OVF_VECTOR_ID) && (copy_u8VectorID>=TIMER2_CTC_VECTOR_ID))
    4efa:	64 50       	subi	r22, 0x04	; 4
    4efc:	68 30       	cpi	r22, 0x08	; 8
    4efe:	10 f0       	brcs	.+4      	; 0x4f04 <TIMER_u8SetCallBack+0xa>
    4f00:	83 e0       	ldi	r24, 0x03	; 3
    4f02:	08 95       	ret
	{
		u8 Local_u8ArrayIndex = copy_u8VectorID - CBF_OFFSET ;
		if(copy_ptfCallBackFunc!= NULL)
    4f04:	00 97       	sbiw	r24, 0x00	; 0
    4f06:	11 f4       	brne	.+4      	; 0x4f0c <TIMER_u8SetCallBack+0x12>
    4f08:	82 e0       	ldi	r24, 0x02	; 2
    4f0a:	08 95       	ret
		{
			TIMERS_ptfCallBackFuncArr[Local_u8ArrayIndex]= copy_ptfCallBackFunc;
    4f0c:	e6 2f       	mov	r30, r22
    4f0e:	f0 e0       	ldi	r31, 0x00	; 0
    4f10:	ee 0f       	add	r30, r30
    4f12:	ff 1f       	adc	r31, r31
    4f14:	e1 50       	subi	r30, 0x01	; 1
    4f16:	fe 4f       	sbci	r31, 0xFE	; 254
    4f18:	91 83       	std	Z+1, r25	; 0x01
    4f1a:	80 83       	st	Z, r24
    4f1c:	80 e0       	ldi	r24, 0x00	; 0
	{
		Local_u8ErrorState = E_NOK_OUT_OF_RANGE;
	}

	return Local_u8ErrorState;
}
    4f1e:	08 95       	ret

00004f20 <__vector_11>:


/***************TIMER0 OVF************************/
void __vector_11(void) __attribute__((signal));
void __vector_11(void)
{
    4f20:	1f 92       	push	r1
    4f22:	0f 92       	push	r0
    4f24:	0f b6       	in	r0, 0x3f	; 63
    4f26:	0f 92       	push	r0
    4f28:	11 24       	eor	r1, r1
    4f2a:	2f 93       	push	r18
    4f2c:	3f 93       	push	r19
    4f2e:	4f 93       	push	r20
    4f30:	5f 93       	push	r21
    4f32:	6f 93       	push	r22
    4f34:	7f 93       	push	r23
    4f36:	8f 93       	push	r24
    4f38:	9f 93       	push	r25
    4f3a:	af 93       	push	r26
    4f3c:	bf 93       	push	r27
    4f3e:	ef 93       	push	r30
    4f40:	ff 93       	push	r31
	if(TIMERS_ptfCallBackFuncArr[TIMER0_OVF_VECTOR_ID - CBF_OFFSET] != NULL)
    4f42:	e0 91 0d 02 	lds	r30, 0x020D
    4f46:	f0 91 0e 02 	lds	r31, 0x020E
    4f4a:	30 97       	sbiw	r30, 0x00	; 0
    4f4c:	09 f0       	breq	.+2      	; 0x4f50 <__vector_11+0x30>
	{
		TIMERS_ptfCallBackFuncArr[TIMER0_OVF_VECTOR_ID - CBF_OFFSET]();
    4f4e:	09 95       	icall
	}
}
    4f50:	ff 91       	pop	r31
    4f52:	ef 91       	pop	r30
    4f54:	bf 91       	pop	r27
    4f56:	af 91       	pop	r26
    4f58:	9f 91       	pop	r25
    4f5a:	8f 91       	pop	r24
    4f5c:	7f 91       	pop	r23
    4f5e:	6f 91       	pop	r22
    4f60:	5f 91       	pop	r21
    4f62:	4f 91       	pop	r20
    4f64:	3f 91       	pop	r19
    4f66:	2f 91       	pop	r18
    4f68:	0f 90       	pop	r0
    4f6a:	0f be       	out	0x3f, r0	; 63
    4f6c:	0f 90       	pop	r0
    4f6e:	1f 90       	pop	r1
    4f70:	18 95       	reti

00004f72 <__vector_10>:


/***************TIMER0 CTC************************/
void __vector_10(void) __attribute__((signal));
void __vector_10(void)
{
    4f72:	1f 92       	push	r1
    4f74:	0f 92       	push	r0
    4f76:	0f b6       	in	r0, 0x3f	; 63
    4f78:	0f 92       	push	r0
    4f7a:	11 24       	eor	r1, r1
    4f7c:	2f 93       	push	r18
    4f7e:	3f 93       	push	r19
    4f80:	4f 93       	push	r20
    4f82:	5f 93       	push	r21
    4f84:	6f 93       	push	r22
    4f86:	7f 93       	push	r23
    4f88:	8f 93       	push	r24
    4f8a:	9f 93       	push	r25
    4f8c:	af 93       	push	r26
    4f8e:	bf 93       	push	r27
    4f90:	ef 93       	push	r30
    4f92:	ff 93       	push	r31
	if(TIMERS_ptfCallBackFuncArr[TIMER0_CTC_VECTOR_ID - CBF_OFFSET] != NULL)
    4f94:	e0 91 0b 02 	lds	r30, 0x020B
    4f98:	f0 91 0c 02 	lds	r31, 0x020C
    4f9c:	30 97       	sbiw	r30, 0x00	; 0
    4f9e:	09 f0       	breq	.+2      	; 0x4fa2 <__vector_10+0x30>
	{
		TIMERS_ptfCallBackFuncArr[TIMER0_CTC_VECTOR_ID - CBF_OFFSET]();
    4fa0:	09 95       	icall
	}
}
    4fa2:	ff 91       	pop	r31
    4fa4:	ef 91       	pop	r30
    4fa6:	bf 91       	pop	r27
    4fa8:	af 91       	pop	r26
    4faa:	9f 91       	pop	r25
    4fac:	8f 91       	pop	r24
    4fae:	7f 91       	pop	r23
    4fb0:	6f 91       	pop	r22
    4fb2:	5f 91       	pop	r21
    4fb4:	4f 91       	pop	r20
    4fb6:	3f 91       	pop	r19
    4fb8:	2f 91       	pop	r18
    4fba:	0f 90       	pop	r0
    4fbc:	0f be       	out	0x3f, r0	; 63
    4fbe:	0f 90       	pop	r0
    4fc0:	1f 90       	pop	r1
    4fc2:	18 95       	reti

00004fc4 <__vector_9>:


/***************TIMER1 OVF************************/
void __vector_9(void) __attribute__((signal));
void __vector_9(void)
{
    4fc4:	1f 92       	push	r1
    4fc6:	0f 92       	push	r0
    4fc8:	0f b6       	in	r0, 0x3f	; 63
    4fca:	0f 92       	push	r0
    4fcc:	11 24       	eor	r1, r1
    4fce:	2f 93       	push	r18
    4fd0:	3f 93       	push	r19
    4fd2:	4f 93       	push	r20
    4fd4:	5f 93       	push	r21
    4fd6:	6f 93       	push	r22
    4fd8:	7f 93       	push	r23
    4fda:	8f 93       	push	r24
    4fdc:	9f 93       	push	r25
    4fde:	af 93       	push	r26
    4fe0:	bf 93       	push	r27
    4fe2:	ef 93       	push	r30
    4fe4:	ff 93       	push	r31
	if(TIMERS_ptfCallBackFuncArr[TIMER1_OVF_VECTOR_ID - CBF_OFFSET] != NULL)
    4fe6:	e0 91 09 02 	lds	r30, 0x0209
    4fea:	f0 91 0a 02 	lds	r31, 0x020A
    4fee:	30 97       	sbiw	r30, 0x00	; 0
    4ff0:	09 f0       	breq	.+2      	; 0x4ff4 <__vector_9+0x30>
	{
		TIMERS_ptfCallBackFuncArr[TIMER1_OVF_VECTOR_ID - CBF_OFFSET]();
    4ff2:	09 95       	icall
	}
}
    4ff4:	ff 91       	pop	r31
    4ff6:	ef 91       	pop	r30
    4ff8:	bf 91       	pop	r27
    4ffa:	af 91       	pop	r26
    4ffc:	9f 91       	pop	r25
    4ffe:	8f 91       	pop	r24
    5000:	7f 91       	pop	r23
    5002:	6f 91       	pop	r22
    5004:	5f 91       	pop	r21
    5006:	4f 91       	pop	r20
    5008:	3f 91       	pop	r19
    500a:	2f 91       	pop	r18
    500c:	0f 90       	pop	r0
    500e:	0f be       	out	0x3f, r0	; 63
    5010:	0f 90       	pop	r0
    5012:	1f 90       	pop	r1
    5014:	18 95       	reti

00005016 <__vector_8>:


/***************TIMER1 CTCB***********************/
void __vector_8(void) __attribute__((signal));
void __vector_8(void)
{
    5016:	1f 92       	push	r1
    5018:	0f 92       	push	r0
    501a:	0f b6       	in	r0, 0x3f	; 63
    501c:	0f 92       	push	r0
    501e:	11 24       	eor	r1, r1
    5020:	2f 93       	push	r18
    5022:	3f 93       	push	r19
    5024:	4f 93       	push	r20
    5026:	5f 93       	push	r21
    5028:	6f 93       	push	r22
    502a:	7f 93       	push	r23
    502c:	8f 93       	push	r24
    502e:	9f 93       	push	r25
    5030:	af 93       	push	r26
    5032:	bf 93       	push	r27
    5034:	ef 93       	push	r30
    5036:	ff 93       	push	r31
	if(TIMERS_ptfCallBackFuncArr[TIMER1_CTCB_VECTOR_ID - CBF_OFFSET] != NULL)
    5038:	e0 91 07 02 	lds	r30, 0x0207
    503c:	f0 91 08 02 	lds	r31, 0x0208
    5040:	30 97       	sbiw	r30, 0x00	; 0
    5042:	09 f0       	breq	.+2      	; 0x5046 <__vector_8+0x30>
	{
		TIMERS_ptfCallBackFuncArr[TIMER1_CTCB_VECTOR_ID - CBF_OFFSET]();
    5044:	09 95       	icall
	}
}
    5046:	ff 91       	pop	r31
    5048:	ef 91       	pop	r30
    504a:	bf 91       	pop	r27
    504c:	af 91       	pop	r26
    504e:	9f 91       	pop	r25
    5050:	8f 91       	pop	r24
    5052:	7f 91       	pop	r23
    5054:	6f 91       	pop	r22
    5056:	5f 91       	pop	r21
    5058:	4f 91       	pop	r20
    505a:	3f 91       	pop	r19
    505c:	2f 91       	pop	r18
    505e:	0f 90       	pop	r0
    5060:	0f be       	out	0x3f, r0	; 63
    5062:	0f 90       	pop	r0
    5064:	1f 90       	pop	r1
    5066:	18 95       	reti

00005068 <__vector_7>:


/***************TIMER1 CTCA***********************/
void __vector_7(void) __attribute__((signal));
void __vector_7(void)
{
    5068:	1f 92       	push	r1
    506a:	0f 92       	push	r0
    506c:	0f b6       	in	r0, 0x3f	; 63
    506e:	0f 92       	push	r0
    5070:	11 24       	eor	r1, r1
    5072:	2f 93       	push	r18
    5074:	3f 93       	push	r19
    5076:	4f 93       	push	r20
    5078:	5f 93       	push	r21
    507a:	6f 93       	push	r22
    507c:	7f 93       	push	r23
    507e:	8f 93       	push	r24
    5080:	9f 93       	push	r25
    5082:	af 93       	push	r26
    5084:	bf 93       	push	r27
    5086:	ef 93       	push	r30
    5088:	ff 93       	push	r31
	if(TIMERS_ptfCallBackFuncArr[TIMER1_CTCA_VECTOR_ID - CBF_OFFSET] != NULL)
    508a:	e0 91 05 02 	lds	r30, 0x0205
    508e:	f0 91 06 02 	lds	r31, 0x0206
    5092:	30 97       	sbiw	r30, 0x00	; 0
    5094:	09 f0       	breq	.+2      	; 0x5098 <__vector_7+0x30>
	{
		TIMERS_ptfCallBackFuncArr[TIMER1_CTCA_VECTOR_ID - CBF_OFFSET]();
    5096:	09 95       	icall
	}
}
    5098:	ff 91       	pop	r31
    509a:	ef 91       	pop	r30
    509c:	bf 91       	pop	r27
    509e:	af 91       	pop	r26
    50a0:	9f 91       	pop	r25
    50a2:	8f 91       	pop	r24
    50a4:	7f 91       	pop	r23
    50a6:	6f 91       	pop	r22
    50a8:	5f 91       	pop	r21
    50aa:	4f 91       	pop	r20
    50ac:	3f 91       	pop	r19
    50ae:	2f 91       	pop	r18
    50b0:	0f 90       	pop	r0
    50b2:	0f be       	out	0x3f, r0	; 63
    50b4:	0f 90       	pop	r0
    50b6:	1f 90       	pop	r1
    50b8:	18 95       	reti

000050ba <__vector_6>:


/***************TIMER1 ICU************************/
void __vector_6(void) __attribute__((signal));
void __vector_6(void)
{
    50ba:	1f 92       	push	r1
    50bc:	0f 92       	push	r0
    50be:	0f b6       	in	r0, 0x3f	; 63
    50c0:	0f 92       	push	r0
    50c2:	11 24       	eor	r1, r1
    50c4:	2f 93       	push	r18
    50c6:	3f 93       	push	r19
    50c8:	4f 93       	push	r20
    50ca:	5f 93       	push	r21
    50cc:	6f 93       	push	r22
    50ce:	7f 93       	push	r23
    50d0:	8f 93       	push	r24
    50d2:	9f 93       	push	r25
    50d4:	af 93       	push	r26
    50d6:	bf 93       	push	r27
    50d8:	ef 93       	push	r30
    50da:	ff 93       	push	r31
	if(TIMERS_ptfCallBackFuncArr[TIMER1_ICU_VECTOR_ID - CBF_OFFSET] != NULL)
    50dc:	e0 91 03 02 	lds	r30, 0x0203
    50e0:	f0 91 04 02 	lds	r31, 0x0204
    50e4:	30 97       	sbiw	r30, 0x00	; 0
    50e6:	09 f0       	breq	.+2      	; 0x50ea <__vector_6+0x30>
	{
		TIMERS_ptfCallBackFuncArr[TIMER1_ICU_VECTOR_ID - CBF_OFFSET]();
    50e8:	09 95       	icall
	}
}
    50ea:	ff 91       	pop	r31
    50ec:	ef 91       	pop	r30
    50ee:	bf 91       	pop	r27
    50f0:	af 91       	pop	r26
    50f2:	9f 91       	pop	r25
    50f4:	8f 91       	pop	r24
    50f6:	7f 91       	pop	r23
    50f8:	6f 91       	pop	r22
    50fa:	5f 91       	pop	r21
    50fc:	4f 91       	pop	r20
    50fe:	3f 91       	pop	r19
    5100:	2f 91       	pop	r18
    5102:	0f 90       	pop	r0
    5104:	0f be       	out	0x3f, r0	; 63
    5106:	0f 90       	pop	r0
    5108:	1f 90       	pop	r1
    510a:	18 95       	reti

0000510c <__vector_5>:

/***************TIMER2 OVF************************/
void __vector_5(void) __attribute__((signal));
void __vector_5(void)
{
    510c:	1f 92       	push	r1
    510e:	0f 92       	push	r0
    5110:	0f b6       	in	r0, 0x3f	; 63
    5112:	0f 92       	push	r0
    5114:	11 24       	eor	r1, r1
    5116:	2f 93       	push	r18
    5118:	3f 93       	push	r19
    511a:	4f 93       	push	r20
    511c:	5f 93       	push	r21
    511e:	6f 93       	push	r22
    5120:	7f 93       	push	r23
    5122:	8f 93       	push	r24
    5124:	9f 93       	push	r25
    5126:	af 93       	push	r26
    5128:	bf 93       	push	r27
    512a:	ef 93       	push	r30
    512c:	ff 93       	push	r31
	if(TIMERS_ptfCallBackFuncArr[TIMER2_OVF_VECTOR_ID - CBF_OFFSET] != NULL)
    512e:	e0 91 01 02 	lds	r30, 0x0201
    5132:	f0 91 02 02 	lds	r31, 0x0202
    5136:	30 97       	sbiw	r30, 0x00	; 0
    5138:	09 f0       	breq	.+2      	; 0x513c <__vector_5+0x30>
	{
		TIMERS_ptfCallBackFuncArr[TIMER2_OVF_VECTOR_ID - CBF_OFFSET]();
    513a:	09 95       	icall
	}
}
    513c:	ff 91       	pop	r31
    513e:	ef 91       	pop	r30
    5140:	bf 91       	pop	r27
    5142:	af 91       	pop	r26
    5144:	9f 91       	pop	r25
    5146:	8f 91       	pop	r24
    5148:	7f 91       	pop	r23
    514a:	6f 91       	pop	r22
    514c:	5f 91       	pop	r21
    514e:	4f 91       	pop	r20
    5150:	3f 91       	pop	r19
    5152:	2f 91       	pop	r18
    5154:	0f 90       	pop	r0
    5156:	0f be       	out	0x3f, r0	; 63
    5158:	0f 90       	pop	r0
    515a:	1f 90       	pop	r1
    515c:	18 95       	reti

0000515e <__vector_4>:


/***************TIMER2 CTC************************/
void __vector_4(void) __attribute__((signal));
void __vector_4(void)
{
    515e:	1f 92       	push	r1
    5160:	0f 92       	push	r0
    5162:	0f b6       	in	r0, 0x3f	; 63
    5164:	0f 92       	push	r0
    5166:	11 24       	eor	r1, r1
    5168:	2f 93       	push	r18
    516a:	3f 93       	push	r19
    516c:	4f 93       	push	r20
    516e:	5f 93       	push	r21
    5170:	6f 93       	push	r22
    5172:	7f 93       	push	r23
    5174:	8f 93       	push	r24
    5176:	9f 93       	push	r25
    5178:	af 93       	push	r26
    517a:	bf 93       	push	r27
    517c:	ef 93       	push	r30
    517e:	ff 93       	push	r31
	if(TIMERS_ptfCallBackFuncArr[TIMER2_CTC_VECTOR_ID - CBF_OFFSET] != NULL)
    5180:	e0 91 ff 01 	lds	r30, 0x01FF
    5184:	f0 91 00 02 	lds	r31, 0x0200
    5188:	30 97       	sbiw	r30, 0x00	; 0
    518a:	09 f0       	breq	.+2      	; 0x518e <__vector_4+0x30>
	{
		TIMERS_ptfCallBackFuncArr[TIMER2_CTC_VECTOR_ID - CBF_OFFSET]();
    518c:	09 95       	icall
	}
}
    518e:	ff 91       	pop	r31
    5190:	ef 91       	pop	r30
    5192:	bf 91       	pop	r27
    5194:	af 91       	pop	r26
    5196:	9f 91       	pop	r25
    5198:	8f 91       	pop	r24
    519a:	7f 91       	pop	r23
    519c:	6f 91       	pop	r22
    519e:	5f 91       	pop	r21
    51a0:	4f 91       	pop	r20
    51a2:	3f 91       	pop	r19
    51a4:	2f 91       	pop	r18
    51a6:	0f 90       	pop	r0
    51a8:	0f be       	out	0x3f, r0	; 63
    51aa:	0f 90       	pop	r0
    51ac:	1f 90       	pop	r1
    51ae:	18 95       	reti

000051b0 <SPI_VoidInit>:
{
	/*Data Order*/
	#if SPI_DATA_ORDER == SPI_DATA_LSB_FIRST
		SET_BIT(SPCR , SPCR_DORD) ;
	#elif SPI_DATA_ORDER == SPI_DATA_MSP_FIRST
		CLR_BIT(SPCR , SPCR_DORD) ;
    51b0:	6d 98       	cbi	0x0d, 5	; 13
		#error "wrong SPI_DATA_ORDER config"
	#endif

	/*Master/Slave Select*/
	#if SPI_MASTER_SLAVE_SELECT == SPI_MASTER
		SET_BIT(SPCR , SPCR_MSTR) ;
    51b2:	6c 9a       	sbi	0x0d, 4	; 13
		#error "wrong SPI_MASTER_SLAVE_SELECT config"
	#endif

	/*Clock Polarity*/
	#if SPI_CLOCK_POLARITY == SPI_RISING_LEADING_FALLING_TRAILING
		CLR_BIT(SPCR , SPCR_CPOL) ;
    51b4:	6b 98       	cbi	0x0d, 3	; 13
		#error "wrong SPI_CLOCK_POLARITY config"
	#endif

	/*Clock Phase*/
	#if SPI_CLOCK_PHASE == SPI_SAMPLE_LEADING_SETUP_TRAILING
		CLR_BIT(SPCR , SPCR_CPHA) ;
    51b6:	6a 98       	cbi	0x0d, 2	; 13
	#elif SPI_CLOCK_RATE == SPI_FREQ_DIVIDED_BY_8
		SET_BIT(SPCR , SPCR_SPR0) ;
		CLR_BIT(SPCR , SPCR_SPR1) ;
		SET_BIT(SPSR , SPSR_SPI2X) ;
	#elif SPI_CLOCK_RATE == SPI_FREQ_DIVIDED_BY_16
		SET_BIT(SPCR , SPCR_SPR0) ;
    51b8:	68 9a       	sbi	0x0d, 0	; 13
		CLR_BIT(SPCR , SPCR_SPR1) ;
    51ba:	69 98       	cbi	0x0d, 1	; 13
		CLR_BIT(SPSR , SPSR_SPI2X) ;
    51bc:	70 98       	cbi	0x0e, 0	; 14

	/*SPI Interrupt Enable*/
	#if SPI_INTERRUPT_ENABLE_MODE == SPI_INTERRUPT_DISABLE
		CLR_BIT(SPCR , SPCR_SPIE) ;
	#elif SPI_INTERRUPT_ENABLE_MODE == SPI_INTERRUPT_ENABLE
		SET_BIT(SPCR , SPCR_SPIE) ;
    51be:	6f 9a       	sbi	0x0d, 7	; 13

	/*SPI Enable*/
	#if SPI_ENABLE_MODE == SPI_DISABLE
		CLR_BIT(SPCR , SPCR_SPE) ;
	#elif SPI_ENABLE_MODE == SPI_ENABLE
		SET_BIT(SPCR , SPCR_SPE) ;
    51c0:	6e 9a       	sbi	0x0d, 6	; 13
	#else
		#error "wrong SPI_ENABLE_MODE config"
	#endif

}
    51c2:	08 95       	ret

000051c4 <SPI_u8InitConfig>:


*/

u8 SPI_u8InitConfig (SPI_CONFIG * spi)
{
    51c4:	fc 01       	movw	r30, r24
	u8 Local_u8ErrorState = E_OK ;

	if ((spi != NULL) && (spi->SPI_u8ClockPhase != 0) && (spi->SPI_u8ClockPolarity != 0) && (spi->SPI_u8ClockRate != 0) && (spi->SPI_u8DataOrder != 0) && (spi->SPI_u8InterruptEnable != 0) && (spi->SPI_u8MasterSlaveSelect != 0) && (spi->SPI_u8SPIEnable != 0))
    51c6:	00 97       	sbiw	r24, 0x00	; 0
    51c8:	09 f4       	brne	.+2      	; 0x51cc <SPI_u8InitConfig+0x8>
    51ca:	78 c0       	rjmp	.+240    	; 0x52bc <SPI_u8InitConfig+0xf8>
    51cc:	35 81       	ldd	r19, Z+5	; 0x05
    51ce:	33 23       	and	r19, r19
    51d0:	09 f4       	brne	.+2      	; 0x51d4 <SPI_u8InitConfig+0x10>
    51d2:	74 c0       	rjmp	.+232    	; 0x52bc <SPI_u8InitConfig+0xf8>
    51d4:	44 81       	ldd	r20, Z+4	; 0x04
    51d6:	44 23       	and	r20, r20
    51d8:	09 f4       	brne	.+2      	; 0x51dc <SPI_u8InitConfig+0x18>
    51da:	70 c0       	rjmp	.+224    	; 0x52bc <SPI_u8InitConfig+0xf8>
    51dc:	26 81       	ldd	r18, Z+6	; 0x06
    51de:	22 23       	and	r18, r18
    51e0:	09 f4       	brne	.+2      	; 0x51e4 <SPI_u8InitConfig+0x20>
    51e2:	6c c0       	rjmp	.+216    	; 0x52bc <SPI_u8InitConfig+0xf8>
    51e4:	52 81       	ldd	r21, Z+2	; 0x02
    51e6:	55 23       	and	r21, r21
    51e8:	09 f4       	brne	.+2      	; 0x51ec <SPI_u8InitConfig+0x28>
    51ea:	68 c0       	rjmp	.+208    	; 0x52bc <SPI_u8InitConfig+0xf8>
    51ec:	70 81       	ld	r23, Z
    51ee:	77 23       	and	r23, r23
    51f0:	09 f4       	brne	.+2      	; 0x51f4 <SPI_u8InitConfig+0x30>
    51f2:	64 c0       	rjmp	.+200    	; 0x52bc <SPI_u8InitConfig+0xf8>
    51f4:	63 81       	ldd	r22, Z+3	; 0x03
    51f6:	66 23       	and	r22, r22
    51f8:	09 f4       	brne	.+2      	; 0x51fc <SPI_u8InitConfig+0x38>
    51fa:	60 c0       	rjmp	.+192    	; 0x52bc <SPI_u8InitConfig+0xf8>
    51fc:	91 81       	ldd	r25, Z+1	; 0x01
    51fe:	99 23       	and	r25, r25
    5200:	09 f4       	brne	.+2      	; 0x5204 <SPI_u8InitConfig+0x40>
    5202:	5c c0       	rjmp	.+184    	; 0x52bc <SPI_u8InitConfig+0xf8>
	{
		switch (spi->SPI_u8ClockPhase)
    5204:	31 30       	cpi	r19, 0x01	; 1
    5206:	21 f0       	breq	.+8      	; 0x5210 <SPI_u8InitConfig+0x4c>
    5208:	32 30       	cpi	r19, 0x02	; 2
    520a:	21 f0       	breq	.+8      	; 0x5214 <SPI_u8InitConfig+0x50>
    520c:	81 e0       	ldi	r24, 0x01	; 1
    520e:	04 c0       	rjmp	.+8      	; 0x5218 <SPI_u8InitConfig+0x54>
		{
		case SPI_SAMPLE_LEADING_SETUP_TRAILING: CLR_BIT(SPCR,SPCR_CPHA) ; break ;
    5210:	6a 98       	cbi	0x0d, 2	; 13
    5212:	01 c0       	rjmp	.+2      	; 0x5216 <SPI_u8InitConfig+0x52>
		case SPI_SETUP_LEADING_SAMPLE_TRAILING: SET_BIT(SPCR,SPCR_CPHA) ; break ;
    5214:	6a 9a       	sbi	0x0d, 2	; 13
    5216:	80 e0       	ldi	r24, 0x00	; 0
		default: 								Local_u8ErrorState = E_NOK ; break ;
		}
		switch (spi->SPI_u8ClockPolarity)
    5218:	41 30       	cpi	r20, 0x01	; 1
    521a:	21 f0       	breq	.+8      	; 0x5224 <SPI_u8InitConfig+0x60>
    521c:	42 30       	cpi	r20, 0x02	; 2
    521e:	21 f0       	breq	.+8      	; 0x5228 <SPI_u8InitConfig+0x64>
    5220:	81 e0       	ldi	r24, 0x01	; 1
    5222:	03 c0       	rjmp	.+6      	; 0x522a <SPI_u8InitConfig+0x66>
		{
		case SPI_RISING_LEADING_FALLING_TRAILING: CLR_BIT(SPCR , SPCR_CPOL) ; break ;
    5224:	6b 98       	cbi	0x0d, 3	; 13
    5226:	01 c0       	rjmp	.+2      	; 0x522a <SPI_u8InitConfig+0x66>
		case SPI_FALLING_LEADING_RISING_TRAILING: SET_BIT(SPCR , SPCR_CPOL) ; break ;
    5228:	6b 9a       	sbi	0x0d, 3	; 13
		default:								  Local_u8ErrorState = E_NOK ; break ;
		}
		switch (spi->SPI_u8ClockRate)
    522a:	23 30       	cpi	r18, 0x03	; 3
    522c:	b9 f0       	breq	.+46     	; 0x525c <SPI_u8InitConfig+0x98>
    522e:	24 30       	cpi	r18, 0x04	; 4
    5230:	28 f4       	brcc	.+10     	; 0x523c <SPI_u8InitConfig+0x78>
    5232:	21 30       	cpi	r18, 0x01	; 1
    5234:	69 f0       	breq	.+26     	; 0x5250 <SPI_u8InitConfig+0x8c>
    5236:	22 30       	cpi	r18, 0x02	; 2
    5238:	68 f4       	brcc	.+26     	; 0x5254 <SPI_u8InitConfig+0x90>
    523a:	08 c0       	rjmp	.+16     	; 0x524c <SPI_u8InitConfig+0x88>
    523c:	25 30       	cpi	r18, 0x05	; 5
    523e:	a1 f0       	breq	.+40     	; 0x5268 <SPI_u8InitConfig+0xa4>
    5240:	25 30       	cpi	r18, 0x05	; 5
    5242:	78 f0       	brcs	.+30     	; 0x5262 <SPI_u8InitConfig+0x9e>
    5244:	26 30       	cpi	r18, 0x06	; 6
    5246:	91 f0       	breq	.+36     	; 0x526c <SPI_u8InitConfig+0xa8>
    5248:	81 e0       	ldi	r24, 0x01	; 1
    524a:	13 c0       	rjmp	.+38     	; 0x5272 <SPI_u8InitConfig+0xae>
		{
		case SPI_FREQ_DIVIDED_BY_2:
			CLR_BIT(SPCR , SPCR_SPR0) ;
    524c:	68 98       	cbi	0x0d, 0	; 13
    524e:	03 c0       	rjmp	.+6      	; 0x5256 <SPI_u8InitConfig+0x92>
			CLR_BIT(SPCR , SPCR_SPR1) ;
			SET_BIT(SPSR , SPSR_SPI2X) ;
			break ;
		case SPI_FREQ_DIVIDED_BY_4:
			CLR_BIT(SPCR , SPCR_SPR0) ;
    5250:	68 98       	cbi	0x0d, 0	; 13
    5252:	05 c0       	rjmp	.+10     	; 0x525e <SPI_u8InitConfig+0x9a>
			CLR_BIT(SPCR , SPCR_SPR1) ;
			CLR_BIT(SPSR , SPSR_SPI2X) ;
			break ;
		case SPI_FREQ_DIVIDED_BY_8:
			SET_BIT(SPCR , SPCR_SPR0) ;
    5254:	68 9a       	sbi	0x0d, 0	; 13
			CLR_BIT(SPCR , SPCR_SPR1) ;
    5256:	69 98       	cbi	0x0d, 1	; 13
			SET_BIT(SPSR , SPSR_SPI2X) ;
    5258:	70 9a       	sbi	0x0e, 0	; 14
    525a:	0b c0       	rjmp	.+22     	; 0x5272 <SPI_u8InitConfig+0xae>
			break ;
		case SPI_FREQ_DIVIDED_BY_16:
			SET_BIT(SPCR , SPCR_SPR0) ;
    525c:	68 9a       	sbi	0x0d, 0	; 13
			CLR_BIT(SPCR , SPCR_SPR1) ;
    525e:	69 98       	cbi	0x0d, 1	; 13
    5260:	07 c0       	rjmp	.+14     	; 0x5270 <SPI_u8InitConfig+0xac>
			CLR_BIT(SPSR , SPSR_SPI2X) ;
			break ;
		case SPI_FREQ_DIVIDED_BY_32:
			CLR_BIT(SPCR , SPCR_SPR0) ;
    5262:	68 98       	cbi	0x0d, 0	; 13
			SET_BIT(SPCR , SPCR_SPR1) ;
    5264:	69 9a       	sbi	0x0d, 1	; 13
    5266:	f8 cf       	rjmp	.-16     	; 0x5258 <SPI_u8InitConfig+0x94>
			SET_BIT(SPSR , SPSR_SPI2X) ;
			break ;
		case SPI_FREQ_DIVIDED_BY_64:
			CLR_BIT(SPCR , SPCR_SPR0) ;
    5268:	68 98       	cbi	0x0d, 0	; 13
    526a:	01 c0       	rjmp	.+2      	; 0x526e <SPI_u8InitConfig+0xaa>
			SET_BIT(SPCR , SPCR_SPR1) ;
			CLR_BIT(SPSR , SPSR_SPI2X) ;
			break ;
		case SPI_FREQ_DIVIDED_BY_128:
			SET_BIT(SPCR , SPCR_SPR0) ;
    526c:	68 9a       	sbi	0x0d, 0	; 13
			SET_BIT(SPCR , SPCR_SPR1) ;
    526e:	69 9a       	sbi	0x0d, 1	; 13
			CLR_BIT(SPSR , SPSR_SPI2X) ;
    5270:	70 98       	cbi	0x0e, 0	; 14
			break ;
		default:
			Local_u8ErrorState = E_NOK ;
			break ;
		}
		switch (spi->SPI_u8DataOrder)
    5272:	51 30       	cpi	r21, 0x01	; 1
    5274:	31 f0       	breq	.+12     	; 0x5282 <SPI_u8InitConfig+0xbe>
    5276:	52 30       	cpi	r21, 0x02	; 2
    5278:	11 f0       	breq	.+4      	; 0x527e <SPI_u8InitConfig+0xba>
    527a:	81 e0       	ldi	r24, 0x01	; 1
    527c:	03 c0       	rjmp	.+6      	; 0x5284 <SPI_u8InitConfig+0xc0>
		{
		case SPI_DATA_MSP_FIRST: CLR_BIT(SPCR , SPCR_DORD) ; break ;
    527e:	6d 98       	cbi	0x0d, 5	; 13
    5280:	01 c0       	rjmp	.+2      	; 0x5284 <SPI_u8InitConfig+0xc0>
		case SPI_DATA_LSB_FIRST: SET_BIT(SPCR , SPCR_DORD) ; break ;
    5282:	6d 9a       	sbi	0x0d, 5	; 13
		default:				 Local_u8ErrorState = E_NOK ; break ;
		}
		switch (spi->SPI_u8MasterSlaveSelect)
    5284:	61 30       	cpi	r22, 0x01	; 1
    5286:	21 f0       	breq	.+8      	; 0x5290 <SPI_u8InitConfig+0xcc>
    5288:	62 30       	cpi	r22, 0x02	; 2
    528a:	21 f0       	breq	.+8      	; 0x5294 <SPI_u8InitConfig+0xd0>
    528c:	81 e0       	ldi	r24, 0x01	; 1
    528e:	03 c0       	rjmp	.+6      	; 0x5296 <SPI_u8InitConfig+0xd2>
		{
		case SPI_MASTER: SET_BIT(SPCR , SPCR_MSTR) ; break ;
    5290:	6c 9a       	sbi	0x0d, 4	; 13
    5292:	01 c0       	rjmp	.+2      	; 0x5296 <SPI_u8InitConfig+0xd2>
		case SPI_SLAVE:  CLR_BIT(SPCR , SPCR_MSTR) ; break ;
    5294:	6c 98       	cbi	0x0d, 4	; 13
		default:		 Local_u8ErrorState = E_NOK ; break ;
		}
		switch (spi->SPI_u8InterruptEnable)
    5296:	71 30       	cpi	r23, 0x01	; 1
    5298:	21 f0       	breq	.+8      	; 0x52a2 <SPI_u8InitConfig+0xde>
    529a:	72 30       	cpi	r23, 0x02	; 2
    529c:	21 f0       	breq	.+8      	; 0x52a6 <SPI_u8InitConfig+0xe2>
    529e:	81 e0       	ldi	r24, 0x01	; 1
    52a0:	03 c0       	rjmp	.+6      	; 0x52a8 <SPI_u8InitConfig+0xe4>
		{
		case SPI_INTERRUPT_DISABLE: CLR_BIT(SPCR , SPCR_SPIE) ; break ;
    52a2:	6f 98       	cbi	0x0d, 7	; 13
    52a4:	01 c0       	rjmp	.+2      	; 0x52a8 <SPI_u8InitConfig+0xe4>
		case SPI_INTERRUPT_ENABLE:  SET_BIT(SPCR , SPCR_SPIE) ; break ;
    52a6:	6f 9a       	sbi	0x0d, 7	; 13
		default:		 			Local_u8ErrorState = E_NOK ; break ;
		}
		switch (spi->SPI_u8SPIEnable)
    52a8:	91 30       	cpi	r25, 0x01	; 1
    52aa:	21 f0       	breq	.+8      	; 0x52b4 <SPI_u8InitConfig+0xf0>
    52ac:	92 30       	cpi	r25, 0x02	; 2
    52ae:	21 f0       	breq	.+8      	; 0x52b8 <SPI_u8InitConfig+0xf4>
    52b0:	81 e0       	ldi	r24, 0x01	; 1
    52b2:	08 95       	ret
		{
		case SPI_DISABLE: CLR_BIT(SPCR , SPCR_SPE) ; break ;
    52b4:	6e 98       	cbi	0x0d, 6	; 13
    52b6:	08 95       	ret
		case SPI_ENABLE:  SET_BIT(SPCR , SPCR_SPE) ; break ;
    52b8:	6e 9a       	sbi	0x0d, 6	; 13
    52ba:	08 95       	ret
    52bc:	82 e0       	ldi	r24, 0x02	; 2
	else
	{
		Local_u8ErrorState = E_NOK_NULL_PTR ;
	}
	return Local_u8ErrorState ;
}
    52be:	08 95       	ret

000052c0 <SPI_u8Tranceive>:

//-------------------------------------------------------------------------------------------------------------------------------

u8 SPI_u8Tranceive (u8 Copy_u8TData , u8 * Copy_u8RData)
{
    52c0:	98 2f       	mov	r25, r24
    52c2:	fb 01       	movw	r30, r22
	u8 Local_u8ErrorState = E_OK ;
	u32 Local_uint32TimeoutCounter = 0 ;

	if (SPI_u8State == IDLE)
    52c4:	80 91 11 02 	lds	r24, 0x0211
    52c8:	88 23       	and	r24, r24
    52ca:	11 f0       	breq	.+4      	; 0x52d0 <SPI_u8Tranceive+0x10>
    52cc:	81 e0       	ldi	r24, 0x01	; 1
    52ce:	08 95       	ret
	{
		SPI_u8State = BUSY ;

		SPDR = Copy_u8TData ;
    52d0:	9f b9       	out	0x0f, r25	; 15
    52d2:	80 e0       	ldi	r24, 0x00	; 0
    52d4:	90 e0       	ldi	r25, 0x00	; 0
    52d6:	01 c0       	rjmp	.+2      	; 0x52da <SPI_u8Tranceive+0x1a>

		while (((GET_BIT(SPSR , SPSR_SPIF)) == 0) && (Local_uint32TimeoutCounter < SPI_uint32TIMEOUT))
		{
			Local_uint32TimeoutCounter++ ;
    52d8:	01 96       	adiw	r24, 0x01	; 1
	{
		SPI_u8State = BUSY ;

		SPDR = Copy_u8TData ;

		while (((GET_BIT(SPSR , SPSR_SPIF)) == 0) && (Local_uint32TimeoutCounter < SPI_uint32TIMEOUT))
    52da:	77 9b       	sbis	0x0e, 7	; 14
    52dc:	04 c0       	rjmp	.+8      	; 0x52e6 <SPI_u8Tranceive+0x26>
		{
			Local_uint32TimeoutCounter++ ;
		}
		if (Local_uint32TimeoutCounter == SPI_uint32TIMEOUT)
    52de:	80 51       	subi	r24, 0x10	; 16
    52e0:	97 42       	sbci	r25, 0x27	; 39
    52e2:	31 f4       	brne	.+12     	; 0x52f0 <SPI_u8Tranceive+0x30>
    52e4:	09 c0       	rjmp	.+18     	; 0x52f8 <SPI_u8Tranceive+0x38>
	{
		SPI_u8State = BUSY ;

		SPDR = Copy_u8TData ;

		while (((GET_BIT(SPSR , SPSR_SPIF)) == 0) && (Local_uint32TimeoutCounter < SPI_uint32TIMEOUT))
    52e6:	27 e2       	ldi	r18, 0x27	; 39
    52e8:	80 31       	cpi	r24, 0x10	; 16
    52ea:	92 07       	cpc	r25, r18
    52ec:	a9 f7       	brne	.-22     	; 0x52d8 <SPI_u8Tranceive+0x18>
    52ee:	04 c0       	rjmp	.+8      	; 0x52f8 <SPI_u8Tranceive+0x38>
		{
			Local_u8ErrorState = E_NOK ;
		}
		else
		{
			* Copy_u8RData = SPDR ;
    52f0:	8f b1       	in	r24, 0x0f	; 15
    52f2:	80 83       	st	Z, r24
    52f4:	80 e0       	ldi	r24, 0x00	; 0
    52f6:	01 c0       	rjmp	.+2      	; 0x52fa <SPI_u8Tranceive+0x3a>
    52f8:	81 e0       	ldi	r24, 0x01	; 1
		}
		SPI_u8State = IDLE ;
    52fa:	10 92 11 02 	sts	0x0211, r1
	{
		Local_u8ErrorState = E_NOK ;
	}

	return Local_u8ErrorState ;
}
    52fe:	08 95       	ret

00005300 <SPI_u8BufferTranceiverSynch>:

//-------------------------------------------------------------------------------------------------------------------------------

u8 SPI_u8BufferTranceiverSynch (u8 * Copy_u8TData , u8 * Copy_u8RData , u8 Copy_u8BufferSize)
{
    5300:	df 92       	push	r13
    5302:	ef 92       	push	r14
    5304:	ff 92       	push	r15
    5306:	0f 93       	push	r16
    5308:	1f 93       	push	r17
    530a:	cf 93       	push	r28
    530c:	df 93       	push	r29
    530e:	7b 01       	movw	r14, r22
    5310:	d4 2e       	mov	r13, r20
	u8 Local_u8ErrorState = E_OK ;
	u8 Local_u8Counter = 0 ;
	if ((Copy_u8TData != NULL) && (Copy_u8RData != NULL))
    5312:	00 97       	sbiw	r24, 0x00	; 0
    5314:	a1 f0       	breq	.+40     	; 0x533e <SPI_u8BufferTranceiverSynch+0x3e>
    5316:	61 15       	cp	r22, r1
    5318:	71 05       	cpc	r23, r1
    531a:	89 f0       	breq	.+34     	; 0x533e <SPI_u8BufferTranceiverSynch+0x3e>
    531c:	8c 01       	movw	r16, r24
    531e:	c0 e0       	ldi	r28, 0x00	; 0
    5320:	d0 e0       	ldi	r29, 0x00	; 0
    5322:	09 c0       	rjmp	.+18     	; 0x5336 <SPI_u8BufferTranceiverSynch+0x36>
	{
		while (Local_u8Counter < Copy_u8BufferSize)
		{
			SPI_u8Tranceive(Copy_u8TData[Local_u8Counter] , &Copy_u8RData[Local_u8Counter]) ;
    5324:	b7 01       	movw	r22, r14
    5326:	6c 0f       	add	r22, r28
    5328:	7d 1f       	adc	r23, r29
    532a:	f8 01       	movw	r30, r16
    532c:	81 91       	ld	r24, Z+
    532e:	8f 01       	movw	r16, r30
    5330:	0e 94 60 29 	call	0x52c0	; 0x52c0 <SPI_u8Tranceive>
    5334:	21 96       	adiw	r28, 0x01	; 1
{
	u8 Local_u8ErrorState = E_OK ;
	u8 Local_u8Counter = 0 ;
	if ((Copy_u8TData != NULL) && (Copy_u8RData != NULL))
	{
		while (Local_u8Counter < Copy_u8BufferSize)
    5336:	cd 15       	cp	r28, r13
    5338:	a8 f3       	brcs	.-22     	; 0x5324 <SPI_u8BufferTranceiverSynch+0x24>
    533a:	80 e0       	ldi	r24, 0x00	; 0
    533c:	01 c0       	rjmp	.+2      	; 0x5340 <SPI_u8BufferTranceiverSynch+0x40>
    533e:	82 e0       	ldi	r24, 0x02	; 2
	else
	{
		Local_u8ErrorState = E_NOK_NULL_PTR ;
	}
	return Local_u8ErrorState ;
}
    5340:	df 91       	pop	r29
    5342:	cf 91       	pop	r28
    5344:	1f 91       	pop	r17
    5346:	0f 91       	pop	r16
    5348:	ff 90       	pop	r15
    534a:	ef 90       	pop	r14
    534c:	df 90       	pop	r13
    534e:	08 95       	ret

00005350 <SPI_u8BufferTranceiverAsynch>:

//-------------------------------------------------------------------------------------------------------------------------------

u8 SPI_u8BufferTranceiverAsynch (SPI_BUFFER * spi_buffer)
{
    5350:	fc 01       	movw	r30, r24
	u8 Local_u8ErrorState = E_OK ;

	if (SPI_u8State == IDLE)
    5352:	80 91 11 02 	lds	r24, 0x0211
    5356:	88 23       	and	r24, r24
    5358:	11 f0       	breq	.+4      	; 0x535e <SPI_u8BufferTranceiverAsynch+0xe>
    535a:	81 e0       	ldi	r24, 0x01	; 1
    535c:	08 95       	ret
	{
		if ((spi_buffer != NULL) && (spi_buffer->Copy_u8TData != NULL) && (spi_buffer->Copy_u8RData != NULL) && (spi_buffer->NotificationFuncn != NULL))
    535e:	30 97       	sbiw	r30, 0x00	; 0
    5360:	39 f1       	breq	.+78     	; 0x53b0 <SPI_u8BufferTranceiverAsynch+0x60>
    5362:	a0 81       	ld	r26, Z
    5364:	b1 81       	ldd	r27, Z+1	; 0x01
    5366:	10 97       	sbiw	r26, 0x00	; 0
    5368:	19 f1       	breq	.+70     	; 0x53b0 <SPI_u8BufferTranceiverAsynch+0x60>
    536a:	42 81       	ldd	r20, Z+2	; 0x02
    536c:	53 81       	ldd	r21, Z+3	; 0x03
    536e:	41 15       	cp	r20, r1
    5370:	51 05       	cpc	r21, r1
    5372:	f1 f0       	breq	.+60     	; 0x53b0 <SPI_u8BufferTranceiverAsynch+0x60>
    5374:	25 81       	ldd	r18, Z+5	; 0x05
    5376:	36 81       	ldd	r19, Z+6	; 0x06
    5378:	21 15       	cp	r18, r1
    537a:	31 05       	cpc	r19, r1
    537c:	c9 f0       	breq	.+50     	; 0x53b0 <SPI_u8BufferTranceiverAsynch+0x60>
		{
			/*SPI is now Busy*/
			SPI_u8State = BUSY ;
    537e:	81 e0       	ldi	r24, 0x01	; 1
    5380:	80 93 11 02 	sts	0x0211, r24

			/*Assign the SPI data globally*/
			SPI_pu8TData = spi_buffer->Copy_u8TData ;
    5384:	b0 93 15 02 	sts	0x0215, r27
    5388:	a0 93 14 02 	sts	0x0214, r26
			SPI_pu8RData = spi_buffer->Copy_u8RData ;
    538c:	50 93 10 02 	sts	0x0210, r21
    5390:	40 93 0f 02 	sts	0x020F, r20
			SPI_u8BufferSize = spi_buffer->Copy_u8BufferSize ;
    5394:	84 81       	ldd	r24, Z+4	; 0x04
    5396:	80 93 16 02 	sts	0x0216, r24
			SPI_pvNotificationFunc = spi_buffer->NotificationFuncn ;
    539a:	30 93 13 02 	sts	0x0213, r19
    539e:	20 93 12 02 	sts	0x0212, r18

			/*Set Index to first element*/
			SPI_u8Index = 0 ;
    53a2:	10 92 17 02 	sts	0x0217, r1

			/*Transmit first Data */
			SPDR = SPI_pu8TData[SPI_u8Index] ;
    53a6:	8c 91       	ld	r24, X
    53a8:	8f b9       	out	0x0f, r24	; 15

			/*SPI Interrupt Enable*/
			SET_BIT(SPCR , SPCR_SPIE) ;
    53aa:	6f 9a       	sbi	0x0d, 7	; 13
    53ac:	80 e0       	ldi	r24, 0x00	; 0
    53ae:	08 95       	ret
{
	u8 Local_u8ErrorState = E_OK ;

	if (SPI_u8State == IDLE)
	{
		if ((spi_buffer != NULL) && (spi_buffer->Copy_u8TData != NULL) && (spi_buffer->Copy_u8RData != NULL) && (spi_buffer->NotificationFuncn != NULL))
    53b0:	82 e0       	ldi	r24, 0x02	; 2
	else
	{
		Local_u8ErrorState = E_NOK ;
	}
	return Local_u8ErrorState ;
}
    53b2:	08 95       	ret

000053b4 <__vector_12>:

//-------------------------------------------------------------------------------------------------------------------------------

void __vector_12 (void)		__attribute__ ((signal)) ;
void __vector_12 (void)
{
    53b4:	1f 92       	push	r1
    53b6:	0f 92       	push	r0
    53b8:	0f b6       	in	r0, 0x3f	; 63
    53ba:	0f 92       	push	r0
    53bc:	11 24       	eor	r1, r1
    53be:	2f 93       	push	r18
    53c0:	3f 93       	push	r19
    53c2:	4f 93       	push	r20
    53c4:	5f 93       	push	r21
    53c6:	6f 93       	push	r22
    53c8:	7f 93       	push	r23
    53ca:	8f 93       	push	r24
    53cc:	9f 93       	push	r25
    53ce:	af 93       	push	r26
    53d0:	bf 93       	push	r27
    53d2:	ef 93       	push	r30
    53d4:	ff 93       	push	r31
	/*Receive Data*/
	SPI_pu8RData[SPI_u8Index] = SPDR ;
    53d6:	90 91 17 02 	lds	r25, 0x0217
    53da:	8f b1       	in	r24, 0x0f	; 15
    53dc:	e0 91 0f 02 	lds	r30, 0x020F
    53e0:	f0 91 10 02 	lds	r31, 0x0210
    53e4:	e9 0f       	add	r30, r25
    53e6:	f1 1d       	adc	r31, r1
    53e8:	80 83       	st	Z, r24

	/*Increment Data index of the buffer*/
	SPI_u8Index++ ;
    53ea:	9f 5f       	subi	r25, 0xFF	; 255
    53ec:	90 93 17 02 	sts	0x0217, r25

	if (SPI_u8Index == SPI_u8BufferSize)
    53f0:	80 91 16 02 	lds	r24, 0x0216
    53f4:	98 17       	cp	r25, r24
    53f6:	49 f4       	brne	.+18     	; 0x540a <__vector_12+0x56>
	{
		/*Buffer Complete*/

		/*SPI is now IDLE*/
		SPI_u8State = IDLE ;
    53f8:	10 92 11 02 	sts	0x0211, r1

		/*SPI Interrupt Disable*/
		CLR_BIT(SPCR , SPCR_SPIE) ;
    53fc:	6f 98       	cbi	0x0d, 7	; 13

		/*Call Notification Function*/
		SPI_pvNotificationFunc() ;
    53fe:	e0 91 12 02 	lds	r30, 0x0212
    5402:	f0 91 13 02 	lds	r31, 0x0213
    5406:	09 95       	icall
    5408:	08 c0       	rjmp	.+16     	; 0x541a <__vector_12+0x66>
	else
	{
		/*Buffer not Complete*/

		/*Transmit next Data*/
		SPDR = SPI_pu8TData[SPI_u8Index] ;
    540a:	e0 91 14 02 	lds	r30, 0x0214
    540e:	f0 91 15 02 	lds	r31, 0x0215
    5412:	e9 0f       	add	r30, r25
    5414:	f1 1d       	adc	r31, r1
    5416:	80 81       	ld	r24, Z
    5418:	8f b9       	out	0x0f, r24	; 15
	}
}
    541a:	ff 91       	pop	r31
    541c:	ef 91       	pop	r30
    541e:	bf 91       	pop	r27
    5420:	af 91       	pop	r26
    5422:	9f 91       	pop	r25
    5424:	8f 91       	pop	r24
    5426:	7f 91       	pop	r23
    5428:	6f 91       	pop	r22
    542a:	5f 91       	pop	r21
    542c:	4f 91       	pop	r20
    542e:	3f 91       	pop	r19
    5430:	2f 91       	pop	r18
    5432:	0f 90       	pop	r0
    5434:	0f be       	out	0x3f, r0	; 63
    5436:	0f 90       	pop	r0
    5438:	1f 90       	pop	r1
    543a:	18 95       	reti

0000543c <GIE_voidEnable>:


/**************FUNCTIONS DEFINITIONS*****************/
void GIE_voidEnable(void)
{
	SET_BIT(SREG,SREG_I_BIT);
    543c:	8f b7       	in	r24, 0x3f	; 63
    543e:	80 68       	ori	r24, 0x80	; 128
    5440:	8f bf       	out	0x3f, r24	; 63
}
    5442:	08 95       	ret

00005444 <GIE_voidDisable>:

void GIE_voidDisable(void)
{
	CLR_BIT(SREG,SREG_I_BIT);
    5444:	8f b7       	in	r24, 0x3f	; 63
    5446:	8f 77       	andi	r24, 0x7F	; 127
    5448:	8f bf       	out	0x3f, r24	; 63
}
    544a:	08 95       	ret

0000544c <EXTI_voidInit>:

/*********************FUNCTIONS DEFINITIONS******************************/
void EXTI_voidInit (void)
{
	#if	EXTI_INT0_ENALBE == ENABLE
		SET_BIT(GICR, GICR_INT0);
    544c:	8b b7       	in	r24, 0x3b	; 59
    544e:	80 64       	ori	r24, 0x40	; 64
    5450:	8b bf       	out	0x3b, r24	; 59
			SET_BIT(MCUCR, MCUCR_ISC00);
		#elif EXTI_INT0_SENSE_CONTROL == FALLING_EDGE
			SET_BIT(MCUCR, MCUCR_ISC01);
			CLR_BIT(MCUCR, MCUCR_ISC00);
		#elif EXTI_INT0_SENSE_CONTROL == RISING_EDGE
			SET_BIT(MCUCR, MCUCR_ISC01);
    5452:	85 b7       	in	r24, 0x35	; 53
    5454:	82 60       	ori	r24, 0x02	; 2
    5456:	85 bf       	out	0x35, r24	; 53
			SET_BIT(MCUCR, MCUCR_ISC00);
    5458:	85 b7       	in	r24, 0x35	; 53
    545a:	81 60       	ori	r24, 0x01	; 1
    545c:	85 bf       	out	0x35, r24	; 53
		#error "EXTI_INT0_ENALBE Error Configuration"
	#endif


	#if	EXTI_INT1_ENALBE == ENALBE
		SET_BIT(GICR, GICR_INT1);
    545e:	8b b7       	in	r24, 0x3b	; 59
    5460:	80 68       	ori	r24, 0x80	; 128
    5462:	8b bf       	out	0x3b, r24	; 59
			SET_BIT(MCUCR, MCUCR_ISC10);
		#elif EXTI_INT1_SENSE_CONTROL == FALLING_EDGE
			SET_BIT(MCUCR, MCUCR_ISC11);
			CLR_BIT(MCUCR, MCUCR_ISC10);
		#elif EXTI_INT1_SENSE_CONTROL == RISING_EDGE
			SET_BIT(MCUCR, MCUCR_ISC11);
    5464:	85 b7       	in	r24, 0x35	; 53
    5466:	88 60       	ori	r24, 0x08	; 8
    5468:	85 bf       	out	0x35, r24	; 53
			SET_BIT(MCUCR, MCUCR_ISC10);
    546a:	85 b7       	in	r24, 0x35	; 53
    546c:	84 60       	ori	r24, 0x04	; 4
    546e:	85 bf       	out	0x35, r24	; 53
			SET_BIT(MCUCSR, MCUCSR_ISC2);
		#else
			#error "EXTI_INT2_CONTROL Error Configuration"
		#endif
	#elif EXTI_INT2_ENALBE == DISABLE
		CLR_BIT(GICR, GICR_INT2);
    5470:	8b b7       	in	r24, 0x3b	; 59
    5472:	8f 7d       	andi	r24, 0xDF	; 223
    5474:	8b bf       	out	0x3b, r24	; 59
	#else
		#error "EXTI_INT2_ENALBE Error Configuration"
	#endif
}
    5476:	08 95       	ret

00005478 <EXTI_u8SetInt0SenseControl>:


u8 EXTI_u8SetInt0SenseControl (u8 Copy_u8SenseControl)
{
	switch (Copy_u8SenseControl)
    5478:	81 30       	cpi	r24, 0x01	; 1
    547a:	a1 f0       	breq	.+40     	; 0x54a4 <EXTI_u8SetInt0SenseControl+0x2c>
    547c:	81 30       	cpi	r24, 0x01	; 1
    547e:	60 f0       	brcs	.+24     	; 0x5498 <EXTI_u8SetInt0SenseControl+0x20>
    5480:	82 30       	cpi	r24, 0x02	; 2
    5482:	21 f0       	breq	.+8      	; 0x548c <EXTI_u8SetInt0SenseControl+0x14>
    5484:	83 30       	cpi	r24, 0x03	; 3
    5486:	29 f0       	breq	.+10     	; 0x5492 <EXTI_u8SetInt0SenseControl+0x1a>
    5488:	81 e0       	ldi	r24, 0x01	; 1
    548a:	08 95       	ret
	{
		case LOW_LEVEL:
		{
			CLR_BIT(MCUCR, MCUCR_ISC01);
    548c:	85 b7       	in	r24, 0x35	; 53
    548e:	8d 7f       	andi	r24, 0xFD	; 253
    5490:	05 c0       	rjmp	.+10     	; 0x549c <EXTI_u8SetInt0SenseControl+0x24>
			CLR_BIT(MCUCR, MCUCR_ISC00);
			break;
		}
		case ON_CHANGE:
		{
			CLR_BIT(MCUCR, MCUCR_ISC01);
    5492:	85 b7       	in	r24, 0x35	; 53
    5494:	8d 7f       	andi	r24, 0xFD	; 253
    5496:	08 c0       	rjmp	.+16     	; 0x54a8 <EXTI_u8SetInt0SenseControl+0x30>
			SET_BIT(MCUCR, MCUCR_ISC00);
			break;
		}
		case FALLING_EDGE:
		{
			SET_BIT(MCUCR, MCUCR_ISC01);
    5498:	85 b7       	in	r24, 0x35	; 53
    549a:	82 60       	ori	r24, 0x02	; 2
    549c:	85 bf       	out	0x35, r24	; 53
			CLR_BIT(MCUCR, MCUCR_ISC00);
    549e:	85 b7       	in	r24, 0x35	; 53
    54a0:	8e 7f       	andi	r24, 0xFE	; 254
    54a2:	05 c0       	rjmp	.+10     	; 0x54ae <EXTI_u8SetInt0SenseControl+0x36>
			break;
		}
		case RISING_EDGE:
		{
			SET_BIT(MCUCR, MCUCR_ISC01);
    54a4:	85 b7       	in	r24, 0x35	; 53
    54a6:	82 60       	ori	r24, 0x02	; 2
    54a8:	85 bf       	out	0x35, r24	; 53
			SET_BIT(MCUCR, MCUCR_ISC00);
    54aa:	85 b7       	in	r24, 0x35	; 53
    54ac:	81 60       	ori	r24, 0x01	; 1
    54ae:	85 bf       	out	0x35, r24	; 53
		default:
		{
			return E_NOK;
		}
	}
	SET_BIT(GICR, GICR_INT0);
    54b0:	8b b7       	in	r24, 0x3b	; 59
    54b2:	80 64       	ori	r24, 0x40	; 64
    54b4:	8b bf       	out	0x3b, r24	; 59
    54b6:	80 e0       	ldi	r24, 0x00	; 0
	return E_OK;
}
    54b8:	08 95       	ret

000054ba <EXTI_u8SetInt1SenseControl>:

u8 EXTI_u8SetInt1SenseControl(u8 Copy_u8SenseControl)
{
	switch (Copy_u8SenseControl)
    54ba:	81 30       	cpi	r24, 0x01	; 1
    54bc:	a1 f0       	breq	.+40     	; 0x54e6 <EXTI_u8SetInt1SenseControl+0x2c>
    54be:	81 30       	cpi	r24, 0x01	; 1
    54c0:	60 f0       	brcs	.+24     	; 0x54da <EXTI_u8SetInt1SenseControl+0x20>
    54c2:	82 30       	cpi	r24, 0x02	; 2
    54c4:	21 f0       	breq	.+8      	; 0x54ce <EXTI_u8SetInt1SenseControl+0x14>
    54c6:	83 30       	cpi	r24, 0x03	; 3
    54c8:	29 f0       	breq	.+10     	; 0x54d4 <EXTI_u8SetInt1SenseControl+0x1a>
    54ca:	81 e0       	ldi	r24, 0x01	; 1
    54cc:	08 95       	ret
	{
	case LOW_LEVEL:
	{
		CLR_BIT(MCUCR, MCUCR_ISC11);
    54ce:	85 b7       	in	r24, 0x35	; 53
    54d0:	87 7f       	andi	r24, 0xF7	; 247
    54d2:	05 c0       	rjmp	.+10     	; 0x54de <EXTI_u8SetInt1SenseControl+0x24>
		CLR_BIT(MCUCR, MCUCR_ISC10);
		break;
	}
	case ON_CHANGE:
	{
		CLR_BIT(MCUCR, MCUCR_ISC11);
    54d4:	85 b7       	in	r24, 0x35	; 53
    54d6:	87 7f       	andi	r24, 0xF7	; 247
    54d8:	08 c0       	rjmp	.+16     	; 0x54ea <EXTI_u8SetInt1SenseControl+0x30>
		SET_BIT(MCUCR, MCUCR_ISC10);
		break;
	}
	case FALLING_EDGE:
	{
		SET_BIT(MCUCR, MCUCR_ISC11);
    54da:	85 b7       	in	r24, 0x35	; 53
    54dc:	88 60       	ori	r24, 0x08	; 8
    54de:	85 bf       	out	0x35, r24	; 53
		CLR_BIT(MCUCR, MCUCR_ISC10);
    54e0:	85 b7       	in	r24, 0x35	; 53
    54e2:	8b 7f       	andi	r24, 0xFB	; 251
    54e4:	05 c0       	rjmp	.+10     	; 0x54f0 <EXTI_u8SetInt1SenseControl+0x36>
		break;
	}
	case RISING_EDGE:
	{
		SET_BIT(MCUCR, MCUCR_ISC11);
    54e6:	85 b7       	in	r24, 0x35	; 53
    54e8:	88 60       	ori	r24, 0x08	; 8
    54ea:	85 bf       	out	0x35, r24	; 53
		SET_BIT(MCUCR, MCUCR_ISC10);
    54ec:	85 b7       	in	r24, 0x35	; 53
    54ee:	84 60       	ori	r24, 0x04	; 4
    54f0:	85 bf       	out	0x35, r24	; 53
	default:
	{
		return E_NOK;
	}
	}
	SET_BIT(GICR, GICR_INT1);
    54f2:	8b b7       	in	r24, 0x3b	; 59
    54f4:	80 68       	ori	r24, 0x80	; 128
    54f6:	8b bf       	out	0x3b, r24	; 59
    54f8:	80 e0       	ldi	r24, 0x00	; 0
	return E_OK;
}
    54fa:	08 95       	ret

000054fc <EXTI_u8SetInt2SenseControl>:

u8 EXTI_u8SetInt2SenseControl(u8 Copy_u8SenseControl)
{
	switch (Copy_u8SenseControl)
    54fc:	88 23       	and	r24, r24
    54fe:	21 f0       	breq	.+8      	; 0x5508 <EXTI_u8SetInt2SenseControl+0xc>
    5500:	81 30       	cpi	r24, 0x01	; 1
    5502:	29 f0       	breq	.+10     	; 0x550e <EXTI_u8SetInt2SenseControl+0x12>
    5504:	81 e0       	ldi	r24, 0x01	; 1
    5506:	08 95       	ret
	{
	case FALLING_EDGE:
	{
		CLR_BIT(MCUCSR, MCUCSR_ISC2);
    5508:	84 b7       	in	r24, 0x34	; 52
    550a:	8f 7b       	andi	r24, 0xBF	; 191
    550c:	02 c0       	rjmp	.+4      	; 0x5512 <EXTI_u8SetInt2SenseControl+0x16>
		break;
	}
	case RISING_EDGE:
	{
		SET_BIT(MCUCSR, MCUCSR_ISC2);
    550e:	84 b7       	in	r24, 0x34	; 52
    5510:	80 64       	ori	r24, 0x40	; 64
    5512:	84 bf       	out	0x34, r24	; 52
	default:
	{
		return E_NOK;
	}
	}
	SET_BIT(GICR, GICR_INT2);
    5514:	8b b7       	in	r24, 0x3b	; 59
    5516:	80 62       	ori	r24, 0x20	; 32
    5518:	8b bf       	out	0x3b, r24	; 59
    551a:	80 e0       	ldi	r24, 0x00	; 0
	return E_OK;
}
    551c:	08 95       	ret

0000551e <EXTI_u8Int0SetCallBack>:


u8 EXTI_u8Int0SetCallBack (void (*Copy_pvNotificationFunction) (void))
{
	if (Copy_pvNotificationFunction != NULL)
    551e:	00 97       	sbiw	r24, 0x00	; 0
    5520:	11 f4       	brne	.+4      	; 0x5526 <EXTI_u8Int0SetCallBack+0x8>
    5522:	81 e0       	ldi	r24, 0x01	; 1
    5524:	08 95       	ret
	{
		Global_pvInt0NotifcationFunction = Copy_pvNotificationFunction;
    5526:	90 93 1d 02 	sts	0x021D, r25
    552a:	80 93 1c 02 	sts	0x021C, r24
    552e:	80 e0       	ldi	r24, 0x00	; 0
	}
	else
	{
		return E_NOK;
	}
}
    5530:	08 95       	ret

00005532 <__vector_1>:

/*ISR for INT0*/
void __vector_1 (void) __attribute__((signal));
void __vector_1 (void)
{
    5532:	1f 92       	push	r1
    5534:	0f 92       	push	r0
    5536:	0f b6       	in	r0, 0x3f	; 63
    5538:	0f 92       	push	r0
    553a:	11 24       	eor	r1, r1
    553c:	2f 93       	push	r18
    553e:	3f 93       	push	r19
    5540:	4f 93       	push	r20
    5542:	5f 93       	push	r21
    5544:	6f 93       	push	r22
    5546:	7f 93       	push	r23
    5548:	8f 93       	push	r24
    554a:	9f 93       	push	r25
    554c:	af 93       	push	r26
    554e:	bf 93       	push	r27
    5550:	ef 93       	push	r30
    5552:	ff 93       	push	r31
	if (Global_pvInt0NotifcationFunction != NULL)
    5554:	e0 91 1c 02 	lds	r30, 0x021C
    5558:	f0 91 1d 02 	lds	r31, 0x021D
    555c:	30 97       	sbiw	r30, 0x00	; 0
    555e:	09 f0       	breq	.+2      	; 0x5562 <__vector_1+0x30>
	{
		Global_pvInt0NotifcationFunction();
    5560:	09 95       	icall
	}
	else
	{
		/*Do nothing*/
	}
}
    5562:	ff 91       	pop	r31
    5564:	ef 91       	pop	r30
    5566:	bf 91       	pop	r27
    5568:	af 91       	pop	r26
    556a:	9f 91       	pop	r25
    556c:	8f 91       	pop	r24
    556e:	7f 91       	pop	r23
    5570:	6f 91       	pop	r22
    5572:	5f 91       	pop	r21
    5574:	4f 91       	pop	r20
    5576:	3f 91       	pop	r19
    5578:	2f 91       	pop	r18
    557a:	0f 90       	pop	r0
    557c:	0f be       	out	0x3f, r0	; 63
    557e:	0f 90       	pop	r0
    5580:	1f 90       	pop	r1
    5582:	18 95       	reti

00005584 <EXTI_u8Int1SetCallBack>:

u8 EXTI_u8Int1SetCallBack (void (*Copy_pvNotificationFunction) (void))
{
	if (Copy_pvNotificationFunction != NULL)
    5584:	00 97       	sbiw	r24, 0x00	; 0
    5586:	11 f4       	brne	.+4      	; 0x558c <EXTI_u8Int1SetCallBack+0x8>
    5588:	81 e0       	ldi	r24, 0x01	; 1
    558a:	08 95       	ret
	{
		Global_pvInt1NotifcationFunction = Copy_pvNotificationFunction;
    558c:	90 93 1b 02 	sts	0x021B, r25
    5590:	80 93 1a 02 	sts	0x021A, r24
    5594:	80 e0       	ldi	r24, 0x00	; 0
	}
	else
	{
		return E_NOK;
	}
}
    5596:	08 95       	ret

00005598 <__vector_2>:

/*ISR for INT1*/
void __vector_2 (void) __attribute__((signal));
void __vector_2 (void)
{
    5598:	1f 92       	push	r1
    559a:	0f 92       	push	r0
    559c:	0f b6       	in	r0, 0x3f	; 63
    559e:	0f 92       	push	r0
    55a0:	11 24       	eor	r1, r1
    55a2:	2f 93       	push	r18
    55a4:	3f 93       	push	r19
    55a6:	4f 93       	push	r20
    55a8:	5f 93       	push	r21
    55aa:	6f 93       	push	r22
    55ac:	7f 93       	push	r23
    55ae:	8f 93       	push	r24
    55b0:	9f 93       	push	r25
    55b2:	af 93       	push	r26
    55b4:	bf 93       	push	r27
    55b6:	ef 93       	push	r30
    55b8:	ff 93       	push	r31
	if (Global_pvInt1NotifcationFunction != NULL)
    55ba:	e0 91 1a 02 	lds	r30, 0x021A
    55be:	f0 91 1b 02 	lds	r31, 0x021B
    55c2:	30 97       	sbiw	r30, 0x00	; 0
    55c4:	09 f0       	breq	.+2      	; 0x55c8 <__vector_2+0x30>
	{
		Global_pvInt1NotifcationFunction();
    55c6:	09 95       	icall
	}
	else
	{
		/*Do nothing*/
	}
}
    55c8:	ff 91       	pop	r31
    55ca:	ef 91       	pop	r30
    55cc:	bf 91       	pop	r27
    55ce:	af 91       	pop	r26
    55d0:	9f 91       	pop	r25
    55d2:	8f 91       	pop	r24
    55d4:	7f 91       	pop	r23
    55d6:	6f 91       	pop	r22
    55d8:	5f 91       	pop	r21
    55da:	4f 91       	pop	r20
    55dc:	3f 91       	pop	r19
    55de:	2f 91       	pop	r18
    55e0:	0f 90       	pop	r0
    55e2:	0f be       	out	0x3f, r0	; 63
    55e4:	0f 90       	pop	r0
    55e6:	1f 90       	pop	r1
    55e8:	18 95       	reti

000055ea <EXTI_u8Int2SetCallBack>:

u8 EXTI_u8Int2SetCallBack (void (*Copy_pvNotificationFunction) (void))
{
	if (Copy_pvNotificationFunction != NULL)
    55ea:	00 97       	sbiw	r24, 0x00	; 0
    55ec:	11 f4       	brne	.+4      	; 0x55f2 <EXTI_u8Int2SetCallBack+0x8>
    55ee:	81 e0       	ldi	r24, 0x01	; 1
    55f0:	08 95       	ret
	{
		Global_pvInt2NotifcationFunction = Copy_pvNotificationFunction;
    55f2:	90 93 19 02 	sts	0x0219, r25
    55f6:	80 93 18 02 	sts	0x0218, r24
    55fa:	80 e0       	ldi	r24, 0x00	; 0
	}
	else
	{
		return E_NOK;
	}
}
    55fc:	08 95       	ret

000055fe <__vector_3>:

/*ISR for INT2*/
void __vector_3 (void) __attribute__((signal));
void __vector_3 (void)
{
    55fe:	1f 92       	push	r1
    5600:	0f 92       	push	r0
    5602:	0f b6       	in	r0, 0x3f	; 63
    5604:	0f 92       	push	r0
    5606:	11 24       	eor	r1, r1
    5608:	2f 93       	push	r18
    560a:	3f 93       	push	r19
    560c:	4f 93       	push	r20
    560e:	5f 93       	push	r21
    5610:	6f 93       	push	r22
    5612:	7f 93       	push	r23
    5614:	8f 93       	push	r24
    5616:	9f 93       	push	r25
    5618:	af 93       	push	r26
    561a:	bf 93       	push	r27
    561c:	ef 93       	push	r30
    561e:	ff 93       	push	r31
	if (Global_pvInt2NotifcationFunction != NULL)
    5620:	e0 91 18 02 	lds	r30, 0x0218
    5624:	f0 91 19 02 	lds	r31, 0x0219
    5628:	30 97       	sbiw	r30, 0x00	; 0
    562a:	09 f0       	breq	.+2      	; 0x562e <__vector_3+0x30>
	{
		Global_pvInt2NotifcationFunction();
    562c:	09 95       	icall
	}
	else
	{
		/*Do nothing*/
	}
}
    562e:	ff 91       	pop	r31
    5630:	ef 91       	pop	r30
    5632:	bf 91       	pop	r27
    5634:	af 91       	pop	r26
    5636:	9f 91       	pop	r25
    5638:	8f 91       	pop	r24
    563a:	7f 91       	pop	r23
    563c:	6f 91       	pop	r22
    563e:	5f 91       	pop	r21
    5640:	4f 91       	pop	r20
    5642:	3f 91       	pop	r19
    5644:	2f 91       	pop	r18
    5646:	0f 90       	pop	r0
    5648:	0f be       	out	0x3f, r0	; 63
    564a:	0f 90       	pop	r0
    564c:	1f 90       	pop	r1
    564e:	18 95       	reti

00005650 <DIO_u8SetPortValue>:

/***************Functions Definitions********************/
ReturnType_State_t DIO_u8SetPortValue(u8 copy_u8Port,u8 copy_u8Value)
{
	u8 Local_u8State = E_OK;
	switch(copy_u8Port)
    5650:	81 30       	cpi	r24, 0x01	; 1
    5652:	51 f0       	breq	.+20     	; 0x5668 <DIO_u8SetPortValue+0x18>
    5654:	81 30       	cpi	r24, 0x01	; 1
    5656:	30 f0       	brcs	.+12     	; 0x5664 <DIO_u8SetPortValue+0x14>
    5658:	82 30       	cpi	r24, 0x02	; 2
    565a:	41 f0       	breq	.+16     	; 0x566c <DIO_u8SetPortValue+0x1c>
    565c:	83 30       	cpi	r24, 0x03	; 3
    565e:	49 f0       	breq	.+18     	; 0x5672 <DIO_u8SetPortValue+0x22>
    5660:	81 e0       	ldi	r24, 0x01	; 1
    5662:	08 95       	ret
	{
	case DIO_PORTA:
		PORTA = copy_u8Value;
    5664:	6b bb       	out	0x1b, r22	; 27
    5666:	03 c0       	rjmp	.+6      	; 0x566e <DIO_u8SetPortValue+0x1e>
		break;

	case DIO_PORTB:
		PORTB = copy_u8Value;
    5668:	68 bb       	out	0x18, r22	; 24
    566a:	01 c0       	rjmp	.+2      	; 0x566e <DIO_u8SetPortValue+0x1e>
		break;

	case DIO_PORTC:
		PORTC = copy_u8Value;
    566c:	65 bb       	out	0x15, r22	; 21
    566e:	80 e0       	ldi	r24, 0x00	; 0
    5670:	08 95       	ret
		break;

	case DIO_PORTD:
		PORTD = copy_u8Value;
    5672:	62 bb       	out	0x12, r22	; 18
    5674:	80 e0       	ldi	r24, 0x00	; 0
	default:
		Local_u8State = E_NOK;
		break;
	}
	return Local_u8State;
}
    5676:	08 95       	ret

00005678 <DIO_u8SetPortDirection>:


ReturnType_State_t DIO_u8SetPortDirection(u8 copy_u8Port,u8 copy_u8Direction)
{
	u8 Local_u8State = E_OK;
	switch(copy_u8Port)
    5678:	81 30       	cpi	r24, 0x01	; 1
    567a:	51 f0       	breq	.+20     	; 0x5690 <DIO_u8SetPortDirection+0x18>
    567c:	81 30       	cpi	r24, 0x01	; 1
    567e:	30 f0       	brcs	.+12     	; 0x568c <DIO_u8SetPortDirection+0x14>
    5680:	82 30       	cpi	r24, 0x02	; 2
    5682:	41 f0       	breq	.+16     	; 0x5694 <DIO_u8SetPortDirection+0x1c>
    5684:	83 30       	cpi	r24, 0x03	; 3
    5686:	49 f0       	breq	.+18     	; 0x569a <DIO_u8SetPortDirection+0x22>
    5688:	81 e0       	ldi	r24, 0x01	; 1
    568a:	08 95       	ret
	{
	case DIO_PORTA:
		DDRA = copy_u8Direction;
    568c:	6a bb       	out	0x1a, r22	; 26
    568e:	03 c0       	rjmp	.+6      	; 0x5696 <DIO_u8SetPortDirection+0x1e>
		break;

	case DIO_PORTB:
		DDRB = copy_u8Direction;
    5690:	67 bb       	out	0x17, r22	; 23
    5692:	01 c0       	rjmp	.+2      	; 0x5696 <DIO_u8SetPortDirection+0x1e>
		break;

	case DIO_PORTC:
		DDRC = copy_u8Direction;
    5694:	64 bb       	out	0x14, r22	; 20
    5696:	80 e0       	ldi	r24, 0x00	; 0
    5698:	08 95       	ret
		break;

	case DIO_PORTD:
		DDRD = copy_u8Direction;
    569a:	61 bb       	out	0x11, r22	; 17
    569c:	80 e0       	ldi	r24, 0x00	; 0
	default:
		Local_u8State = E_NOK;
		break;
	}
	return Local_u8State;
}
    569e:	08 95       	ret

000056a0 <DIO_u8GetPortValue>:



ReturnType_State_t DIO_u8GetPortValue(u8 copy_u8Port,u8 *copy_u8Variable)
{
    56a0:	fb 01       	movw	r30, r22
	u8 Local_u8State = E_OK;
	if(copy_u8Variable != NULL)
    56a2:	61 15       	cp	r22, r1
    56a4:	71 05       	cpc	r23, r1
    56a6:	11 f4       	brne	.+4      	; 0x56ac <DIO_u8GetPortValue+0xc>
    56a8:	82 e0       	ldi	r24, 0x02	; 2
    56aa:	08 95       	ret
	{
		switch(copy_u8Port)
    56ac:	81 30       	cpi	r24, 0x01	; 1
    56ae:	51 f0       	breq	.+20     	; 0x56c4 <DIO_u8GetPortValue+0x24>
    56b0:	81 30       	cpi	r24, 0x01	; 1
    56b2:	30 f0       	brcs	.+12     	; 0x56c0 <DIO_u8GetPortValue+0x20>
    56b4:	82 30       	cpi	r24, 0x02	; 2
    56b6:	41 f0       	breq	.+16     	; 0x56c8 <DIO_u8GetPortValue+0x28>
    56b8:	83 30       	cpi	r24, 0x03	; 3
    56ba:	51 f0       	breq	.+20     	; 0x56d0 <DIO_u8GetPortValue+0x30>
    56bc:	81 e0       	ldi	r24, 0x01	; 1
    56be:	08 95       	ret
		{
		case DIO_PORTA:
			*copy_u8Variable = PINA;
    56c0:	89 b3       	in	r24, 0x19	; 25
    56c2:	03 c0       	rjmp	.+6      	; 0x56ca <DIO_u8GetPortValue+0x2a>
			break;

		case DIO_PORTB:
			*copy_u8Variable = PINB;
    56c4:	86 b3       	in	r24, 0x16	; 22
    56c6:	01 c0       	rjmp	.+2      	; 0x56ca <DIO_u8GetPortValue+0x2a>
			break;

		case DIO_PORTC:
			*copy_u8Variable = PINC;
    56c8:	83 b3       	in	r24, 0x13	; 19
    56ca:	80 83       	st	Z, r24
    56cc:	80 e0       	ldi	r24, 0x00	; 0
    56ce:	08 95       	ret
			break;

		case DIO_PORTD:
			*copy_u8Variable = PIND;
    56d0:	80 b3       	in	r24, 0x10	; 16
    56d2:	80 83       	st	Z, r24
    56d4:	80 e0       	ldi	r24, 0x00	; 0
	else
	{
		Local_u8State = E_NOK_NULL_PTR;
	}
	return Local_u8State;
}
    56d6:	08 95       	ret

000056d8 <DIO_u8SetPinValue>:


ReturnType_State_t DIO_u8SetPinValue(u8 copy_u8Port,u8 copy_u8Pin ,u8 copy_u8Value)
{
	u8 Local_u8State = E_OK;
	if((copy_u8Pin >= DIO_PIN0) && (copy_u8Pin <= DIO_PIN7))
    56d8:	68 30       	cpi	r22, 0x08	; 8
    56da:	08 f0       	brcs	.+2      	; 0x56de <DIO_u8SetPinValue+0x6>
    56dc:	74 c0       	rjmp	.+232    	; 0x57c6 <DIO_u8SetPinValue+0xee>
	{
		if(copy_u8Value==DIO_PIN_LOW)
    56de:	44 23       	and	r20, r20
    56e0:	d1 f5       	brne	.+116    	; 0x5756 <DIO_u8SetPinValue+0x7e>
		{
			switch(copy_u8Port)
    56e2:	81 30       	cpi	r24, 0x01	; 1
    56e4:	a1 f0       	breq	.+40     	; 0x570e <DIO_u8SetPinValue+0x36>
    56e6:	81 30       	cpi	r24, 0x01	; 1
    56e8:	30 f0       	brcs	.+12     	; 0x56f6 <DIO_u8SetPinValue+0x1e>
    56ea:	82 30       	cpi	r24, 0x02	; 2
    56ec:	e1 f0       	breq	.+56     	; 0x5726 <DIO_u8SetPinValue+0x4e>
    56ee:	83 30       	cpi	r24, 0x03	; 3
    56f0:	09 f0       	breq	.+2      	; 0x56f4 <DIO_u8SetPinValue+0x1c>
    56f2:	69 c0       	rjmp	.+210    	; 0x57c6 <DIO_u8SetPinValue+0xee>
    56f4:	24 c0       	rjmp	.+72     	; 0x573e <DIO_u8SetPinValue+0x66>
			{
			case DIO_PORTA:
				CLR_BIT(PORTA,copy_u8Pin);
    56f6:	2b b3       	in	r18, 0x1b	; 27
    56f8:	81 e0       	ldi	r24, 0x01	; 1
    56fa:	90 e0       	ldi	r25, 0x00	; 0
    56fc:	02 c0       	rjmp	.+4      	; 0x5702 <DIO_u8SetPinValue+0x2a>
    56fe:	88 0f       	add	r24, r24
    5700:	99 1f       	adc	r25, r25
    5702:	6a 95       	dec	r22
    5704:	e2 f7       	brpl	.-8      	; 0x56fe <DIO_u8SetPinValue+0x26>
    5706:	80 95       	com	r24
    5708:	82 23       	and	r24, r18
    570a:	8b bb       	out	0x1b, r24	; 27
    570c:	5a c0       	rjmp	.+180    	; 0x57c2 <DIO_u8SetPinValue+0xea>
				break;
			case DIO_PORTB:
				CLR_BIT(PORTB,copy_u8Pin);
    570e:	28 b3       	in	r18, 0x18	; 24
    5710:	81 e0       	ldi	r24, 0x01	; 1
    5712:	90 e0       	ldi	r25, 0x00	; 0
    5714:	02 c0       	rjmp	.+4      	; 0x571a <DIO_u8SetPinValue+0x42>
    5716:	88 0f       	add	r24, r24
    5718:	99 1f       	adc	r25, r25
    571a:	6a 95       	dec	r22
    571c:	e2 f7       	brpl	.-8      	; 0x5716 <DIO_u8SetPinValue+0x3e>
    571e:	80 95       	com	r24
    5720:	82 23       	and	r24, r18
    5722:	88 bb       	out	0x18, r24	; 24
    5724:	4e c0       	rjmp	.+156    	; 0x57c2 <DIO_u8SetPinValue+0xea>
				break;
			case DIO_PORTC:
				CLR_BIT(PORTC,copy_u8Pin);
    5726:	25 b3       	in	r18, 0x15	; 21
    5728:	81 e0       	ldi	r24, 0x01	; 1
    572a:	90 e0       	ldi	r25, 0x00	; 0
    572c:	02 c0       	rjmp	.+4      	; 0x5732 <DIO_u8SetPinValue+0x5a>
    572e:	88 0f       	add	r24, r24
    5730:	99 1f       	adc	r25, r25
    5732:	6a 95       	dec	r22
    5734:	e2 f7       	brpl	.-8      	; 0x572e <DIO_u8SetPinValue+0x56>
    5736:	80 95       	com	r24
    5738:	82 23       	and	r24, r18
    573a:	85 bb       	out	0x15, r24	; 21
    573c:	42 c0       	rjmp	.+132    	; 0x57c2 <DIO_u8SetPinValue+0xea>
				break;
			case DIO_PORTD:
				CLR_BIT(PORTD,copy_u8Pin);
    573e:	22 b3       	in	r18, 0x12	; 18
    5740:	81 e0       	ldi	r24, 0x01	; 1
    5742:	90 e0       	ldi	r25, 0x00	; 0
    5744:	02 c0       	rjmp	.+4      	; 0x574a <DIO_u8SetPinValue+0x72>
    5746:	88 0f       	add	r24, r24
    5748:	99 1f       	adc	r25, r25
    574a:	6a 95       	dec	r22
    574c:	e2 f7       	brpl	.-8      	; 0x5746 <DIO_u8SetPinValue+0x6e>
    574e:	80 95       	com	r24
    5750:	82 23       	and	r24, r18
    5752:	82 bb       	out	0x12, r24	; 18
    5754:	36 c0       	rjmp	.+108    	; 0x57c2 <DIO_u8SetPinValue+0xea>
			default:
				Local_u8State = E_NOK;
				break;
			}
		}
		else if(copy_u8Value==DIO_PIN_HIGH)
    5756:	41 30       	cpi	r20, 0x01	; 1
    5758:	b1 f5       	brne	.+108    	; 0x57c6 <DIO_u8SetPinValue+0xee>
		{
			switch(copy_u8Port)
    575a:	81 30       	cpi	r24, 0x01	; 1
    575c:	91 f0       	breq	.+36     	; 0x5782 <DIO_u8SetPinValue+0xaa>
    575e:	81 30       	cpi	r24, 0x01	; 1
    5760:	28 f0       	brcs	.+10     	; 0x576c <DIO_u8SetPinValue+0x94>
    5762:	82 30       	cpi	r24, 0x02	; 2
    5764:	c9 f0       	breq	.+50     	; 0x5798 <DIO_u8SetPinValue+0xc0>
    5766:	83 30       	cpi	r24, 0x03	; 3
    5768:	71 f5       	brne	.+92     	; 0x57c6 <DIO_u8SetPinValue+0xee>
    576a:	21 c0       	rjmp	.+66     	; 0x57ae <DIO_u8SetPinValue+0xd6>
			{
			case DIO_PORTA:
				SET_BIT(PORTA,copy_u8Pin);
    576c:	2b b3       	in	r18, 0x1b	; 27
    576e:	81 e0       	ldi	r24, 0x01	; 1
    5770:	90 e0       	ldi	r25, 0x00	; 0
    5772:	02 c0       	rjmp	.+4      	; 0x5778 <DIO_u8SetPinValue+0xa0>
    5774:	88 0f       	add	r24, r24
    5776:	99 1f       	adc	r25, r25
    5778:	6a 95       	dec	r22
    577a:	e2 f7       	brpl	.-8      	; 0x5774 <DIO_u8SetPinValue+0x9c>
    577c:	28 2b       	or	r18, r24
    577e:	2b bb       	out	0x1b, r18	; 27
    5780:	20 c0       	rjmp	.+64     	; 0x57c2 <DIO_u8SetPinValue+0xea>
				break;
			case DIO_PORTB:
				SET_BIT(PORTB,copy_u8Pin);
    5782:	28 b3       	in	r18, 0x18	; 24
    5784:	81 e0       	ldi	r24, 0x01	; 1
    5786:	90 e0       	ldi	r25, 0x00	; 0
    5788:	02 c0       	rjmp	.+4      	; 0x578e <DIO_u8SetPinValue+0xb6>
    578a:	88 0f       	add	r24, r24
    578c:	99 1f       	adc	r25, r25
    578e:	6a 95       	dec	r22
    5790:	e2 f7       	brpl	.-8      	; 0x578a <DIO_u8SetPinValue+0xb2>
    5792:	28 2b       	or	r18, r24
    5794:	28 bb       	out	0x18, r18	; 24
    5796:	15 c0       	rjmp	.+42     	; 0x57c2 <DIO_u8SetPinValue+0xea>
				break;
			case DIO_PORTC:
				SET_BIT(PORTC,copy_u8Pin);
    5798:	25 b3       	in	r18, 0x15	; 21
    579a:	81 e0       	ldi	r24, 0x01	; 1
    579c:	90 e0       	ldi	r25, 0x00	; 0
    579e:	02 c0       	rjmp	.+4      	; 0x57a4 <DIO_u8SetPinValue+0xcc>
    57a0:	88 0f       	add	r24, r24
    57a2:	99 1f       	adc	r25, r25
    57a4:	6a 95       	dec	r22
    57a6:	e2 f7       	brpl	.-8      	; 0x57a0 <DIO_u8SetPinValue+0xc8>
    57a8:	28 2b       	or	r18, r24
    57aa:	25 bb       	out	0x15, r18	; 21
    57ac:	0a c0       	rjmp	.+20     	; 0x57c2 <DIO_u8SetPinValue+0xea>
				break;
			case DIO_PORTD:
				SET_BIT(PORTD,copy_u8Pin);
    57ae:	22 b3       	in	r18, 0x12	; 18
    57b0:	81 e0       	ldi	r24, 0x01	; 1
    57b2:	90 e0       	ldi	r25, 0x00	; 0
    57b4:	02 c0       	rjmp	.+4      	; 0x57ba <DIO_u8SetPinValue+0xe2>
    57b6:	88 0f       	add	r24, r24
    57b8:	99 1f       	adc	r25, r25
    57ba:	6a 95       	dec	r22
    57bc:	e2 f7       	brpl	.-8      	; 0x57b6 <DIO_u8SetPinValue+0xde>
    57be:	28 2b       	or	r18, r24
    57c0:	22 bb       	out	0x12, r18	; 18
    57c2:	80 e0       	ldi	r24, 0x00	; 0
    57c4:	08 95       	ret
				break;
    57c6:	81 e0       	ldi	r24, 0x01	; 1
	else
	{
		Local_u8State = E_NOK;
	}
	return Local_u8State;
}
    57c8:	08 95       	ret

000057ca <DIO_u8SetPinDirection>:

ReturnType_State_t DIO_u8SetPinDirection(u8 copy_u8Port,u8 copy_u8Pin ,u8 copy_u8Direction)
{
	u8 Local_u8State = E_OK;
	if((copy_u8Pin >= DIO_PIN0) && (copy_u8Pin <= DIO_PIN7))
    57ca:	68 30       	cpi	r22, 0x08	; 8
    57cc:	08 f0       	brcs	.+2      	; 0x57d0 <DIO_u8SetPinDirection+0x6>
    57ce:	74 c0       	rjmp	.+232    	; 0x58b8 <DIO_u8SetPinDirection+0xee>
	{
		if(copy_u8Direction==DIO_PIN_INPUT)
    57d0:	44 23       	and	r20, r20
    57d2:	d1 f5       	brne	.+116    	; 0x5848 <DIO_u8SetPinDirection+0x7e>
		{
			switch(copy_u8Port)
    57d4:	81 30       	cpi	r24, 0x01	; 1
    57d6:	a1 f0       	breq	.+40     	; 0x5800 <DIO_u8SetPinDirection+0x36>
    57d8:	81 30       	cpi	r24, 0x01	; 1
    57da:	30 f0       	brcs	.+12     	; 0x57e8 <DIO_u8SetPinDirection+0x1e>
    57dc:	82 30       	cpi	r24, 0x02	; 2
    57de:	e1 f0       	breq	.+56     	; 0x5818 <DIO_u8SetPinDirection+0x4e>
    57e0:	83 30       	cpi	r24, 0x03	; 3
    57e2:	09 f0       	breq	.+2      	; 0x57e6 <DIO_u8SetPinDirection+0x1c>
    57e4:	69 c0       	rjmp	.+210    	; 0x58b8 <DIO_u8SetPinDirection+0xee>
    57e6:	24 c0       	rjmp	.+72     	; 0x5830 <DIO_u8SetPinDirection+0x66>
			{
			case DIO_PORTA:
				CLR_BIT(DDRA,copy_u8Pin);
    57e8:	2a b3       	in	r18, 0x1a	; 26
    57ea:	81 e0       	ldi	r24, 0x01	; 1
    57ec:	90 e0       	ldi	r25, 0x00	; 0
    57ee:	02 c0       	rjmp	.+4      	; 0x57f4 <DIO_u8SetPinDirection+0x2a>
    57f0:	88 0f       	add	r24, r24
    57f2:	99 1f       	adc	r25, r25
    57f4:	6a 95       	dec	r22
    57f6:	e2 f7       	brpl	.-8      	; 0x57f0 <DIO_u8SetPinDirection+0x26>
    57f8:	80 95       	com	r24
    57fa:	82 23       	and	r24, r18
    57fc:	8a bb       	out	0x1a, r24	; 26
    57fe:	5a c0       	rjmp	.+180    	; 0x58b4 <DIO_u8SetPinDirection+0xea>
				break;
			case DIO_PORTB:
				CLR_BIT(DDRB,copy_u8Pin);
    5800:	27 b3       	in	r18, 0x17	; 23
    5802:	81 e0       	ldi	r24, 0x01	; 1
    5804:	90 e0       	ldi	r25, 0x00	; 0
    5806:	02 c0       	rjmp	.+4      	; 0x580c <DIO_u8SetPinDirection+0x42>
    5808:	88 0f       	add	r24, r24
    580a:	99 1f       	adc	r25, r25
    580c:	6a 95       	dec	r22
    580e:	e2 f7       	brpl	.-8      	; 0x5808 <DIO_u8SetPinDirection+0x3e>
    5810:	80 95       	com	r24
    5812:	82 23       	and	r24, r18
    5814:	87 bb       	out	0x17, r24	; 23
    5816:	4e c0       	rjmp	.+156    	; 0x58b4 <DIO_u8SetPinDirection+0xea>
				break;
			case DIO_PORTC:
				CLR_BIT(DDRC,copy_u8Pin);
    5818:	24 b3       	in	r18, 0x14	; 20
    581a:	81 e0       	ldi	r24, 0x01	; 1
    581c:	90 e0       	ldi	r25, 0x00	; 0
    581e:	02 c0       	rjmp	.+4      	; 0x5824 <DIO_u8SetPinDirection+0x5a>
    5820:	88 0f       	add	r24, r24
    5822:	99 1f       	adc	r25, r25
    5824:	6a 95       	dec	r22
    5826:	e2 f7       	brpl	.-8      	; 0x5820 <DIO_u8SetPinDirection+0x56>
    5828:	80 95       	com	r24
    582a:	82 23       	and	r24, r18
    582c:	84 bb       	out	0x14, r24	; 20
    582e:	42 c0       	rjmp	.+132    	; 0x58b4 <DIO_u8SetPinDirection+0xea>
				break;
			case DIO_PORTD:
				CLR_BIT(DDRD,copy_u8Pin);
    5830:	21 b3       	in	r18, 0x11	; 17
    5832:	81 e0       	ldi	r24, 0x01	; 1
    5834:	90 e0       	ldi	r25, 0x00	; 0
    5836:	02 c0       	rjmp	.+4      	; 0x583c <DIO_u8SetPinDirection+0x72>
    5838:	88 0f       	add	r24, r24
    583a:	99 1f       	adc	r25, r25
    583c:	6a 95       	dec	r22
    583e:	e2 f7       	brpl	.-8      	; 0x5838 <DIO_u8SetPinDirection+0x6e>
    5840:	80 95       	com	r24
    5842:	82 23       	and	r24, r18
    5844:	81 bb       	out	0x11, r24	; 17
    5846:	36 c0       	rjmp	.+108    	; 0x58b4 <DIO_u8SetPinDirection+0xea>
			default:
				Local_u8State = E_NOK;
				break;
			}
		}
		else if(copy_u8Direction==DIO_PIN_OUTPUT)
    5848:	41 30       	cpi	r20, 0x01	; 1
    584a:	b1 f5       	brne	.+108    	; 0x58b8 <DIO_u8SetPinDirection+0xee>
		{
			switch(copy_u8Port)
    584c:	81 30       	cpi	r24, 0x01	; 1
    584e:	91 f0       	breq	.+36     	; 0x5874 <DIO_u8SetPinDirection+0xaa>
    5850:	81 30       	cpi	r24, 0x01	; 1
    5852:	28 f0       	brcs	.+10     	; 0x585e <DIO_u8SetPinDirection+0x94>
    5854:	82 30       	cpi	r24, 0x02	; 2
    5856:	c9 f0       	breq	.+50     	; 0x588a <DIO_u8SetPinDirection+0xc0>
    5858:	83 30       	cpi	r24, 0x03	; 3
    585a:	71 f5       	brne	.+92     	; 0x58b8 <DIO_u8SetPinDirection+0xee>
    585c:	21 c0       	rjmp	.+66     	; 0x58a0 <DIO_u8SetPinDirection+0xd6>
			{
			case DIO_PORTA:
				SET_BIT(DDRA,copy_u8Pin);
    585e:	2a b3       	in	r18, 0x1a	; 26
    5860:	81 e0       	ldi	r24, 0x01	; 1
    5862:	90 e0       	ldi	r25, 0x00	; 0
    5864:	02 c0       	rjmp	.+4      	; 0x586a <DIO_u8SetPinDirection+0xa0>
    5866:	88 0f       	add	r24, r24
    5868:	99 1f       	adc	r25, r25
    586a:	6a 95       	dec	r22
    586c:	e2 f7       	brpl	.-8      	; 0x5866 <DIO_u8SetPinDirection+0x9c>
    586e:	28 2b       	or	r18, r24
    5870:	2a bb       	out	0x1a, r18	; 26
    5872:	20 c0       	rjmp	.+64     	; 0x58b4 <DIO_u8SetPinDirection+0xea>
				break;
			case DIO_PORTB:
				SET_BIT(DDRB,copy_u8Pin);
    5874:	27 b3       	in	r18, 0x17	; 23
    5876:	81 e0       	ldi	r24, 0x01	; 1
    5878:	90 e0       	ldi	r25, 0x00	; 0
    587a:	02 c0       	rjmp	.+4      	; 0x5880 <DIO_u8SetPinDirection+0xb6>
    587c:	88 0f       	add	r24, r24
    587e:	99 1f       	adc	r25, r25
    5880:	6a 95       	dec	r22
    5882:	e2 f7       	brpl	.-8      	; 0x587c <DIO_u8SetPinDirection+0xb2>
    5884:	28 2b       	or	r18, r24
    5886:	27 bb       	out	0x17, r18	; 23
    5888:	15 c0       	rjmp	.+42     	; 0x58b4 <DIO_u8SetPinDirection+0xea>
				break;
			case DIO_PORTC:
				SET_BIT(DDRC,copy_u8Pin);
    588a:	24 b3       	in	r18, 0x14	; 20
    588c:	81 e0       	ldi	r24, 0x01	; 1
    588e:	90 e0       	ldi	r25, 0x00	; 0
    5890:	02 c0       	rjmp	.+4      	; 0x5896 <DIO_u8SetPinDirection+0xcc>
    5892:	88 0f       	add	r24, r24
    5894:	99 1f       	adc	r25, r25
    5896:	6a 95       	dec	r22
    5898:	e2 f7       	brpl	.-8      	; 0x5892 <DIO_u8SetPinDirection+0xc8>
    589a:	28 2b       	or	r18, r24
    589c:	24 bb       	out	0x14, r18	; 20
    589e:	0a c0       	rjmp	.+20     	; 0x58b4 <DIO_u8SetPinDirection+0xea>
				break;
			case DIO_PORTD:
				SET_BIT(DDRD,copy_u8Pin);
    58a0:	21 b3       	in	r18, 0x11	; 17
    58a2:	81 e0       	ldi	r24, 0x01	; 1
    58a4:	90 e0       	ldi	r25, 0x00	; 0
    58a6:	02 c0       	rjmp	.+4      	; 0x58ac <DIO_u8SetPinDirection+0xe2>
    58a8:	88 0f       	add	r24, r24
    58aa:	99 1f       	adc	r25, r25
    58ac:	6a 95       	dec	r22
    58ae:	e2 f7       	brpl	.-8      	; 0x58a8 <DIO_u8SetPinDirection+0xde>
    58b0:	28 2b       	or	r18, r24
    58b2:	21 bb       	out	0x11, r18	; 17
    58b4:	80 e0       	ldi	r24, 0x00	; 0
    58b6:	08 95       	ret
				break;
    58b8:	81 e0       	ldi	r24, 0x01	; 1
	else
	{
		Local_u8State = E_NOK;
	}
	return Local_u8State;
}
    58ba:	08 95       	ret

000058bc <DIO_u8GetPinValue>:

ReturnType_State_t DIO_u8GetPinValue(u8 copy_u8Port,u8 copy_u8Pin ,u8 *copy_u8Variable)
{
    58bc:	fa 01       	movw	r30, r20
	u8 Local_u8State = E_OK;
	if((copy_u8Pin >= DIO_PIN0) && (copy_u8Pin <= DIO_PIN7))
    58be:	68 30       	cpi	r22, 0x08	; 8
    58c0:	d0 f4       	brcc	.+52     	; 0x58f6 <DIO_u8GetPinValue+0x3a>
	{
		switch(copy_u8Port)
    58c2:	81 30       	cpi	r24, 0x01	; 1
    58c4:	49 f0       	breq	.+18     	; 0x58d8 <DIO_u8GetPinValue+0x1c>
    58c6:	81 30       	cpi	r24, 0x01	; 1
    58c8:	28 f0       	brcs	.+10     	; 0x58d4 <DIO_u8GetPinValue+0x18>
    58ca:	82 30       	cpi	r24, 0x02	; 2
    58cc:	39 f0       	breq	.+14     	; 0x58dc <DIO_u8GetPinValue+0x20>
    58ce:	83 30       	cpi	r24, 0x03	; 3
    58d0:	91 f4       	brne	.+36     	; 0x58f6 <DIO_u8GetPinValue+0x3a>
    58d2:	06 c0       	rjmp	.+12     	; 0x58e0 <DIO_u8GetPinValue+0x24>
		{
		case DIO_PORTA:
			*copy_u8Variable =GET_BIT(PINA,copy_u8Pin) ;
    58d4:	89 b3       	in	r24, 0x19	; 25
    58d6:	05 c0       	rjmp	.+10     	; 0x58e2 <DIO_u8GetPinValue+0x26>
			break;
		case DIO_PORTB:
			*copy_u8Variable =GET_BIT(PINB,copy_u8Pin) ;
    58d8:	86 b3       	in	r24, 0x16	; 22
    58da:	03 c0       	rjmp	.+6      	; 0x58e2 <DIO_u8GetPinValue+0x26>
			break;
		case DIO_PORTC:
			*copy_u8Variable =GET_BIT(PINC,copy_u8Pin) ;
    58dc:	83 b3       	in	r24, 0x13	; 19
    58de:	01 c0       	rjmp	.+2      	; 0x58e2 <DIO_u8GetPinValue+0x26>
			break;
		case DIO_PORTD:
			*copy_u8Variable =GET_BIT(PIND,copy_u8Pin) ;
    58e0:	80 b3       	in	r24, 0x10	; 16
    58e2:	90 e0       	ldi	r25, 0x00	; 0
    58e4:	02 c0       	rjmp	.+4      	; 0x58ea <DIO_u8GetPinValue+0x2e>
    58e6:	95 95       	asr	r25
    58e8:	87 95       	ror	r24
    58ea:	6a 95       	dec	r22
    58ec:	e2 f7       	brpl	.-8      	; 0x58e6 <DIO_u8GetPinValue+0x2a>
    58ee:	81 70       	andi	r24, 0x01	; 1
    58f0:	80 83       	st	Z, r24
    58f2:	80 e0       	ldi	r24, 0x00	; 0
    58f4:	08 95       	ret
			break;
    58f6:	81 e0       	ldi	r24, 0x01	; 1
	else
	{
		Local_u8State = E_NOK;
	}
	return Local_u8State;
}
    58f8:	08 95       	ret

000058fa <DIO_u8ConnectPullUp>:
/*********PULL UP Connection Function*******/
ReturnType_State_t DIO_u8ConnectPullUp(u8 copy_u8Port,u8 copy_u8Pin, u8 copy_u8ConnectPullUp ){
    58fa:	98 2f       	mov	r25, r24

	ReturnType_State_t Local_errorState = E_OK;
	if((copy_u8Port <=DIO_PORTD) && (copy_u8Pin <= DIO_PIN7))
    58fc:	84 30       	cpi	r24, 0x04	; 4
    58fe:	08 f0       	brcs	.+2      	; 0x5902 <DIO_u8ConnectPullUp+0x8>
    5900:	86 c0       	rjmp	.+268    	; 0x5a0e <DIO_u8ConnectPullUp+0x114>
    5902:	68 30       	cpi	r22, 0x08	; 8
    5904:	08 f0       	brcs	.+2      	; 0x5908 <DIO_u8ConnectPullUp+0xe>
    5906:	83 c0       	rjmp	.+262    	; 0x5a0e <DIO_u8ConnectPullUp+0x114>
	{
		CLR_BIT(SFIOR,PUD);
    5908:	80 b7       	in	r24, 0x30	; 48
    590a:	8b 7f       	andi	r24, 0xFB	; 251
    590c:	80 bf       	out	0x30, r24	; 48
		switch(copy_u8Port)
    590e:	91 30       	cpi	r25, 0x01	; 1
    5910:	31 f1       	breq	.+76     	; 0x595e <DIO_u8ConnectPullUp+0x64>
    5912:	91 30       	cpi	r25, 0x01	; 1
    5914:	38 f0       	brcs	.+14     	; 0x5924 <DIO_u8ConnectPullUp+0x2a>
    5916:	92 30       	cpi	r25, 0x02	; 2
    5918:	09 f4       	brne	.+2      	; 0x591c <DIO_u8ConnectPullUp+0x22>
    591a:	3e c0       	rjmp	.+124    	; 0x5998 <DIO_u8ConnectPullUp+0x9e>
    591c:	93 30       	cpi	r25, 0x03	; 3
    591e:	09 f0       	breq	.+2      	; 0x5922 <DIO_u8ConnectPullUp+0x28>
    5920:	74 c0       	rjmp	.+232    	; 0x5a0a <DIO_u8ConnectPullUp+0x110>
    5922:	57 c0       	rjmp	.+174    	; 0x59d2 <DIO_u8ConnectPullUp+0xd8>
		{
		case DIO_PORTA:
			if(copy_u8ConnectPullUp == DIO_PIN_HIGH)
    5924:	41 30       	cpi	r20, 0x01	; 1
    5926:	79 f4       	brne	.+30     	; 0x5946 <DIO_u8ConnectPullUp+0x4c>
			{
				CLR_BIT(DDRA,copy_u8Pin);
    5928:	3a b3       	in	r19, 0x1a	; 26
    592a:	81 e0       	ldi	r24, 0x01	; 1
    592c:	90 e0       	ldi	r25, 0x00	; 0
    592e:	02 c0       	rjmp	.+4      	; 0x5934 <DIO_u8ConnectPullUp+0x3a>
    5930:	88 0f       	add	r24, r24
    5932:	99 1f       	adc	r25, r25
    5934:	6a 95       	dec	r22
    5936:	e2 f7       	brpl	.-8      	; 0x5930 <DIO_u8ConnectPullUp+0x36>
    5938:	28 2f       	mov	r18, r24
    593a:	20 95       	com	r18
    593c:	23 23       	and	r18, r19
    593e:	2a bb       	out	0x1a, r18	; 26
				SET_BIT(PORTA,copy_u8Pin);
    5940:	2b b3       	in	r18, 0x1b	; 27
    5942:	82 2b       	or	r24, r18
    5944:	0a c0       	rjmp	.+20     	; 0x595a <DIO_u8ConnectPullUp+0x60>
			}
			else
			{
				CLR_BIT(PORTA,copy_u8Pin);
    5946:	2b b3       	in	r18, 0x1b	; 27
    5948:	81 e0       	ldi	r24, 0x01	; 1
    594a:	90 e0       	ldi	r25, 0x00	; 0
    594c:	02 c0       	rjmp	.+4      	; 0x5952 <DIO_u8ConnectPullUp+0x58>
    594e:	88 0f       	add	r24, r24
    5950:	99 1f       	adc	r25, r25
    5952:	6a 95       	dec	r22
    5954:	e2 f7       	brpl	.-8      	; 0x594e <DIO_u8ConnectPullUp+0x54>
    5956:	80 95       	com	r24
    5958:	82 23       	and	r24, r18
    595a:	8b bb       	out	0x1b, r24	; 27
    595c:	56 c0       	rjmp	.+172    	; 0x5a0a <DIO_u8ConnectPullUp+0x110>
			}
			break;

		case DIO_PORTB:
			if(copy_u8ConnectPullUp == DIO_PIN_HIGH)
    595e:	41 30       	cpi	r20, 0x01	; 1
    5960:	79 f4       	brne	.+30     	; 0x5980 <DIO_u8ConnectPullUp+0x86>
			{
				CLR_BIT(DDRB,copy_u8Pin);
    5962:	37 b3       	in	r19, 0x17	; 23
    5964:	81 e0       	ldi	r24, 0x01	; 1
    5966:	90 e0       	ldi	r25, 0x00	; 0
    5968:	02 c0       	rjmp	.+4      	; 0x596e <DIO_u8ConnectPullUp+0x74>
    596a:	88 0f       	add	r24, r24
    596c:	99 1f       	adc	r25, r25
    596e:	6a 95       	dec	r22
    5970:	e2 f7       	brpl	.-8      	; 0x596a <DIO_u8ConnectPullUp+0x70>
    5972:	28 2f       	mov	r18, r24
    5974:	20 95       	com	r18
    5976:	23 23       	and	r18, r19
    5978:	27 bb       	out	0x17, r18	; 23
				SET_BIT(PORTB,copy_u8Pin);
    597a:	28 b3       	in	r18, 0x18	; 24
    597c:	82 2b       	or	r24, r18
    597e:	0a c0       	rjmp	.+20     	; 0x5994 <DIO_u8ConnectPullUp+0x9a>
			}
			else
			{
				CLR_BIT(PORTB,copy_u8Pin);
    5980:	28 b3       	in	r18, 0x18	; 24
    5982:	81 e0       	ldi	r24, 0x01	; 1
    5984:	90 e0       	ldi	r25, 0x00	; 0
    5986:	02 c0       	rjmp	.+4      	; 0x598c <DIO_u8ConnectPullUp+0x92>
    5988:	88 0f       	add	r24, r24
    598a:	99 1f       	adc	r25, r25
    598c:	6a 95       	dec	r22
    598e:	e2 f7       	brpl	.-8      	; 0x5988 <DIO_u8ConnectPullUp+0x8e>
    5990:	80 95       	com	r24
    5992:	82 23       	and	r24, r18
    5994:	88 bb       	out	0x18, r24	; 24
    5996:	39 c0       	rjmp	.+114    	; 0x5a0a <DIO_u8ConnectPullUp+0x110>
			}
			break;

		case DIO_PORTC:
			if(copy_u8ConnectPullUp == DIO_PIN_HIGH)
    5998:	41 30       	cpi	r20, 0x01	; 1
    599a:	79 f4       	brne	.+30     	; 0x59ba <DIO_u8ConnectPullUp+0xc0>
			{
				CLR_BIT(DDRC,copy_u8Pin);
    599c:	34 b3       	in	r19, 0x14	; 20
    599e:	81 e0       	ldi	r24, 0x01	; 1
    59a0:	90 e0       	ldi	r25, 0x00	; 0
    59a2:	02 c0       	rjmp	.+4      	; 0x59a8 <DIO_u8ConnectPullUp+0xae>
    59a4:	88 0f       	add	r24, r24
    59a6:	99 1f       	adc	r25, r25
    59a8:	6a 95       	dec	r22
    59aa:	e2 f7       	brpl	.-8      	; 0x59a4 <DIO_u8ConnectPullUp+0xaa>
    59ac:	28 2f       	mov	r18, r24
    59ae:	20 95       	com	r18
    59b0:	23 23       	and	r18, r19
    59b2:	24 bb       	out	0x14, r18	; 20
				SET_BIT(PORTC,copy_u8Pin);
    59b4:	25 b3       	in	r18, 0x15	; 21
    59b6:	82 2b       	or	r24, r18
    59b8:	0a c0       	rjmp	.+20     	; 0x59ce <DIO_u8ConnectPullUp+0xd4>
			}
			else
			{
				CLR_BIT(PORTC,copy_u8Pin);
    59ba:	25 b3       	in	r18, 0x15	; 21
    59bc:	81 e0       	ldi	r24, 0x01	; 1
    59be:	90 e0       	ldi	r25, 0x00	; 0
    59c0:	02 c0       	rjmp	.+4      	; 0x59c6 <DIO_u8ConnectPullUp+0xcc>
    59c2:	88 0f       	add	r24, r24
    59c4:	99 1f       	adc	r25, r25
    59c6:	6a 95       	dec	r22
    59c8:	e2 f7       	brpl	.-8      	; 0x59c2 <DIO_u8ConnectPullUp+0xc8>
    59ca:	80 95       	com	r24
    59cc:	82 23       	and	r24, r18
    59ce:	85 bb       	out	0x15, r24	; 21
    59d0:	1c c0       	rjmp	.+56     	; 0x5a0a <DIO_u8ConnectPullUp+0x110>
			}
			break;

		case DIO_PORTD:
			if(copy_u8ConnectPullUp == DIO_PIN_HIGH)
    59d2:	41 30       	cpi	r20, 0x01	; 1
    59d4:	79 f4       	brne	.+30     	; 0x59f4 <DIO_u8ConnectPullUp+0xfa>
			{
				CLR_BIT(DDRD,copy_u8Pin);
    59d6:	31 b3       	in	r19, 0x11	; 17
    59d8:	81 e0       	ldi	r24, 0x01	; 1
    59da:	90 e0       	ldi	r25, 0x00	; 0
    59dc:	02 c0       	rjmp	.+4      	; 0x59e2 <DIO_u8ConnectPullUp+0xe8>
    59de:	88 0f       	add	r24, r24
    59e0:	99 1f       	adc	r25, r25
    59e2:	6a 95       	dec	r22
    59e4:	e2 f7       	brpl	.-8      	; 0x59de <DIO_u8ConnectPullUp+0xe4>
    59e6:	28 2f       	mov	r18, r24
    59e8:	20 95       	com	r18
    59ea:	23 23       	and	r18, r19
    59ec:	21 bb       	out	0x11, r18	; 17
				SET_BIT(PORTD,copy_u8Pin);
    59ee:	22 b3       	in	r18, 0x12	; 18
    59f0:	82 2b       	or	r24, r18
    59f2:	0a c0       	rjmp	.+20     	; 0x5a08 <DIO_u8ConnectPullUp+0x10e>
			}
			else
			{
				CLR_BIT(PORTD,copy_u8Pin);
    59f4:	22 b3       	in	r18, 0x12	; 18
    59f6:	81 e0       	ldi	r24, 0x01	; 1
    59f8:	90 e0       	ldi	r25, 0x00	; 0
    59fa:	02 c0       	rjmp	.+4      	; 0x5a00 <DIO_u8ConnectPullUp+0x106>
    59fc:	88 0f       	add	r24, r24
    59fe:	99 1f       	adc	r25, r25
    5a00:	6a 95       	dec	r22
    5a02:	e2 f7       	brpl	.-8      	; 0x59fc <DIO_u8ConnectPullUp+0x102>
    5a04:	80 95       	com	r24
    5a06:	82 23       	and	r24, r18
    5a08:	82 bb       	out	0x12, r24	; 18
    5a0a:	80 e0       	ldi	r24, 0x00	; 0
    5a0c:	08 95       	ret
    5a0e:	81 e0       	ldi	r24, 0x01	; 1
	}
	else{
		Local_errorState = E_NOK;
	}
	return Local_errorState;
}
    5a10:	08 95       	ret

00005a12 <DIO_u8TogglePinValue>:
ReturnType_State_t DIO_u8TogglePinValue(u8 copy_u8Port,u8 copy_u8Pin)
{
	u8 Local_u8State = E_OK;
	switch(copy_u8Port)
    5a12:	81 30       	cpi	r24, 0x01	; 1
    5a14:	99 f0       	breq	.+38     	; 0x5a3c <DIO_u8TogglePinValue+0x2a>
    5a16:	81 30       	cpi	r24, 0x01	; 1
    5a18:	30 f0       	brcs	.+12     	; 0x5a26 <DIO_u8TogglePinValue+0x14>
    5a1a:	82 30       	cpi	r24, 0x02	; 2
    5a1c:	d1 f0       	breq	.+52     	; 0x5a52 <DIO_u8TogglePinValue+0x40>
    5a1e:	83 30       	cpi	r24, 0x03	; 3
    5a20:	21 f1       	breq	.+72     	; 0x5a6a <DIO_u8TogglePinValue+0x58>
    5a22:	81 e0       	ldi	r24, 0x01	; 1
    5a24:	08 95       	ret
	{
	case DIO_PORTA:
		TOG_BIT(PORTA,copy_u8Pin);
    5a26:	2b b3       	in	r18, 0x1b	; 27
    5a28:	81 e0       	ldi	r24, 0x01	; 1
    5a2a:	90 e0       	ldi	r25, 0x00	; 0
    5a2c:	02 c0       	rjmp	.+4      	; 0x5a32 <DIO_u8TogglePinValue+0x20>
    5a2e:	88 0f       	add	r24, r24
    5a30:	99 1f       	adc	r25, r25
    5a32:	6a 95       	dec	r22
    5a34:	e2 f7       	brpl	.-8      	; 0x5a2e <DIO_u8TogglePinValue+0x1c>
    5a36:	28 27       	eor	r18, r24
    5a38:	2b bb       	out	0x1b, r18	; 27
    5a3a:	15 c0       	rjmp	.+42     	; 0x5a66 <DIO_u8TogglePinValue+0x54>
		break;
	case DIO_PORTB:
		TOG_BIT(PORTB,copy_u8Pin);
    5a3c:	28 b3       	in	r18, 0x18	; 24
    5a3e:	81 e0       	ldi	r24, 0x01	; 1
    5a40:	90 e0       	ldi	r25, 0x00	; 0
    5a42:	02 c0       	rjmp	.+4      	; 0x5a48 <DIO_u8TogglePinValue+0x36>
    5a44:	88 0f       	add	r24, r24
    5a46:	99 1f       	adc	r25, r25
    5a48:	6a 95       	dec	r22
    5a4a:	e2 f7       	brpl	.-8      	; 0x5a44 <DIO_u8TogglePinValue+0x32>
    5a4c:	28 27       	eor	r18, r24
    5a4e:	28 bb       	out	0x18, r18	; 24
    5a50:	0a c0       	rjmp	.+20     	; 0x5a66 <DIO_u8TogglePinValue+0x54>
		break;
	case DIO_PORTC:
		TOG_BIT(PORTC,copy_u8Pin);
    5a52:	25 b3       	in	r18, 0x15	; 21
    5a54:	81 e0       	ldi	r24, 0x01	; 1
    5a56:	90 e0       	ldi	r25, 0x00	; 0
    5a58:	02 c0       	rjmp	.+4      	; 0x5a5e <DIO_u8TogglePinValue+0x4c>
    5a5a:	88 0f       	add	r24, r24
    5a5c:	99 1f       	adc	r25, r25
    5a5e:	6a 95       	dec	r22
    5a60:	e2 f7       	brpl	.-8      	; 0x5a5a <DIO_u8TogglePinValue+0x48>
    5a62:	28 27       	eor	r18, r24
    5a64:	25 bb       	out	0x15, r18	; 21
    5a66:	80 e0       	ldi	r24, 0x00	; 0
    5a68:	08 95       	ret
		break;
	case DIO_PORTD:
		TOG_BIT(PORTD,copy_u8Pin);
    5a6a:	22 b3       	in	r18, 0x12	; 18
    5a6c:	81 e0       	ldi	r24, 0x01	; 1
    5a6e:	90 e0       	ldi	r25, 0x00	; 0
    5a70:	02 c0       	rjmp	.+4      	; 0x5a76 <DIO_u8TogglePinValue+0x64>
    5a72:	88 0f       	add	r24, r24
    5a74:	99 1f       	adc	r25, r25
    5a76:	6a 95       	dec	r22
    5a78:	e2 f7       	brpl	.-8      	; 0x5a72 <DIO_u8TogglePinValue+0x60>
    5a7a:	28 27       	eor	r18, r24
    5a7c:	22 bb       	out	0x12, r18	; 18
    5a7e:	80 e0       	ldi	r24, 0x00	; 0
	default:
		Local_u8State = E_NOK;
		break;
	}
	return Local_u8State;
}
    5a80:	08 95       	ret

00005a82 <ADC_voidInit>:
#elif ADC_REF_SELECTION == AVCC
	SET_BIT(ADMUX, REFS0);
	CLR_BIT(ADMUX, REFS1);

#elif ADC_REF_SELECTION == VOLT_2_56
	SET_BIT(ADMUX, REFS0);
    5a82:	3e 9a       	sbi	0x07, 6	; 7
	SET_BIT(ADMUX, REFS1);
    5a84:	3f 9a       	sbi	0x07, 7	; 7

#endif

	/***************Challenge: Make configurations***************/
	/*clear ADLAR bit, so the first 8-bits will return in ADCL, and last 2-bits in ADCH*/
	CLR_BIT(ADMUX, ADLAR);
    5a86:	3d 98       	cbi	0x07, 5	; 7
	/*clear AUTO trigger ADC, so the ADC conversion will start only when you call:  ADC_convert_read() */
	CLR_BIT(ADCSRA, ADATE);
    5a88:	35 98       	cbi	0x06, 5	; 6
	/*disable ADC interrupt: */
	CLR_BIT(ADCSRA, ADIE);
    5a8a:	33 98       	cbi	0x06, 3	; 6
	/*set pre-scaler to be: (F_CPU/64) = (8000000/64) = 125 KHz */
	CLR_BIT(ADCSRA, ADPS0);
    5a8c:	30 98       	cbi	0x06, 0	; 6
	SET_BIT(ADCSRA, ADPS1);
    5a8e:	31 9a       	sbi	0x06, 1	; 6
	SET_BIT(ADCSRA, ADPS2);
    5a90:	32 9a       	sbi	0x06, 2	; 6

	/*enable ADC peripheral in MCU*/
	SET_BIT(ADCSRA, ADEN);
    5a92:	37 9a       	sbi	0x06, 7	; 6
}
    5a94:	08 95       	ret

00005a96 <ADC_u16GetConversionReading>:

u16 ADC_u16GetConversionReading(u8 copy_u8Channel)
{
	u16 ADC_data = 0;

	if(copy_u8Channel == CHANNEL0)
    5a96:	81 30       	cpi	r24, 0x01	; 1
    5a98:	49 f4       	brne	.+18     	; 0x5aac <ADC_u16GetConversionReading+0x16>
	{
		/*select input channel to pin PA0*/
		CLR_BIT(ADMUX, MUX0);
    5a9a:	38 98       	cbi	0x07, 0	; 7
		CLR_BIT(ADMUX, MUX1);
    5a9c:	39 98       	cbi	0x07, 1	; 7
		CLR_BIT(ADMUX, MUX2);
    5a9e:	3a 98       	cbi	0x07, 2	; 7
		CLR_BIT(ADMUX, MUX3);
    5aa0:	3b 98       	cbi	0x07, 3	; 7
		CLR_BIT(ADMUX, MUX4);
    5aa2:	3c 98       	cbi	0x07, 4	; 7

		/*start conversion:*/
		SET_BIT(ADCSRA, ADSC);
    5aa4:	36 9a       	sbi	0x06, 6	; 6
		/*wait until conversion ended*/
		while(GET_BIT(ADCSRA, ADSC) == 1)
    5aa6:	36 99       	sbic	0x06, 6	; 6
    5aa8:	fe cf       	rjmp	.-4      	; 0x5aa6 <ADC_u16GetConversionReading+0x10>
    5aaa:	4f c0       	rjmp	.+158    	; 0x5b4a <ADC_u16GetConversionReading+0xb4>
		/*after conversion is finished, read data from ADCL then ADCH*/
		ADC_data = ADCL;
		ADC_data |= (ADCH << 8);
	}

	else if(copy_u8Channel == CHANNEL1)
    5aac:	82 30       	cpi	r24, 0x02	; 2
    5aae:	49 f4       	brne	.+18     	; 0x5ac2 <ADC_u16GetConversionReading+0x2c>
	{
		/*select input channel to pin PA1*/
		SET_BIT(ADMUX, MUX0);
    5ab0:	38 9a       	sbi	0x07, 0	; 7
		CLR_BIT(ADMUX, MUX1);
    5ab2:	39 98       	cbi	0x07, 1	; 7
		CLR_BIT(ADMUX, MUX2);
    5ab4:	3a 98       	cbi	0x07, 2	; 7
		CLR_BIT(ADMUX, MUX3);
    5ab6:	3b 98       	cbi	0x07, 3	; 7
		CLR_BIT(ADMUX, MUX4);
    5ab8:	3c 98       	cbi	0x07, 4	; 7

		/*start conversion:*/
		SET_BIT(ADCSRA, ADSC);
    5aba:	36 9a       	sbi	0x06, 6	; 6
		/*wait until conversion ended*/
		while(GET_BIT(ADCSRA, ADSC) == 1)
    5abc:	36 99       	sbic	0x06, 6	; 6
    5abe:	fe cf       	rjmp	.-4      	; 0x5abc <ADC_u16GetConversionReading+0x26>
    5ac0:	44 c0       	rjmp	.+136    	; 0x5b4a <ADC_u16GetConversionReading+0xb4>
		/*after conversion is finished, read data from ADCL then ADCH*/
		ADC_data = ADCL;
		ADC_data |= (ADCH << 8);
	}

	else if(copy_u8Channel == CHANNEL2)
    5ac2:	83 30       	cpi	r24, 0x03	; 3
    5ac4:	49 f4       	brne	.+18     	; 0x5ad8 <ADC_u16GetConversionReading+0x42>
	{
		/*select input channel to pin PA2*/
		CLR_BIT(ADMUX, MUX0);
    5ac6:	38 98       	cbi	0x07, 0	; 7
		SET_BIT(ADMUX, MUX1);
    5ac8:	39 9a       	sbi	0x07, 1	; 7
		CLR_BIT(ADMUX, MUX2);
    5aca:	3a 98       	cbi	0x07, 2	; 7
		CLR_BIT(ADMUX, MUX3);
    5acc:	3b 98       	cbi	0x07, 3	; 7
		CLR_BIT(ADMUX, MUX4);
    5ace:	3c 98       	cbi	0x07, 4	; 7

		/*start conversion:*/
		SET_BIT(ADCSRA, ADSC);
    5ad0:	36 9a       	sbi	0x06, 6	; 6
		/*wait until conversion ended*/
		while(GET_BIT(ADCSRA, ADSC) == 1)
    5ad2:	36 99       	sbic	0x06, 6	; 6
    5ad4:	fe cf       	rjmp	.-4      	; 0x5ad2 <ADC_u16GetConversionReading+0x3c>
    5ad6:	39 c0       	rjmp	.+114    	; 0x5b4a <ADC_u16GetConversionReading+0xb4>
		/*after conversion is finished, read data from ADCL then ADCH*/
		ADC_data = ADCL;
		ADC_data |= (ADCH << 8);
	}

	else if(copy_u8Channel == CHANNEL3)
    5ad8:	84 30       	cpi	r24, 0x04	; 4
    5ada:	49 f4       	brne	.+18     	; 0x5aee <ADC_u16GetConversionReading+0x58>
	{

		/*select input channel to pin PA3*/
		SET_BIT(ADMUX, MUX0);
    5adc:	38 9a       	sbi	0x07, 0	; 7
		SET_BIT(ADMUX, MUX1);
    5ade:	39 9a       	sbi	0x07, 1	; 7
		CLR_BIT(ADMUX, MUX2);
    5ae0:	3a 98       	cbi	0x07, 2	; 7
		CLR_BIT(ADMUX, MUX3);
    5ae2:	3b 98       	cbi	0x07, 3	; 7
		CLR_BIT(ADMUX, MUX4);
    5ae4:	3c 98       	cbi	0x07, 4	; 7

		/*start conversion:*/
		SET_BIT(ADCSRA, ADSC);
    5ae6:	36 9a       	sbi	0x06, 6	; 6
		/*wait until conversion ended*/
		while(GET_BIT(ADCSRA, ADSC) == 1)
    5ae8:	36 99       	sbic	0x06, 6	; 6
    5aea:	fe cf       	rjmp	.-4      	; 0x5ae8 <ADC_u16GetConversionReading+0x52>
    5aec:	2e c0       	rjmp	.+92     	; 0x5b4a <ADC_u16GetConversionReading+0xb4>
		ADC_data = ADCL;
		ADC_data |= (ADCH << 8);

	}

	else if(copy_u8Channel == CHANNEL4)
    5aee:	85 30       	cpi	r24, 0x05	; 5
    5af0:	49 f4       	brne	.+18     	; 0x5b04 <ADC_u16GetConversionReading+0x6e>
	{
		/*select input channel to pin PA4*/
		CLR_BIT(ADMUX, MUX0);
    5af2:	38 98       	cbi	0x07, 0	; 7
		CLR_BIT(ADMUX, MUX1);
    5af4:	39 98       	cbi	0x07, 1	; 7
		SET_BIT(ADMUX, MUX2);
    5af6:	3a 9a       	sbi	0x07, 2	; 7
		CLR_BIT(ADMUX, MUX3);
    5af8:	3b 98       	cbi	0x07, 3	; 7
		CLR_BIT(ADMUX, MUX4);
    5afa:	3c 98       	cbi	0x07, 4	; 7

		/*start conversion:*/
		SET_BIT(ADCSRA, ADSC);
    5afc:	36 9a       	sbi	0x06, 6	; 6
		/*wait until conversion ended*/
		while(GET_BIT(ADCSRA, ADSC) == 1)
    5afe:	36 99       	sbic	0x06, 6	; 6
    5b00:	fe cf       	rjmp	.-4      	; 0x5afe <ADC_u16GetConversionReading+0x68>
    5b02:	23 c0       	rjmp	.+70     	; 0x5b4a <ADC_u16GetConversionReading+0xb4>
		/*after conversion is finished, read data from ADCL then ADCH*/
		ADC_data = ADCL;
		ADC_data |= (ADCH << 8);
	}

	else if(copy_u8Channel == CHANNEL5)
    5b04:	86 30       	cpi	r24, 0x06	; 6
    5b06:	49 f4       	brne	.+18     	; 0x5b1a <ADC_u16GetConversionReading+0x84>
	{

		/*select input channel to pin PA5*/
		SET_BIT(ADMUX, MUX0);
    5b08:	38 9a       	sbi	0x07, 0	; 7
		CLR_BIT(ADMUX, MUX1);
    5b0a:	39 98       	cbi	0x07, 1	; 7
		SET_BIT(ADMUX, MUX2);
    5b0c:	3a 9a       	sbi	0x07, 2	; 7
		CLR_BIT(ADMUX, MUX3);
    5b0e:	3b 98       	cbi	0x07, 3	; 7
		CLR_BIT(ADMUX, MUX4);
    5b10:	3c 98       	cbi	0x07, 4	; 7

		/*start conversion:*/
		SET_BIT(ADCSRA, ADSC);
    5b12:	36 9a       	sbi	0x06, 6	; 6
		/*wait until conversion ended*/
		while(GET_BIT(ADCSRA, ADSC) == 1)
    5b14:	36 99       	sbic	0x06, 6	; 6
    5b16:	fe cf       	rjmp	.-4      	; 0x5b14 <ADC_u16GetConversionReading+0x7e>
    5b18:	18 c0       	rjmp	.+48     	; 0x5b4a <ADC_u16GetConversionReading+0xb4>
		/*after conversion is finished, read data from ADCL then ADCH*/
		ADC_data = ADCL;
		ADC_data |= (ADCH << 8);
	}

	else if(copy_u8Channel == CHANNEL6)
    5b1a:	87 30       	cpi	r24, 0x07	; 7
    5b1c:	49 f4       	brne	.+18     	; 0x5b30 <ADC_u16GetConversionReading+0x9a>
	{

		/*select input channel to pin PA6*/
		CLR_BIT(ADMUX, MUX0);
    5b1e:	38 98       	cbi	0x07, 0	; 7
		SET_BIT(ADMUX, MUX1);
    5b20:	39 9a       	sbi	0x07, 1	; 7
		SET_BIT(ADMUX, MUX2);
    5b22:	3a 9a       	sbi	0x07, 2	; 7
		CLR_BIT(ADMUX, MUX3);
    5b24:	3b 98       	cbi	0x07, 3	; 7
		CLR_BIT(ADMUX, MUX4);
    5b26:	3c 98       	cbi	0x07, 4	; 7

		/*start conversion:*/
		SET_BIT(ADCSRA, ADSC);
    5b28:	36 9a       	sbi	0x06, 6	; 6
		/*wait until conversion ended*/
		while(GET_BIT(ADCSRA, ADSC) == 1)
    5b2a:	36 99       	sbic	0x06, 6	; 6
    5b2c:	fe cf       	rjmp	.-4      	; 0x5b2a <ADC_u16GetConversionReading+0x94>
    5b2e:	0d c0       	rjmp	.+26     	; 0x5b4a <ADC_u16GetConversionReading+0xb4>
		/*after conversion is finished, read data from ADCL then ADCH*/
		ADC_data = ADCL;
		ADC_data |= (ADCH << 8);

	}
	else if(copy_u8Channel == CHANNEL7)
    5b30:	88 30       	cpi	r24, 0x08	; 8
    5b32:	19 f0       	breq	.+6      	; 0x5b3a <ADC_u16GetConversionReading+0xa4>
    5b34:	40 e0       	ldi	r20, 0x00	; 0
    5b36:	50 e0       	ldi	r21, 0x00	; 0
    5b38:	10 c0       	rjmp	.+32     	; 0x5b5a <ADC_u16GetConversionReading+0xc4>
	{

		/*select input channel to pin PA7*/
		SET_BIT(ADMUX, MUX0);
    5b3a:	38 9a       	sbi	0x07, 0	; 7
		SET_BIT(ADMUX, MUX1);
    5b3c:	39 9a       	sbi	0x07, 1	; 7
		SET_BIT(ADMUX, MUX2);
    5b3e:	3a 9a       	sbi	0x07, 2	; 7
		CLR_BIT(ADMUX, MUX3);
    5b40:	3b 98       	cbi	0x07, 3	; 7
		CLR_BIT(ADMUX, MUX4);
    5b42:	3c 98       	cbi	0x07, 4	; 7

		/*start conversion:*/
		SET_BIT(ADCSRA, ADSC);
    5b44:	36 9a       	sbi	0x06, 6	; 6
		/*wait until conversion ended*/
		while(GET_BIT(ADCSRA, ADSC) == 1)
    5b46:	36 99       	sbic	0x06, 6	; 6
    5b48:	fe cf       	rjmp	.-4      	; 0x5b46 <ADC_u16GetConversionReading+0xb0>
		{
			//wait until ADSC bit becomes zero
		}
		/*after conversion is finished, read data from ADCL then ADCH*/
		ADC_data = ADCL;
    5b4a:	84 b1       	in	r24, 0x04	; 4
    5b4c:	48 2f       	mov	r20, r24
    5b4e:	50 e0       	ldi	r21, 0x00	; 0
		ADC_data |= (ADCH << 8);
    5b50:	25 b1       	in	r18, 0x05	; 5
    5b52:	92 2f       	mov	r25, r18
    5b54:	80 e0       	ldi	r24, 0x00	; 0
    5b56:	48 2b       	or	r20, r24
    5b58:	59 2b       	or	r21, r25
	}
	/*return ADC data*/
	return ADC_data;
}
    5b5a:	ca 01       	movw	r24, r20
    5b5c:	08 95       	ret

00005b5e <STEPPER_voidRotate>:

}

void STEPPER_voidRotate(u8 copy_u8Direction)
{
	switch(copy_u8Direction)
    5b5e:	83 30       	cpi	r24, 0x03	; 3
    5b60:	19 f1       	breq	.+70     	; 0x5ba8 <STEPPER_voidRotate+0x4a>
    5b62:	84 30       	cpi	r24, 0x04	; 4
    5b64:	28 f4       	brcc	.+10     	; 0x5b70 <STEPPER_voidRotate+0x12>
    5b66:	81 30       	cpi	r24, 0x01	; 1
    5b68:	f9 f0       	breq	.+62     	; 0x5ba8 <STEPPER_voidRotate+0x4a>
    5b6a:	82 30       	cpi	r24, 0x02	; 2
    5b6c:	30 f5       	brcc	.+76     	; 0x5bba <STEPPER_voidRotate+0x5c>
    5b6e:	09 c0       	rjmp	.+18     	; 0x5b82 <STEPPER_voidRotate+0x24>
    5b70:	86 30       	cpi	r24, 0x06	; 6
    5b72:	89 f1       	breq	.+98     	; 0x5bd6 <STEPPER_voidRotate+0x78>
    5b74:	87 30       	cpi	r24, 0x07	; 7
    5b76:	09 f4       	brne	.+2      	; 0x5b7a <STEPPER_voidRotate+0x1c>
    5b78:	43 c0       	rjmp	.+134    	; 0x5c00 <STEPPER_voidRotate+0xa2>
    5b7a:	84 30       	cpi	r24, 0x04	; 4
    5b7c:	09 f0       	breq	.+2      	; 0x5b80 <STEPPER_voidRotate+0x22>
    5b7e:	54 c0       	rjmp	.+168    	; 0x5c28 <STEPPER_voidRotate+0xca>
    5b80:	1c c0       	rjmp	.+56     	; 0x5bba <STEPPER_voidRotate+0x5c>
	{
	case NORTH:
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_BLUE_PIN,DIO_PIN_HIGH);
    5b82:	80 e0       	ldi	r24, 0x00	; 0
    5b84:	60 e0       	ldi	r22, 0x00	; 0
    5b86:	41 e0       	ldi	r20, 0x01	; 1
    5b88:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_PINK_PIN,DIO_PIN_LOW);
    5b8c:	80 e0       	ldi	r24, 0x00	; 0
    5b8e:	61 e0       	ldi	r22, 0x01	; 1
    5b90:	40 e0       	ldi	r20, 0x00	; 0
    5b92:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_YELLOW_PIN,DIO_PIN_LOW);
    5b96:	80 e0       	ldi	r24, 0x00	; 0
    5b98:	62 e0       	ldi	r22, 0x02	; 2
    5b9a:	40 e0       	ldi	r20, 0x00	; 0
    5b9c:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_ORANGE_PIN,DIO_PIN_HIGH);
    5ba0:	80 e0       	ldi	r24, 0x00	; 0
    5ba2:	63 e0       	ldi	r22, 0x03	; 3
    5ba4:	41 e0       	ldi	r20, 0x01	; 1
    5ba6:	29 c0       	rjmp	.+82     	; 0x5bfa <STEPPER_voidRotate+0x9c>
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_PINK_PIN,DIO_PIN_HIGH);
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_YELLOW_PIN,DIO_PIN_HIGH);
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_ORANGE_PIN,DIO_PIN_LOW);
		break;
	case EASTERN_SOUTH:
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_BLUE_PIN,DIO_PIN_LOW);
    5ba8:	80 e0       	ldi	r24, 0x00	; 0
    5baa:	60 e0       	ldi	r22, 0x00	; 0
    5bac:	40 e0       	ldi	r20, 0x00	; 0
    5bae:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_PINK_PIN,DIO_PIN_LOW);
    5bb2:	80 e0       	ldi	r24, 0x00	; 0
    5bb4:	61 e0       	ldi	r22, 0x01	; 1
    5bb6:	40 e0       	ldi	r20, 0x00	; 0
    5bb8:	08 c0       	rjmp	.+16     	; 0x5bca <STEPPER_voidRotate+0x6c>
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_YELLOW_PIN,DIO_PIN_HIGH);
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_ORANGE_PIN,DIO_PIN_LOW);
		break;
	case SOUTH:
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_BLUE_PIN,DIO_PIN_LOW);
    5bba:	80 e0       	ldi	r24, 0x00	; 0
    5bbc:	60 e0       	ldi	r22, 0x00	; 0
    5bbe:	40 e0       	ldi	r20, 0x00	; 0
    5bc0:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_PINK_PIN,DIO_PIN_HIGH);
    5bc4:	80 e0       	ldi	r24, 0x00	; 0
    5bc6:	61 e0       	ldi	r22, 0x01	; 1
    5bc8:	41 e0       	ldi	r20, 0x01	; 1
    5bca:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_YELLOW_PIN,DIO_PIN_HIGH);
    5bce:	80 e0       	ldi	r24, 0x00	; 0
    5bd0:	62 e0       	ldi	r22, 0x02	; 2
    5bd2:	41 e0       	ldi	r20, 0x01	; 1
    5bd4:	0d c0       	rjmp	.+26     	; 0x5bf0 <STEPPER_voidRotate+0x92>
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_ORANGE_PIN,DIO_PIN_LOW);
		break;
	case WESTERN_SOUTH:
		break;
	case WEST:
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_BLUE_PIN,DIO_PIN_HIGH);
    5bd6:	80 e0       	ldi	r24, 0x00	; 0
    5bd8:	60 e0       	ldi	r22, 0x00	; 0
    5bda:	41 e0       	ldi	r20, 0x01	; 1
    5bdc:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_PINK_PIN,DIO_PIN_HIGH);
    5be0:	80 e0       	ldi	r24, 0x00	; 0
    5be2:	61 e0       	ldi	r22, 0x01	; 1
    5be4:	41 e0       	ldi	r20, 0x01	; 1
    5be6:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_YELLOW_PIN,DIO_PIN_LOW);
    5bea:	80 e0       	ldi	r24, 0x00	; 0
    5bec:	62 e0       	ldi	r22, 0x02	; 2
    5bee:	40 e0       	ldi	r20, 0x00	; 0
    5bf0:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_ORANGE_PIN,DIO_PIN_LOW);
    5bf4:	80 e0       	ldi	r24, 0x00	; 0
    5bf6:	63 e0       	ldi	r22, 0x03	; 3
    5bf8:	40 e0       	ldi	r20, 0x00	; 0
    5bfa:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
    5bfe:	08 95       	ret
		break;
	case WESTERN_NORTH:
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_BLUE_PIN,DIO_PIN_HIGH);
    5c00:	80 e0       	ldi	r24, 0x00	; 0
    5c02:	60 e0       	ldi	r22, 0x00	; 0
    5c04:	41 e0       	ldi	r20, 0x01	; 1
    5c06:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_PINK_PIN,DIO_PIN_LOW);
    5c0a:	80 e0       	ldi	r24, 0x00	; 0
    5c0c:	61 e0       	ldi	r22, 0x01	; 1
    5c0e:	40 e0       	ldi	r20, 0x00	; 0
    5c10:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_YELLOW_PIN,DIO_PIN_LOW);
    5c14:	80 e0       	ldi	r24, 0x00	; 0
    5c16:	62 e0       	ldi	r22, 0x02	; 2
    5c18:	40 e0       	ldi	r20, 0x00	; 0
    5c1a:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
		DIO_u8SetPinValue(STEPPER_PORT,STEPPER_ORANGE_PIN,DIO_PIN_LOW);
    5c1e:	80 e0       	ldi	r24, 0x00	; 0
    5c20:	63 e0       	ldi	r22, 0x03	; 3
    5c22:	40 e0       	ldi	r20, 0x00	; 0
    5c24:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
    5c28:	08 95       	ret

00005c2a <STEPPER_voidInit>:
#include "avr/delay.h"

/*********FUNCTIONS DEFINITION****/
void STEPPER_voidInit(void)
{
	DIO_u8SetPinDirection(STEPPER_PORT,STEPPER_BLUE_PIN,DIO_PIN_OUTPUT);
    5c2a:	80 e0       	ldi	r24, 0x00	; 0
    5c2c:	60 e0       	ldi	r22, 0x00	; 0
    5c2e:	41 e0       	ldi	r20, 0x01	; 1
    5c30:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection(STEPPER_PORT,STEPPER_PINK_PIN,DIO_PIN_OUTPUT);
    5c34:	80 e0       	ldi	r24, 0x00	; 0
    5c36:	61 e0       	ldi	r22, 0x01	; 1
    5c38:	41 e0       	ldi	r20, 0x01	; 1
    5c3a:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection(STEPPER_PORT,STEPPER_YELLOW_PIN,DIO_PIN_OUTPUT);
    5c3e:	80 e0       	ldi	r24, 0x00	; 0
    5c40:	62 e0       	ldi	r22, 0x02	; 2
    5c42:	41 e0       	ldi	r20, 0x01	; 1
    5c44:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection(STEPPER_PORT,STEPPER_ORANGE_PIN,DIO_PIN_OUTPUT);
    5c48:	80 e0       	ldi	r24, 0x00	; 0
    5c4a:	63 e0       	ldi	r22, 0x03	; 3
    5c4c:	41 e0       	ldi	r20, 0x01	; 1
    5c4e:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <DIO_u8SetPinDirection>



}
    5c52:	08 95       	ret

00005c54 <LM35_u16GetTempReading>:
{
	u16 Local_u16TempValueDigital = 0;
	u16 Local_u16TempValueAnalog = 0;

	/*ADC conversion*/
	Local_u16TempValueDigital = ADC_u16GetConversionReading(u8_LMChannel);
    5c54:	0e 94 4b 2d 	call	0x5a96	; 0x5a96 <ADC_u16GetConversionReading>
    5c58:	a0 e0       	ldi	r26, 0x00	; 0
    5c5a:	b0 e0       	ldi	r27, 0x00	; 0
    5c5c:	bc 01       	movw	r22, r24
    5c5e:	cd 01       	movw	r24, r26
    5c60:	0e 94 70 22 	call	0x44e0	; 0x44e0 <__floatunsisf>
    5c64:	20 e0       	ldi	r18, 0x00	; 0
    5c66:	30 e0       	ldi	r19, 0x00	; 0
    5c68:	40 e8       	ldi	r20, 0x80	; 128
    5c6a:	5e e3       	ldi	r21, 0x3E	; 62
    5c6c:	0e 94 e8 1f 	call	0x3fd0	; 0x3fd0 <__mulsf3>
    5c70:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>

#endif


	return Local_u16TempValueAnalog;
}
    5c74:	cb 01       	movw	r24, r22
    5c76:	08 95       	ret

00005c78 <LM35_voidInit>:

/***********FUNCTIONS DEFINITIONS*********/

void LM35_voidInit(void)
{
	ADC_voidInit();
    5c78:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <ADC_voidInit>
}
    5c7c:	08 95       	ret

00005c7e <LCD_voidSendData>:
	DIO_u8SetPinValue(LCD_CTRL_PORT,LCD_EN_PIN,DIO_PIN_LOW);

}

void LCD_voidSendData(u8 copy_u8Data)
{
    5c7e:	1f 93       	push	r17
    5c80:	18 2f       	mov	r17, r24
	/*Set the RS pin to be low*/
	DIO_u8SetPinValue(LCD_CTRL_PORT,LCD_RS_PIN,DIO_PIN_HIGH);
    5c82:	83 e0       	ldi	r24, 0x03	; 3
    5c84:	67 e0       	ldi	r22, 0x07	; 7
    5c86:	41 e0       	ldi	r20, 0x01	; 1
    5c88:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>

	/*Set the RW pin to be low*/
	DIO_u8SetPinValue(LCD_CTRL_PORT,LCD_RW_PIN,DIO_PIN_LOW);
    5c8c:	83 e0       	ldi	r24, 0x03	; 3
    5c8e:	66 e0       	ldi	r22, 0x06	; 6
    5c90:	40 e0       	ldi	r20, 0x00	; 0
    5c92:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>

#if LCD_MODE == LCD_EIGHT_BIT
	DIO_u8SetPortValue(LCD_DATA_PORT,copy_u8Data);
    5c96:	82 e0       	ldi	r24, 0x02	; 2
    5c98:	61 2f       	mov	r22, r17
    5c9a:	0e 94 28 2b 	call	0x5650	; 0x5650 <DIO_u8SetPortValue>
#else
#error "Wrong LCD_MODE Configuration parameter"
#endif

	/*set the EN pin to high: 1 to read, waiting 2 msec and then make it low again*/
	DIO_u8SetPinValue(LCD_CTRL_PORT,LCD_EN_PIN,DIO_PIN_HIGH);
    5c9e:	83 e0       	ldi	r24, 0x03	; 3
    5ca0:	65 e0       	ldi	r22, 0x05	; 5
    5ca2:	41 e0       	ldi	r20, 0x01	; 1
    5ca4:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    5ca8:	80 ea       	ldi	r24, 0xA0	; 160
    5caa:	9f e0       	ldi	r25, 0x0F	; 15
    5cac:	01 97       	sbiw	r24, 0x01	; 1
    5cae:	f1 f7       	brne	.-4      	; 0x5cac <LCD_voidSendData+0x2e>

	/*Wait 2 msec*/
	_delay_ms(2);
	DIO_u8SetPinValue(LCD_CTRL_PORT,LCD_EN_PIN,DIO_PIN_LOW);
    5cb0:	83 e0       	ldi	r24, 0x03	; 3
    5cb2:	65 e0       	ldi	r22, 0x05	; 5
    5cb4:	40 e0       	ldi	r20, 0x00	; 0
    5cb6:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>

}
    5cba:	1f 91       	pop	r17
    5cbc:	08 95       	ret

00005cbe <LCD_voidSendNumber>:
	SET_BIT(Local_u8Address,7);
	LCD_voidSendCommand(Local_u8Address);
}

void LCD_voidSendNumber(s64 copy_s32Number)
{
    5cbe:	2f 92       	push	r2
    5cc0:	3f 92       	push	r3
    5cc2:	4f 92       	push	r4
    5cc4:	5f 92       	push	r5
    5cc6:	6f 92       	push	r6
    5cc8:	7f 92       	push	r7
    5cca:	8f 92       	push	r8
    5ccc:	9f 92       	push	r9
    5cce:	af 92       	push	r10
    5cd0:	bf 92       	push	r11
    5cd2:	cf 92       	push	r12
    5cd4:	df 92       	push	r13
    5cd6:	ef 92       	push	r14
    5cd8:	ff 92       	push	r15
    5cda:	0f 93       	push	r16
    5cdc:	1f 93       	push	r17
    5cde:	df 93       	push	r29
    5ce0:	cf 93       	push	r28
    5ce2:	cd b7       	in	r28, 0x3d	; 61
    5ce4:	de b7       	in	r29, 0x3e	; 62
    5ce6:	29 97       	sbiw	r28, 0x09	; 9
    5ce8:	0f b6       	in	r0, 0x3f	; 63
    5cea:	f8 94       	cli
    5cec:	de bf       	out	0x3e, r29	; 62
    5cee:	0f be       	out	0x3f, r0	; 63
    5cf0:	cd bf       	out	0x3d, r28	; 61
    5cf2:	2a 83       	std	Y+2, r18	; 0x02
    5cf4:	3b 83       	std	Y+3, r19	; 0x03
    5cf6:	4c 83       	std	Y+4, r20	; 0x04
    5cf8:	5d 83       	std	Y+5, r21	; 0x05
    5cfa:	6e 83       	std	Y+6, r22	; 0x06
    5cfc:	7f 83       	std	Y+7, r23	; 0x07
    5cfe:	88 87       	std	Y+8, r24	; 0x08
    5d00:	99 87       	std	Y+9, r25	; 0x09
	u64 reversed = 1;
	if (copy_s32Number == 0)
    5d02:	82 2f       	mov	r24, r18
    5d04:	83 2b       	or	r24, r19
    5d06:	84 2b       	or	r24, r20
    5d08:	85 2b       	or	r24, r21
    5d0a:	86 2b       	or	r24, r22
    5d0c:	87 2b       	or	r24, r23
    5d0e:	98 85       	ldd	r25, Y+8	; 0x08
    5d10:	89 2b       	or	r24, r25
    5d12:	e9 85       	ldd	r30, Y+9	; 0x09
    5d14:	8e 2b       	or	r24, r30
    5d16:	11 f4       	brne	.+4      	; 0x5d1c <LCD_voidSendNumber+0x5e>
	{
		LCD_voidSendData('0');
    5d18:	80 e3       	ldi	r24, 0x30	; 48
    5d1a:	0e c0       	rjmp	.+28     	; 0x5d38 <LCD_voidSendNumber+0x7a>
	}
	else
	{
		if(copy_s32Number <0)
    5d1c:	f9 85       	ldd	r31, Y+9	; 0x09
    5d1e:	f7 fd       	sbrc	r31, 7
    5d20:	0a c0       	rjmp	.+20     	; 0x5d36 <LCD_voidSendNumber+0x78>
		{
			LCD_voidSendData('-');
    5d22:	22 24       	eor	r2, r2
    5d24:	23 94       	inc	r2
    5d26:	33 24       	eor	r3, r3
    5d28:	44 24       	eor	r4, r4
    5d2a:	55 24       	eor	r5, r5
    5d2c:	66 24       	eor	r6, r6
    5d2e:	77 24       	eor	r7, r7
    5d30:	88 24       	eor	r8, r8
    5d32:	99 24       	eor	r9, r9
    5d34:	04 c0       	rjmp	.+8      	; 0x5d3e <LCD_voidSendNumber+0x80>
    5d36:	8d e2       	ldi	r24, 0x2D	; 45
    5d38:	0e 94 3f 2e 	call	0x5c7e	; 0x5c7e <LCD_voidSendData>
    5d3c:	29 c1       	rjmp	.+594    	; 0x5f90 <LCD_voidSendNumber+0x2d2>
		}
		else
		{
			while(copy_s32Number!= 0)
			{
				reversed = (reversed*10) + (copy_s32Number%10);
    5d3e:	91 01       	movw	r18, r2
    5d40:	a2 01       	movw	r20, r4
    5d42:	b3 01       	movw	r22, r6
    5d44:	c4 01       	movw	r24, r8
    5d46:	01 e0       	ldi	r16, 0x01	; 1
    5d48:	0e 94 49 00 	call	0x92	; 0x92 <__ashldi3>
    5d4c:	12 2f       	mov	r17, r18
    5d4e:	f3 2e       	mov	r15, r19
    5d50:	e4 2e       	mov	r14, r20
    5d52:	d5 2e       	mov	r13, r21
    5d54:	c6 2e       	mov	r12, r22
    5d56:	b7 2e       	mov	r11, r23
    5d58:	a8 2e       	mov	r10, r24
    5d5a:	89 2e       	mov	r8, r25
    5d5c:	02 e0       	ldi	r16, 0x02	; 2
    5d5e:	0e 94 49 00 	call	0x92	; 0x92 <__ashldi3>
    5d62:	92 2e       	mov	r9, r18
    5d64:	91 0e       	add	r9, r17
    5d66:	21 e0       	ldi	r18, 0x01	; 1
    5d68:	91 16       	cp	r9, r17
    5d6a:	08 f0       	brcs	.+2      	; 0x5d6e <LCD_voidSendNumber+0xb0>
    5d6c:	20 e0       	ldi	r18, 0x00	; 0
    5d6e:	3f 0d       	add	r19, r15
    5d70:	e1 e0       	ldi	r30, 0x01	; 1
    5d72:	3f 15       	cp	r19, r15
    5d74:	08 f0       	brcs	.+2      	; 0x5d78 <LCD_voidSendNumber+0xba>
    5d76:	e0 e0       	ldi	r30, 0x00	; 0
    5d78:	72 2e       	mov	r7, r18
    5d7a:	73 0e       	add	r7, r19
    5d7c:	21 e0       	ldi	r18, 0x01	; 1
    5d7e:	73 16       	cp	r7, r19
    5d80:	08 f0       	brcs	.+2      	; 0x5d84 <LCD_voidSendNumber+0xc6>
    5d82:	20 e0       	ldi	r18, 0x00	; 0
    5d84:	e2 2b       	or	r30, r18
    5d86:	4e 0d       	add	r20, r14
    5d88:	31 e0       	ldi	r19, 0x01	; 1
    5d8a:	4e 15       	cp	r20, r14
    5d8c:	08 f0       	brcs	.+2      	; 0x5d90 <LCD_voidSendNumber+0xd2>
    5d8e:	30 e0       	ldi	r19, 0x00	; 0
    5d90:	6e 2e       	mov	r6, r30
    5d92:	64 0e       	add	r6, r20
    5d94:	21 e0       	ldi	r18, 0x01	; 1
    5d96:	64 16       	cp	r6, r20
    5d98:	08 f0       	brcs	.+2      	; 0x5d9c <LCD_voidSendNumber+0xde>
    5d9a:	20 e0       	ldi	r18, 0x00	; 0
    5d9c:	32 2b       	or	r19, r18
    5d9e:	5d 0d       	add	r21, r13
    5da0:	41 e0       	ldi	r20, 0x01	; 1
    5da2:	5d 15       	cp	r21, r13
    5da4:	08 f0       	brcs	.+2      	; 0x5da8 <LCD_voidSendNumber+0xea>
    5da6:	40 e0       	ldi	r20, 0x00	; 0
    5da8:	53 2e       	mov	r5, r19
    5daa:	55 0e       	add	r5, r21
    5dac:	21 e0       	ldi	r18, 0x01	; 1
    5dae:	55 16       	cp	r5, r21
    5db0:	08 f0       	brcs	.+2      	; 0x5db4 <LCD_voidSendNumber+0xf6>
    5db2:	20 e0       	ldi	r18, 0x00	; 0
    5db4:	42 2b       	or	r20, r18
    5db6:	6c 0d       	add	r22, r12
    5db8:	31 e0       	ldi	r19, 0x01	; 1
    5dba:	6c 15       	cp	r22, r12
    5dbc:	08 f0       	brcs	.+2      	; 0x5dc0 <LCD_voidSendNumber+0x102>
    5dbe:	30 e0       	ldi	r19, 0x00	; 0
    5dc0:	44 2e       	mov	r4, r20
    5dc2:	46 0e       	add	r4, r22
    5dc4:	21 e0       	ldi	r18, 0x01	; 1
    5dc6:	46 16       	cp	r4, r22
    5dc8:	08 f0       	brcs	.+2      	; 0x5dcc <LCD_voidSendNumber+0x10e>
    5dca:	20 e0       	ldi	r18, 0x00	; 0
    5dcc:	32 2b       	or	r19, r18
    5dce:	7b 0d       	add	r23, r11
    5dd0:	41 e0       	ldi	r20, 0x01	; 1
    5dd2:	7b 15       	cp	r23, r11
    5dd4:	08 f0       	brcs	.+2      	; 0x5dd8 <LCD_voidSendNumber+0x11a>
    5dd6:	40 e0       	ldi	r20, 0x00	; 0
    5dd8:	33 2e       	mov	r3, r19
    5dda:	37 0e       	add	r3, r23
    5ddc:	21 e0       	ldi	r18, 0x01	; 1
    5dde:	37 16       	cp	r3, r23
    5de0:	08 f0       	brcs	.+2      	; 0x5de4 <LCD_voidSendNumber+0x126>
    5de2:	20 e0       	ldi	r18, 0x00	; 0
    5de4:	42 2b       	or	r20, r18
    5de6:	8a 0d       	add	r24, r10
    5de8:	31 e0       	ldi	r19, 0x01	; 1
    5dea:	8a 15       	cp	r24, r10
    5dec:	08 f0       	brcs	.+2      	; 0x5df0 <LCD_voidSendNumber+0x132>
    5dee:	30 e0       	ldi	r19, 0x00	; 0
    5df0:	24 2e       	mov	r2, r20
    5df2:	28 0e       	add	r2, r24
    5df4:	21 e0       	ldi	r18, 0x01	; 1
    5df6:	28 16       	cp	r2, r24
    5df8:	08 f0       	brcs	.+2      	; 0x5dfc <LCD_voidSendNumber+0x13e>
    5dfa:	20 e0       	ldi	r18, 0x00	; 0
    5dfc:	32 2b       	or	r19, r18
    5dfe:	98 0d       	add	r25, r8
    5e00:	83 2f       	mov	r24, r19
    5e02:	89 0f       	add	r24, r25
    5e04:	89 83       	std	Y+1, r24	; 0x01
    5e06:	2a 81       	ldd	r18, Y+2	; 0x02
    5e08:	3b 81       	ldd	r19, Y+3	; 0x03
    5e0a:	4c 81       	ldd	r20, Y+4	; 0x04
    5e0c:	5d 81       	ldd	r21, Y+5	; 0x05
    5e0e:	6e 81       	ldd	r22, Y+6	; 0x06
    5e10:	7f 81       	ldd	r23, Y+7	; 0x07
    5e12:	88 85       	ldd	r24, Y+8	; 0x08
    5e14:	99 85       	ldd	r25, Y+9	; 0x09
    5e16:	aa e0       	ldi	r26, 0x0A	; 10
    5e18:	aa 2e       	mov	r10, r26
    5e1a:	bb 24       	eor	r11, r11
    5e1c:	cc 24       	eor	r12, r12
    5e1e:	dd 24       	eor	r13, r13
    5e20:	ee 24       	eor	r14, r14
    5e22:	ff 24       	eor	r15, r15
    5e24:	00 e0       	ldi	r16, 0x00	; 0
    5e26:	10 e0       	ldi	r17, 0x00	; 0
    5e28:	0e 94 1c 09 	call	0x1238	; 0x1238 <__moddi3>
    5e2c:	12 2f       	mov	r17, r18
    5e2e:	19 0d       	add	r17, r9
    5e30:	f1 e0       	ldi	r31, 0x01	; 1
    5e32:	12 17       	cp	r17, r18
    5e34:	08 f0       	brcs	.+2      	; 0x5e38 <LCD_voidSendNumber+0x17a>
    5e36:	f0 e0       	ldi	r31, 0x00	; 0
    5e38:	23 2f       	mov	r18, r19
    5e3a:	27 0d       	add	r18, r7
    5e3c:	e1 e0       	ldi	r30, 0x01	; 1
    5e3e:	23 17       	cp	r18, r19
    5e40:	08 f0       	brcs	.+2      	; 0x5e44 <LCD_voidSendNumber+0x186>
    5e42:	e0 e0       	ldi	r30, 0x00	; 0
    5e44:	bf 2f       	mov	r27, r31
    5e46:	b2 0f       	add	r27, r18
    5e48:	31 e0       	ldi	r19, 0x01	; 1
    5e4a:	b2 17       	cp	r27, r18
    5e4c:	08 f0       	brcs	.+2      	; 0x5e50 <LCD_voidSendNumber+0x192>
    5e4e:	30 e0       	ldi	r19, 0x00	; 0
    5e50:	e3 2b       	or	r30, r19
    5e52:	24 2f       	mov	r18, r20
    5e54:	26 0d       	add	r18, r6
    5e56:	f1 e0       	ldi	r31, 0x01	; 1
    5e58:	24 17       	cp	r18, r20
    5e5a:	08 f0       	brcs	.+2      	; 0x5e5e <LCD_voidSendNumber+0x1a0>
    5e5c:	f0 e0       	ldi	r31, 0x00	; 0
    5e5e:	ae 2f       	mov	r26, r30
    5e60:	a2 0f       	add	r26, r18
    5e62:	31 e0       	ldi	r19, 0x01	; 1
    5e64:	a2 17       	cp	r26, r18
    5e66:	08 f0       	brcs	.+2      	; 0x5e6a <LCD_voidSendNumber+0x1ac>
    5e68:	30 e0       	ldi	r19, 0x00	; 0
    5e6a:	f3 2b       	or	r31, r19
    5e6c:	25 2f       	mov	r18, r21
    5e6e:	25 0d       	add	r18, r5
    5e70:	41 e0       	ldi	r20, 0x01	; 1
    5e72:	25 17       	cp	r18, r21
    5e74:	08 f0       	brcs	.+2      	; 0x5e78 <LCD_voidSendNumber+0x1ba>
    5e76:	40 e0       	ldi	r20, 0x00	; 0
    5e78:	0f 2f       	mov	r16, r31
    5e7a:	02 0f       	add	r16, r18
    5e7c:	31 e0       	ldi	r19, 0x01	; 1
    5e7e:	02 17       	cp	r16, r18
    5e80:	08 f0       	brcs	.+2      	; 0x5e84 <LCD_voidSendNumber+0x1c6>
    5e82:	30 e0       	ldi	r19, 0x00	; 0
    5e84:	43 2b       	or	r20, r19
    5e86:	26 2f       	mov	r18, r22
    5e88:	24 0d       	add	r18, r4
    5e8a:	51 e0       	ldi	r21, 0x01	; 1
    5e8c:	26 17       	cp	r18, r22
    5e8e:	08 f0       	brcs	.+2      	; 0x5e92 <LCD_voidSendNumber+0x1d4>
    5e90:	50 e0       	ldi	r21, 0x00	; 0
    5e92:	64 2f       	mov	r22, r20
    5e94:	62 0f       	add	r22, r18
    5e96:	31 e0       	ldi	r19, 0x01	; 1
    5e98:	62 17       	cp	r22, r18
    5e9a:	08 f0       	brcs	.+2      	; 0x5e9e <LCD_voidSendNumber+0x1e0>
    5e9c:	30 e0       	ldi	r19, 0x00	; 0
    5e9e:	53 2b       	or	r21, r19
    5ea0:	27 2f       	mov	r18, r23
    5ea2:	23 0d       	add	r18, r3
    5ea4:	41 e0       	ldi	r20, 0x01	; 1
    5ea6:	27 17       	cp	r18, r23
    5ea8:	08 f0       	brcs	.+2      	; 0x5eac <LCD_voidSendNumber+0x1ee>
    5eaa:	40 e0       	ldi	r20, 0x00	; 0
    5eac:	52 0f       	add	r21, r18
    5eae:	31 e0       	ldi	r19, 0x01	; 1
    5eb0:	52 17       	cp	r21, r18
    5eb2:	08 f0       	brcs	.+2      	; 0x5eb6 <LCD_voidSendNumber+0x1f8>
    5eb4:	30 e0       	ldi	r19, 0x00	; 0
    5eb6:	43 2b       	or	r20, r19
    5eb8:	28 2f       	mov	r18, r24
    5eba:	22 0d       	add	r18, r2
    5ebc:	31 e0       	ldi	r19, 0x01	; 1
    5ebe:	28 17       	cp	r18, r24
    5ec0:	08 f0       	brcs	.+2      	; 0x5ec4 <LCD_voidSendNumber+0x206>
    5ec2:	30 e0       	ldi	r19, 0x00	; 0
    5ec4:	42 0f       	add	r20, r18
    5ec6:	81 e0       	ldi	r24, 0x01	; 1
    5ec8:	42 17       	cp	r20, r18
    5eca:	08 f0       	brcs	.+2      	; 0x5ece <LCD_voidSendNumber+0x210>
    5ecc:	80 e0       	ldi	r24, 0x00	; 0
    5ece:	38 2b       	or	r19, r24
    5ed0:	e9 81       	ldd	r30, Y+1	; 0x01
    5ed2:	e9 0f       	add	r30, r25
    5ed4:	21 2e       	mov	r2, r17
    5ed6:	3b 2e       	mov	r3, r27
    5ed8:	4a 2e       	mov	r4, r26
    5eda:	50 2e       	mov	r5, r16
    5edc:	66 2e       	mov	r6, r22
    5ede:	75 2e       	mov	r7, r21
    5ee0:	84 2e       	mov	r8, r20
    5ee2:	9e 2e       	mov	r9, r30
    5ee4:	93 0e       	add	r9, r19
				copy_s32Number/=10;
    5ee6:	2a 81       	ldd	r18, Y+2	; 0x02
    5ee8:	3b 81       	ldd	r19, Y+3	; 0x03
    5eea:	4c 81       	ldd	r20, Y+4	; 0x04
    5eec:	5d 81       	ldd	r21, Y+5	; 0x05
    5eee:	6e 81       	ldd	r22, Y+6	; 0x06
    5ef0:	7f 81       	ldd	r23, Y+7	; 0x07
    5ef2:	88 85       	ldd	r24, Y+8	; 0x08
    5ef4:	99 85       	ldd	r25, Y+9	; 0x09
    5ef6:	fa e0       	ldi	r31, 0x0A	; 10
    5ef8:	af 2e       	mov	r10, r31
    5efa:	bb 24       	eor	r11, r11
    5efc:	cc 24       	eor	r12, r12
    5efe:	dd 24       	eor	r13, r13
    5f00:	ee 24       	eor	r14, r14
    5f02:	ff 24       	eor	r15, r15
    5f04:	00 e0       	ldi	r16, 0x00	; 0
    5f06:	10 e0       	ldi	r17, 0x00	; 0
    5f08:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <__divdi3>
    5f0c:	2a 83       	std	Y+2, r18	; 0x02
    5f0e:	3b 83       	std	Y+3, r19	; 0x03
    5f10:	4c 83       	std	Y+4, r20	; 0x04
    5f12:	5d 83       	std	Y+5, r21	; 0x05
    5f14:	6e 83       	std	Y+6, r22	; 0x06
    5f16:	7f 83       	std	Y+7, r23	; 0x07
    5f18:	88 87       	std	Y+8, r24	; 0x08
    5f1a:	99 87       	std	Y+9, r25	; 0x09
			LCD_voidSendData('-');
			copy_s32Number *=-1;
		}
		else
		{
			while(copy_s32Number!= 0)
    5f1c:	82 2f       	mov	r24, r18
    5f1e:	83 2b       	or	r24, r19
    5f20:	84 2b       	or	r24, r20
    5f22:	85 2b       	or	r24, r21
    5f24:	86 2b       	or	r24, r22
    5f26:	87 2b       	or	r24, r23
    5f28:	f8 85       	ldd	r31, Y+8	; 0x08
    5f2a:	8f 2b       	or	r24, r31
    5f2c:	89 2b       	or	r24, r25
    5f2e:	09 f0       	breq	.+2      	; 0x5f32 <LCD_voidSendNumber+0x274>
    5f30:	06 cf       	rjmp	.-500    	; 0x5d3e <LCD_voidSendNumber+0x80>
    5f32:	1d c0       	rjmp	.+58     	; 0x5f6e <LCD_voidSendNumber+0x2b0>
				reversed = (reversed*10) + (copy_s32Number%10);
				copy_s32Number/=10;
			}
			while(reversed != 1)
			{
				LCD_voidSendData(reversed%10 +'0');
    5f34:	91 01       	movw	r18, r2
    5f36:	a2 01       	movw	r20, r4
    5f38:	b3 01       	movw	r22, r6
    5f3a:	c4 01       	movw	r24, r8
    5f3c:	ea e0       	ldi	r30, 0x0A	; 10
    5f3e:	ae 2e       	mov	r10, r30
    5f40:	bb 24       	eor	r11, r11
    5f42:	cc 24       	eor	r12, r12
    5f44:	dd 24       	eor	r13, r13
    5f46:	ee 24       	eor	r14, r14
    5f48:	ff 24       	eor	r15, r15
    5f4a:	00 e0       	ldi	r16, 0x00	; 0
    5f4c:	10 e0       	ldi	r17, 0x00	; 0
    5f4e:	0e 94 ce 17 	call	0x2f9c	; 0x2f9c <__umoddi3>
    5f52:	82 2f       	mov	r24, r18
    5f54:	80 5d       	subi	r24, 0xD0	; 208
    5f56:	0e 94 3f 2e 	call	0x5c7e	; 0x5c7e <LCD_voidSendData>
				reversed/=10;
    5f5a:	91 01       	movw	r18, r2
    5f5c:	a2 01       	movw	r20, r4
    5f5e:	b3 01       	movw	r22, r6
    5f60:	c4 01       	movw	r24, r8
    5f62:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__udivdi3>
    5f66:	19 01       	movw	r2, r18
    5f68:	2a 01       	movw	r4, r20
    5f6a:	3b 01       	movw	r6, r22
    5f6c:	4c 01       	movw	r8, r24
			while(copy_s32Number!= 0)
			{
				reversed = (reversed*10) + (copy_s32Number%10);
				copy_s32Number/=10;
			}
			while(reversed != 1)
    5f6e:	81 e0       	ldi	r24, 0x01	; 1
    5f70:	28 16       	cp	r2, r24
    5f72:	01 f7       	brne	.-64     	; 0x5f34 <LCD_voidSendNumber+0x276>
    5f74:	33 20       	and	r3, r3
    5f76:	f1 f6       	brne	.-68     	; 0x5f34 <LCD_voidSendNumber+0x276>
    5f78:	44 20       	and	r4, r4
    5f7a:	e1 f6       	brne	.-72     	; 0x5f34 <LCD_voidSendNumber+0x276>
    5f7c:	55 20       	and	r5, r5
    5f7e:	d1 f6       	brne	.-76     	; 0x5f34 <LCD_voidSendNumber+0x276>
    5f80:	66 20       	and	r6, r6
    5f82:	c1 f6       	brne	.-80     	; 0x5f34 <LCD_voidSendNumber+0x276>
    5f84:	77 20       	and	r7, r7
    5f86:	b1 f6       	brne	.-84     	; 0x5f34 <LCD_voidSendNumber+0x276>
    5f88:	88 20       	and	r8, r8
    5f8a:	a1 f6       	brne	.-88     	; 0x5f34 <LCD_voidSendNumber+0x276>
    5f8c:	99 20       	and	r9, r9
    5f8e:	91 f6       	brne	.-92     	; 0x5f34 <LCD_voidSendNumber+0x276>
				LCD_voidSendData(reversed%10 +'0');
				reversed/=10;
			}
		}
	}
}
    5f90:	29 96       	adiw	r28, 0x09	; 9
    5f92:	0f b6       	in	r0, 0x3f	; 63
    5f94:	f8 94       	cli
    5f96:	de bf       	out	0x3e, r29	; 62
    5f98:	0f be       	out	0x3f, r0	; 63
    5f9a:	cd bf       	out	0x3d, r28	; 61
    5f9c:	cf 91       	pop	r28
    5f9e:	df 91       	pop	r29
    5fa0:	1f 91       	pop	r17
    5fa2:	0f 91       	pop	r16
    5fa4:	ff 90       	pop	r15
    5fa6:	ef 90       	pop	r14
    5fa8:	df 90       	pop	r13
    5faa:	cf 90       	pop	r12
    5fac:	bf 90       	pop	r11
    5fae:	af 90       	pop	r10
    5fb0:	9f 90       	pop	r9
    5fb2:	8f 90       	pop	r8
    5fb4:	7f 90       	pop	r7
    5fb6:	6f 90       	pop	r6
    5fb8:	5f 90       	pop	r5
    5fba:	4f 90       	pop	r4
    5fbc:	3f 90       	pop	r3
    5fbe:	2f 90       	pop	r2
    5fc0:	08 95       	ret

00005fc2 <LCD_voidSendString>:
	DIO_u8SetPinValue(LCD_CTRL_PORT,LCD_EN_PIN,DIO_PIN_LOW);

}

void LCD_voidSendString(const u8* copy_pu8String)
{
    5fc2:	1f 93       	push	r17
    5fc4:	cf 93       	push	r28
    5fc6:	df 93       	push	r29
    5fc8:	ec 01       	movw	r28, r24
    5fca:	10 e0       	ldi	r17, 0x00	; 0
    5fcc:	03 c0       	rjmp	.+6      	; 0x5fd4 <LCD_voidSendString+0x12>
	for(u8 local_u8Iterator = 0; copy_pu8String[local_u8Iterator] != '\0';local_u8Iterator++)
	{
		LCD_voidSendData(copy_pu8String[local_u8Iterator]);
    5fce:	0e 94 3f 2e 	call	0x5c7e	; 0x5c7e <LCD_voidSendData>

}

void LCD_voidSendString(const u8* copy_pu8String)
{
	for(u8 local_u8Iterator = 0; copy_pu8String[local_u8Iterator] != '\0';local_u8Iterator++)
    5fd2:	1f 5f       	subi	r17, 0xFF	; 255
    5fd4:	fe 01       	movw	r30, r28
    5fd6:	e1 0f       	add	r30, r17
    5fd8:	f1 1d       	adc	r31, r1
    5fda:	80 81       	ld	r24, Z
    5fdc:	88 23       	and	r24, r24
    5fde:	b9 f7       	brne	.-18     	; 0x5fce <LCD_voidSendString+0xc>
	{
		LCD_voidSendData(copy_pu8String[local_u8Iterator]);
	}
}
    5fe0:	df 91       	pop	r29
    5fe2:	cf 91       	pop	r28
    5fe4:	1f 91       	pop	r17
    5fe6:	08 95       	ret

00005fe8 <LCD_voidSendCommand>:




void LCD_voidSendCommand(u8 copy_u8Command)
{
    5fe8:	1f 93       	push	r17
    5fea:	18 2f       	mov	r17, r24
	/*Set the RS pin to be low*/
	DIO_u8SetPinValue(LCD_CTRL_PORT,LCD_RS_PIN,DIO_PIN_LOW);
    5fec:	83 e0       	ldi	r24, 0x03	; 3
    5fee:	67 e0       	ldi	r22, 0x07	; 7
    5ff0:	40 e0       	ldi	r20, 0x00	; 0
    5ff2:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>

	/*Set the RW pin to be low*/
	DIO_u8SetPinValue(LCD_CTRL_PORT,LCD_RW_PIN,DIO_PIN_LOW);
    5ff6:	83 e0       	ldi	r24, 0x03	; 3
    5ff8:	66 e0       	ldi	r22, 0x06	; 6
    5ffa:	40 e0       	ldi	r20, 0x00	; 0
    5ffc:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>

#if LCD_MODE == LCD_EIGHT_BIT
	DIO_u8SetPortValue(LCD_DATA_PORT,copy_u8Command);
    6000:	82 e0       	ldi	r24, 0x02	; 2
    6002:	61 2f       	mov	r22, r17
    6004:	0e 94 28 2b 	call	0x5650	; 0x5650 <DIO_u8SetPortValue>
#else
#error "Wrong LCD_MODE Configuration parameter"
#endif

	/*set the EN pin to high: 1 to read, waiting 2 msec and then make it low again*/
	DIO_u8SetPinValue(LCD_CTRL_PORT,LCD_EN_PIN,DIO_PIN_HIGH);
    6008:	83 e0       	ldi	r24, 0x03	; 3
    600a:	65 e0       	ldi	r22, 0x05	; 5
    600c:	41 e0       	ldi	r20, 0x01	; 1
    600e:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
    6012:	80 ea       	ldi	r24, 0xA0	; 160
    6014:	9f e0       	ldi	r25, 0x0F	; 15
    6016:	01 97       	sbiw	r24, 0x01	; 1
    6018:	f1 f7       	brne	.-4      	; 0x6016 <LCD_voidSendCommand+0x2e>

	/*Wait 2 msec*/
	_delay_ms(2);
	DIO_u8SetPinValue(LCD_CTRL_PORT,LCD_EN_PIN,DIO_PIN_LOW);
    601a:	83 e0       	ldi	r24, 0x03	; 3
    601c:	65 e0       	ldi	r22, 0x05	; 5
    601e:	40 e0       	ldi	r20, 0x00	; 0
    6020:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>

}
    6024:	1f 91       	pop	r17
    6026:	08 95       	ret

00006028 <LCD_voidClearScreen>:
	LCD_voidSendData(copy_u8PatternNumber);
}

void LCD_voidClearScreen(void)
{
	LCD_voidSendCommand(0x01);
    6028:	81 e0       	ldi	r24, 0x01	; 1
    602a:	0e 94 f4 2f 	call	0x5fe8	; 0x5fe8 <LCD_voidSendCommand>
}
    602e:	08 95       	ret

00006030 <LCD_voidSetPosition>:


void LCD_voidSetPosition(u8 copy_u8XPosition,u8 copy_u8YPosition)
{
	u8 Local_u8Address = 0;
	if(copy_u8XPosition == LCD_ROW0)
    6030:	88 23       	and	r24, r24
    6032:	29 f0       	breq	.+10     	; 0x603e <LCD_voidSetPosition+0xe>
	{
		Local_u8Address = copy_u8YPosition;
	}
	else if(copy_u8XPosition == LCD_ROW1)
    6034:	81 30       	cpi	r24, 0x01	; 1
    6036:	11 f0       	breq	.+4      	; 0x603c <LCD_voidSetPosition+0xc>
    6038:	60 e0       	ldi	r22, 0x00	; 0
    603a:	01 c0       	rjmp	.+2      	; 0x603e <LCD_voidSetPosition+0xe>
	{
		Local_u8Address = copy_u8YPosition + DDRAM_OFFSET;
    603c:	60 5c       	subi	r22, 0xC0	; 192
	{

	}

	SET_BIT(Local_u8Address,7);
	LCD_voidSendCommand(Local_u8Address);
    603e:	86 2f       	mov	r24, r22
    6040:	80 68       	ori	r24, 0x80	; 128
    6042:	0e 94 f4 2f 	call	0x5fe8	; 0x5fe8 <LCD_voidSendCommand>
}
    6046:	08 95       	ret

00006048 <LCD_voidSendCustomCharacter>:
		}
	}
}

void LCD_voidSendCustomCharacter(u8* copy_pu8CharacterArray,u8 copy_u8PatternNumber,u8 copy_u8XPosition,u8 copy_u8YPosition)
{
    6048:	df 92       	push	r13
    604a:	ef 92       	push	r14
    604c:	ff 92       	push	r15
    604e:	0f 93       	push	r16
    6050:	1f 93       	push	r17
    6052:	cf 93       	push	r28
    6054:	df 93       	push	r29
    6056:	8c 01       	movw	r16, r24
    6058:	f6 2e       	mov	r15, r22
    605a:	e4 2e       	mov	r14, r20
    605c:	d2 2e       	mov	r13, r18
	u8 Local_u8CGRAMAddress = 0 ,Local_u8LoopCounter;

	/*Calculating CGRAM Address*/
	Local_u8CGRAMAddress = copy_u8PatternNumber*8;
    605e:	86 2f       	mov	r24, r22
    6060:	88 0f       	add	r24, r24
    6062:	88 0f       	add	r24, r24
    6064:	88 0f       	add	r24, r24

	/*Make the 6th bit from address to be high and sending cmd to LCD*/
	SET_BIT(Local_u8CGRAMAddress,6);

	LCD_voidSendCommand(Local_u8CGRAMAddress);
    6066:	80 64       	ori	r24, 0x40	; 64
    6068:	0e 94 f4 2f 	call	0x5fe8	; 0x5fe8 <LCD_voidSendCommand>
    606c:	c0 e0       	ldi	r28, 0x00	; 0
    606e:	d0 e0       	ldi	r29, 0x00	; 0

	for(Local_u8LoopCounter = 0; Local_u8LoopCounter<8 ; Local_u8LoopCounter++)
	{
		LCD_voidSendData(copy_pu8CharacterArray[Local_u8LoopCounter]);
    6070:	f8 01       	movw	r30, r16
    6072:	ec 0f       	add	r30, r28
    6074:	fd 1f       	adc	r31, r29
    6076:	80 81       	ld	r24, Z
    6078:	0e 94 3f 2e 	call	0x5c7e	; 0x5c7e <LCD_voidSendData>
    607c:	21 96       	adiw	r28, 0x01	; 1
	/*Make the 6th bit from address to be high and sending cmd to LCD*/
	SET_BIT(Local_u8CGRAMAddress,6);

	LCD_voidSendCommand(Local_u8CGRAMAddress);

	for(Local_u8LoopCounter = 0; Local_u8LoopCounter<8 ; Local_u8LoopCounter++)
    607e:	c8 30       	cpi	r28, 0x08	; 8
    6080:	d1 05       	cpc	r29, r1
    6082:	b1 f7       	brne	.-20     	; 0x6070 <LCD_voidSendCustomCharacter+0x28>
	{
		LCD_voidSendData(copy_pu8CharacterArray[Local_u8LoopCounter]);
	}
	LCD_voidSetPosition( copy_u8XPosition,copy_u8YPosition);
    6084:	8e 2d       	mov	r24, r14
    6086:	6d 2d       	mov	r22, r13
    6088:	0e 94 18 30 	call	0x6030	; 0x6030 <LCD_voidSetPosition>

	/*Displaying the pattern from CGRAM*/
	LCD_voidSendData(copy_u8PatternNumber);
    608c:	8f 2d       	mov	r24, r15
    608e:	0e 94 3f 2e 	call	0x5c7e	; 0x5c7e <LCD_voidSendData>
}
    6092:	df 91       	pop	r29
    6094:	cf 91       	pop	r28
    6096:	1f 91       	pop	r17
    6098:	0f 91       	pop	r16
    609a:	ff 90       	pop	r15
    609c:	ef 90       	pop	r14
    609e:	df 90       	pop	r13
    60a0:	08 95       	ret

000060a2 <LCD_voidInit>:

/********************Functions Definitions*****************/
void LCD_voidInit(void)
{
	/************Set the control pins to be output**********/
	DIO_u8SetPinDirection(LCD_CTRL_PORT,LCD_EN_PIN,DIO_PIN_OUTPUT);
    60a2:	83 e0       	ldi	r24, 0x03	; 3
    60a4:	65 e0       	ldi	r22, 0x05	; 5
    60a6:	41 e0       	ldi	r20, 0x01	; 1
    60a8:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection(LCD_CTRL_PORT,LCD_RW_PIN,DIO_PIN_OUTPUT);
    60ac:	83 e0       	ldi	r24, 0x03	; 3
    60ae:	66 e0       	ldi	r22, 0x06	; 6
    60b0:	41 e0       	ldi	r20, 0x01	; 1
    60b2:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection(LCD_CTRL_PORT,LCD_RS_PIN,DIO_PIN_OUTPUT);
    60b6:	83 e0       	ldi	r24, 0x03	; 3
    60b8:	67 e0       	ldi	r22, 0x07	; 7
    60ba:	41 e0       	ldi	r20, 0x01	; 1
    60bc:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <DIO_u8SetPinDirection>
    60c0:	80 e9       	ldi	r24, 0x90	; 144
    60c2:	91 e0       	ldi	r25, 0x01	; 1
    60c4:	28 ec       	ldi	r18, 0xC8	; 200
    60c6:	30 e0       	ldi	r19, 0x00	; 0
    60c8:	f9 01       	movw	r30, r18
    60ca:	31 97       	sbiw	r30, 0x01	; 1
    60cc:	f1 f7       	brne	.-4      	; 0x60ca <LCD_voidInit+0x28>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    60ce:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    60d0:	d9 f7       	brne	.-10     	; 0x60c8 <LCD_voidInit+0x26>

	/*Waiting for more than 30ms*/
	_delay_ms(40);

#if LCD_MODE == LCD_EIGHT_BIT
	DIO_u8SetPortDirection(LCD_DATA_PORT,DIO_PORT_OUTPUT);
    60d2:	82 e0       	ldi	r24, 0x02	; 2
    60d4:	6f ef       	ldi	r22, 0xFF	; 255
    60d6:	0e 94 3c 2b 	call	0x5678	; 0x5678 <DIO_u8SetPortDirection>

	/*Send the function set command: N->1 (2 lines) ,F-> 0 (5*7 char font)*/
	LCD_voidSendCommand(0x38);
    60da:	88 e3       	ldi	r24, 0x38	; 56
    60dc:	0e 94 f4 2f 	call	0x5fe8	; 0x5fe8 <LCD_voidSendCommand>

	/*delay 39 us*/
//	_delay_us(40);

	/*Display ON/OFF control*/
	LCD_voidSendCommand(0x0C);
    60e0:	8c e0       	ldi	r24, 0x0C	; 12
    60e2:	0e 94 f4 2f 	call	0x5fe8	; 0x5fe8 <LCD_voidSendCommand>

	/*delay 39 us*/
	//_delay_us(40);

	/*Display clear control*/
	LCD_voidSendCommand(0x01);
    60e6:	81 e0       	ldi	r24, 0x01	; 1
    60e8:	0e 94 f4 2f 	call	0x5fe8	; 0x5fe8 <LCD_voidSendCommand>
	LCD_voidSendCommand(0x01);

#else
#error "Wrong LCD_MODE Configuration parameter"
#endif
}
    60ec:	08 95       	ret

000060ee <KPD_u8GetPressed>:
	DIO_u8SetPinValue(KPD_PORT, KPD_C3, DIO_PIN_HIGH);

}

u8 KPD_u8GetPressed(void)
{
    60ee:	8f 92       	push	r8
    60f0:	9f 92       	push	r9
    60f2:	bf 92       	push	r11
    60f4:	cf 92       	push	r12
    60f6:	df 92       	push	r13
    60f8:	ef 92       	push	r14
    60fa:	ff 92       	push	r15
    60fc:	0f 93       	push	r16
    60fe:	1f 93       	push	r17
    6100:	df 93       	push	r29
    6102:	cf 93       	push	r28
    6104:	0f 92       	push	r0
    6106:	cd b7       	in	r28, 0x3d	; 61
    6108:	de b7       	in	r29, 0x3e	; 62
    610a:	0f ef       	ldi	r16, 0xFF	; 255
    610c:	ee 24       	eor	r14, r14
    610e:	ff 24       	eor	r15, r15
	{

		DIO_u8SetPinValue(KPD_PORT, Local_u8Col, DIO_PIN_LOW);
		for(Local_u8Row = KPD_ROW_INIT; Local_u8Row<KPD_ROW_END +1; Local_u8Row++)
		{
			DIO_u8GetPinValue(KPD_PORT,Local_u8Row,&Local_u8GetPressed);
    6110:	6e 01       	movw	r12, r28
    6112:	08 94       	sec
    6114:	c1 1c       	adc	r12, r1
    6116:	d1 1c       	adc	r13, r1
    6118:	98 ec       	ldi	r25, 0xC8	; 200
    611a:	89 2e       	mov	r8, r25
    611c:	91 2c       	mov	r9, r1
	DIO_u8SetPinValue(KPD_PORT, KPD_C3, DIO_PIN_HIGH);

}

u8 KPD_u8GetPressed(void)
{
    611e:	be 2c       	mov	r11, r14
	u8 Local_u8Row;

	for(Local_u8Col = KPD_COL_INIT; Local_u8Col<KPD_COL_END +1; Local_u8Col++)
	{

		DIO_u8SetPinValue(KPD_PORT, Local_u8Col, DIO_PIN_LOW);
    6120:	80 e0       	ldi	r24, 0x00	; 0
    6122:	6e 2d       	mov	r22, r14
    6124:	40 e0       	ldi	r20, 0x00	; 0
    6126:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
		for(Local_u8Row = KPD_ROW_INIT; Local_u8Row<KPD_ROW_END +1; Local_u8Row++)
		{
			DIO_u8GetPinValue(KPD_PORT,Local_u8Row,&Local_u8GetPressed);
    612a:	80 e0       	ldi	r24, 0x00	; 0
    612c:	64 e0       	ldi	r22, 0x04	; 4
    612e:	a6 01       	movw	r20, r12
    6130:	0e 94 5e 2c 	call	0x58bc	; 0x58bc <DIO_u8GetPinValue>
			/*if local get pressed ,so this row is pressed*/
			if(Local_u8GetPressed == 0)
    6134:	89 81       	ldd	r24, Y+1	; 0x01
    6136:	88 23       	and	r24, r24
    6138:	11 f4       	brne	.+4      	; 0x613e <KPD_u8GetPressed+0x50>
    613a:	14 e0       	ldi	r17, 0x04	; 4
    613c:	1d c0       	rjmp	.+58     	; 0x6178 <KPD_u8GetPressed+0x8a>
	{

		DIO_u8SetPinValue(KPD_PORT, Local_u8Col, DIO_PIN_LOW);
		for(Local_u8Row = KPD_ROW_INIT; Local_u8Row<KPD_ROW_END +1; Local_u8Row++)
		{
			DIO_u8GetPinValue(KPD_PORT,Local_u8Row,&Local_u8GetPressed);
    613e:	80 e0       	ldi	r24, 0x00	; 0
    6140:	65 e0       	ldi	r22, 0x05	; 5
    6142:	a6 01       	movw	r20, r12
    6144:	0e 94 5e 2c 	call	0x58bc	; 0x58bc <DIO_u8GetPinValue>
			/*if local get pressed ,so this row is pressed*/
			if(Local_u8GetPressed == 0)
    6148:	89 81       	ldd	r24, Y+1	; 0x01
    614a:	88 23       	and	r24, r24
    614c:	11 f4       	brne	.+4      	; 0x6152 <KPD_u8GetPressed+0x64>
    614e:	15 e0       	ldi	r17, 0x05	; 5
    6150:	13 c0       	rjmp	.+38     	; 0x6178 <KPD_u8GetPressed+0x8a>
	{

		DIO_u8SetPinValue(KPD_PORT, Local_u8Col, DIO_PIN_LOW);
		for(Local_u8Row = KPD_ROW_INIT; Local_u8Row<KPD_ROW_END +1; Local_u8Row++)
		{
			DIO_u8GetPinValue(KPD_PORT,Local_u8Row,&Local_u8GetPressed);
    6152:	80 e0       	ldi	r24, 0x00	; 0
    6154:	66 e0       	ldi	r22, 0x06	; 6
    6156:	a6 01       	movw	r20, r12
    6158:	0e 94 5e 2c 	call	0x58bc	; 0x58bc <DIO_u8GetPinValue>
			/*if local get pressed ,so this row is pressed*/
			if(Local_u8GetPressed == 0)
    615c:	89 81       	ldd	r24, Y+1	; 0x01
    615e:	88 23       	and	r24, r24
    6160:	11 f4       	brne	.+4      	; 0x6166 <KPD_u8GetPressed+0x78>
    6162:	16 e0       	ldi	r17, 0x06	; 6
    6164:	09 c0       	rjmp	.+18     	; 0x6178 <KPD_u8GetPressed+0x8a>
	{

		DIO_u8SetPinValue(KPD_PORT, Local_u8Col, DIO_PIN_LOW);
		for(Local_u8Row = KPD_ROW_INIT; Local_u8Row<KPD_ROW_END +1; Local_u8Row++)
		{
			DIO_u8GetPinValue(KPD_PORT,Local_u8Row,&Local_u8GetPressed);
    6166:	80 e0       	ldi	r24, 0x00	; 0
    6168:	67 e0       	ldi	r22, 0x07	; 7
    616a:	a6 01       	movw	r20, r12
    616c:	0e 94 5e 2c 	call	0x58bc	; 0x58bc <DIO_u8GetPinValue>
			/*if local get pressed ,so this row is pressed*/
			if(Local_u8GetPressed == 0)
    6170:	89 81       	ldd	r24, Y+1	; 0x01
    6172:	88 23       	and	r24, r24
    6174:	29 f5       	brne	.+74     	; 0x61c0 <KPD_u8GetPressed+0xd2>
    6176:	17 e0       	ldi	r17, 0x07	; 7
    6178:	84 ef       	ldi	r24, 0xF4	; 244
    617a:	91 e0       	ldi	r25, 0x01	; 1
    617c:	f4 01       	movw	r30, r8
    617e:	31 97       	sbiw	r30, 0x01	; 1
    6180:	f1 f7       	brne	.-4      	; 0x617e <KPD_u8GetPressed+0x90>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6182:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6184:	d9 f7       	brne	.-10     	; 0x617c <KPD_u8GetPressed+0x8e>
			{
				_delay_ms(50);
				DIO_u8GetPinValue(KPD_PORT,Local_u8Row,&Local_u8GetPressed);
    6186:	80 e0       	ldi	r24, 0x00	; 0
    6188:	61 2f       	mov	r22, r17
    618a:	a6 01       	movw	r20, r12
    618c:	0e 94 5e 2c 	call	0x58bc	; 0x58bc <DIO_u8GetPinValue>
				if(Local_u8GetPressed == 0)
    6190:	89 81       	ldd	r24, Y+1	; 0x01
    6192:	88 23       	and	r24, r24
    6194:	91 f4       	brne	.+36     	; 0x61ba <KPD_u8GetPressed+0xcc>
				{
					Local_u8ReturnData = KPD_u8Buttons[Local_u8Row - KPD_ROW_INIT][Local_u8Col - KPD_COL_INIT];
    6196:	e1 2f       	mov	r30, r17
    6198:	f0 e0       	ldi	r31, 0x00	; 0
    619a:	34 97       	sbiw	r30, 0x04	; 4
    619c:	ee 0f       	add	r30, r30
    619e:	ff 1f       	adc	r31, r31
    61a0:	ee 0f       	add	r30, r30
    61a2:	ff 1f       	adc	r31, r31
    61a4:	ee 0d       	add	r30, r14
    61a6:	ff 1d       	adc	r31, r15
    61a8:	eb 51       	subi	r30, 0x1B	; 27
    61aa:	fe 4f       	sbci	r31, 0xFE	; 254
    61ac:	00 81       	ld	r16, Z
    61ae:	05 c0       	rjmp	.+10     	; 0x61ba <KPD_u8GetPressed+0xcc>
				}

				while(DIO_PIN_LOW == Local_u8GetPressed)
				{
					DIO_u8GetPinValue(KPD_PORT,Local_u8Row,&Local_u8GetPressed);
    61b0:	80 e0       	ldi	r24, 0x00	; 0
    61b2:	61 2f       	mov	r22, r17
    61b4:	a6 01       	movw	r20, r12
    61b6:	0e 94 5e 2c 	call	0x58bc	; 0x58bc <DIO_u8GetPinValue>
				if(Local_u8GetPressed == 0)
				{
					Local_u8ReturnData = KPD_u8Buttons[Local_u8Row - KPD_ROW_INIT][Local_u8Col - KPD_COL_INIT];
				}

				while(DIO_PIN_LOW == Local_u8GetPressed)
    61ba:	89 81       	ldd	r24, Y+1	; 0x01
    61bc:	88 23       	and	r24, r24
    61be:	c1 f3       	breq	.-16     	; 0x61b0 <KPD_u8GetPressed+0xc2>
				}
				break;
			}

		}
		DIO_u8SetPinValue(KPD_PORT,Local_u8Col, DIO_PIN_HIGH);
    61c0:	80 e0       	ldi	r24, 0x00	; 0
    61c2:	6b 2d       	mov	r22, r11
    61c4:	41 e0       	ldi	r20, 0x01	; 1
    61c6:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
    61ca:	08 94       	sec
    61cc:	e1 1c       	adc	r14, r1
    61ce:	f1 1c       	adc	r15, r1
	u8 Local_u8GetPressed;

	u8 Local_u8Col;
	u8 Local_u8Row;

	for(Local_u8Col = KPD_COL_INIT; Local_u8Col<KPD_COL_END +1; Local_u8Col++)
    61d0:	84 e0       	ldi	r24, 0x04	; 4
    61d2:	e8 16       	cp	r14, r24
    61d4:	f1 04       	cpc	r15, r1
    61d6:	09 f0       	breq	.+2      	; 0x61da <KPD_u8GetPressed+0xec>
    61d8:	a2 cf       	rjmp	.-188    	; 0x611e <KPD_u8GetPressed+0x30>

		}
		DIO_u8SetPinValue(KPD_PORT,Local_u8Col, DIO_PIN_HIGH);
	}
return Local_u8ReturnData;
}
    61da:	80 2f       	mov	r24, r16
    61dc:	0f 90       	pop	r0
    61de:	cf 91       	pop	r28
    61e0:	df 91       	pop	r29
    61e2:	1f 91       	pop	r17
    61e4:	0f 91       	pop	r16
    61e6:	ff 90       	pop	r15
    61e8:	ef 90       	pop	r14
    61ea:	df 90       	pop	r13
    61ec:	cf 90       	pop	r12
    61ee:	bf 90       	pop	r11
    61f0:	9f 90       	pop	r9
    61f2:	8f 90       	pop	r8
    61f4:	08 95       	ret

000061f6 <KPD_Init>:
#include "util/delay.h"
/********FUNCTION DEFINITIONS******/
void KPD_Init(void)
{
	/**Connect Pull up for the rows pins**/
	DIO_u8ConnectPullUp(KPD_PORT, KPD_R0, DIO_PIN_HIGH);
    61f6:	80 e0       	ldi	r24, 0x00	; 0
    61f8:	64 e0       	ldi	r22, 0x04	; 4
    61fa:	41 e0       	ldi	r20, 0x01	; 1
    61fc:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <DIO_u8ConnectPullUp>
	DIO_u8ConnectPullUp(KPD_PORT, KPD_R1, DIO_PIN_HIGH);
    6200:	80 e0       	ldi	r24, 0x00	; 0
    6202:	65 e0       	ldi	r22, 0x05	; 5
    6204:	41 e0       	ldi	r20, 0x01	; 1
    6206:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <DIO_u8ConnectPullUp>
	DIO_u8ConnectPullUp(KPD_PORT, KPD_R2, DIO_PIN_HIGH);
    620a:	80 e0       	ldi	r24, 0x00	; 0
    620c:	66 e0       	ldi	r22, 0x06	; 6
    620e:	41 e0       	ldi	r20, 0x01	; 1
    6210:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <DIO_u8ConnectPullUp>
	DIO_u8ConnectPullUp(KPD_PORT, KPD_R3, DIO_PIN_HIGH);
    6214:	80 e0       	ldi	r24, 0x00	; 0
    6216:	67 e0       	ldi	r22, 0x07	; 7
    6218:	41 e0       	ldi	r20, 0x01	; 1
    621a:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <DIO_u8ConnectPullUp>

	/**Connect the columns pins as output high**/
	DIO_u8SetPinDirection(KPD_PORT, KPD_C0, DIO_PIN_OUTPUT);
    621e:	80 e0       	ldi	r24, 0x00	; 0
    6220:	60 e0       	ldi	r22, 0x00	; 0
    6222:	41 e0       	ldi	r20, 0x01	; 1
    6224:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection(KPD_PORT, KPD_C1, DIO_PIN_OUTPUT);
    6228:	80 e0       	ldi	r24, 0x00	; 0
    622a:	61 e0       	ldi	r22, 0x01	; 1
    622c:	41 e0       	ldi	r20, 0x01	; 1
    622e:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection(KPD_PORT, KPD_C2, DIO_PIN_OUTPUT);
    6232:	80 e0       	ldi	r24, 0x00	; 0
    6234:	62 e0       	ldi	r22, 0x02	; 2
    6236:	41 e0       	ldi	r20, 0x01	; 1
    6238:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection(KPD_PORT, KPD_C3, DIO_PIN_OUTPUT);
    623c:	80 e0       	ldi	r24, 0x00	; 0
    623e:	63 e0       	ldi	r22, 0x03	; 3
    6240:	41 e0       	ldi	r20, 0x01	; 1
    6242:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <DIO_u8SetPinDirection>

	DIO_u8SetPinValue(KPD_PORT, KPD_C0, DIO_PIN_HIGH);
    6246:	80 e0       	ldi	r24, 0x00	; 0
    6248:	60 e0       	ldi	r22, 0x00	; 0
    624a:	41 e0       	ldi	r20, 0x01	; 1
    624c:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(KPD_PORT, KPD_C1, DIO_PIN_HIGH);
    6250:	80 e0       	ldi	r24, 0x00	; 0
    6252:	61 e0       	ldi	r22, 0x01	; 1
    6254:	41 e0       	ldi	r20, 0x01	; 1
    6256:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(KPD_PORT, KPD_C2, DIO_PIN_HIGH);
    625a:	80 e0       	ldi	r24, 0x00	; 0
    625c:	62 e0       	ldi	r22, 0x02	; 2
    625e:	41 e0       	ldi	r20, 0x01	; 1
    6260:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(KPD_PORT, KPD_C3, DIO_PIN_HIGH);
    6264:	80 e0       	ldi	r24, 0x00	; 0
    6266:	63 e0       	ldi	r22, 0x03	; 3
    6268:	41 e0       	ldi	r20, 0x01	; 1
    626a:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>

}
    626e:	08 95       	ret

00006270 <HICU_GetVlues>:
#error "Wrong configuration For EXTI"
#endif
	GIE_voidEnable();
}

void HICU_GetVlues(u32 *ptr_frequence,u8 * ptr_DC){
    6270:	cf 92       	push	r12
    6272:	df 92       	push	r13
    6274:	ef 92       	push	r14
    6276:	ff 92       	push	r15
    6278:	0f 93       	push	r16
    627a:	1f 93       	push	r17
    627c:	8c 01       	movw	r16, r24
    627e:	6b 01       	movw	r12, r22
	*ptr_frequence= (u32)frequence;
    6280:	60 91 1e 02 	lds	r22, 0x021E
    6284:	70 91 1f 02 	lds	r23, 0x021F
    6288:	80 91 20 02 	lds	r24, 0x0220
    628c:	90 91 21 02 	lds	r25, 0x0221
    6290:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    6294:	f8 01       	movw	r30, r16
    6296:	71 83       	std	Z+1, r23	; 0x01
    6298:	60 83       	st	Z, r22
	frequence=0;
    629a:	0f 2e       	mov	r0, r31
    629c:	f0 e0       	ldi	r31, 0x00	; 0
    629e:	ef 2e       	mov	r14, r31
    62a0:	f0 e0       	ldi	r31, 0x00	; 0
    62a2:	ff 2e       	mov	r15, r31
    62a4:	f0 e0       	ldi	r31, 0x00	; 0
    62a6:	0f 2f       	mov	r16, r31
    62a8:	f0 e0       	ldi	r31, 0x00	; 0
    62aa:	1f 2f       	mov	r17, r31
    62ac:	f0 2d       	mov	r31, r0
    62ae:	e0 92 1e 02 	sts	0x021E, r14
    62b2:	f0 92 1f 02 	sts	0x021F, r15
    62b6:	00 93 20 02 	sts	0x0220, r16
    62ba:	10 93 21 02 	sts	0x0221, r17
	*ptr_DC=(u8)DC;
    62be:	60 91 22 02 	lds	r22, 0x0222
    62c2:	70 91 23 02 	lds	r23, 0x0223
    62c6:	80 91 24 02 	lds	r24, 0x0224
    62ca:	90 91 25 02 	lds	r25, 0x0225
    62ce:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    62d2:	f6 01       	movw	r30, r12
    62d4:	60 83       	st	Z, r22
	DC=0;
    62d6:	e0 92 22 02 	sts	0x0222, r14
    62da:	f0 92 23 02 	sts	0x0223, r15
    62de:	00 93 24 02 	sts	0x0224, r16
    62e2:	10 93 25 02 	sts	0x0225, r17
}
    62e6:	1f 91       	pop	r17
    62e8:	0f 91       	pop	r16
    62ea:	ff 90       	pop	r15
    62ec:	ef 90       	pop	r14
    62ee:	df 90       	pop	r13
    62f0:	cf 90       	pop	r12
    62f2:	08 95       	ret

000062f4 <HICU_voidStart>:
void HICU_voidStart (void){
	//Enable EXTI
}
    62f4:	08 95       	ret

000062f6 <HICU_voidStop>:

void HICU_voidStop (void){
	//Disable EXTI
}
    62f6:	08 95       	ret

000062f8 <HICU_voidInit>:
/***********************global variable***************************/
volatile static f32 DC=0;
volatile static f32 frequence=0;

void HICU_voidInit(void){
	EXTI_voidInit();
    62f8:	0e 94 26 2a 	call	0x544c	; 0x544c <EXTI_voidInit>
#if( HICU_ATTACHED_EXTI==ATTACHED_TO_EXTI0)
	EXTI_u8SetInt0SenseControl(RISING_EDGE);
    62fc:	81 e0       	ldi	r24, 0x01	; 1
    62fe:	0e 94 3c 2a 	call	0x5478	; 0x5478 <EXTI_u8SetInt0SenseControl>
	EXTI_u8Int0SetCallBack(&HICU_voidOpration);
    6302:	88 e8       	ldi	r24, 0x88	; 136
    6304:	91 e3       	ldi	r25, 0x31	; 49
    6306:	0e 94 8f 2a 	call	0x551e	; 0x551e <EXTI_u8Int0SetCallBack>
	EXTI_u8SetInt2SenseControl(RISING_EDGE);
	EXTI_u8Int2SetCallBack(&HICU_voidOpration);
#else
#error "Wrong configuration For EXTI"
#endif
	GIE_voidEnable();
    630a:	0e 94 1e 2a 	call	0x543c	; 0x543c <GIE_voidEnable>
}
    630e:	08 95       	ret

00006310 <HICU_voidOpration>:

void HICU_voidStop (void){
	//Disable EXTI
}
/***********************Interrupt*********************************/
static void HICU_voidOpration(void){
    6310:	8f 92       	push	r8
    6312:	9f 92       	push	r9
    6314:	af 92       	push	r10
    6316:	bf 92       	push	r11
    6318:	cf 92       	push	r12
    631a:	df 92       	push	r13
    631c:	ef 92       	push	r14
    631e:	ff 92       	push	r15
    6320:	0f 93       	push	r16
    6322:	1f 93       	push	r17
	volatile static u8 states=FIRST_RISING;
	volatile static u16 local_u16ReadCycleVarabile=0;
	volatile static u16 local_u16ReadCycleBuffer=0;
	volatile static u32 t_on_us=0;
	volatile static u32 t_off_us=0;
	switch(states){
    6324:	80 91 2e 02 	lds	r24, 0x022E
    6328:	81 30       	cpi	r24, 0x01	; 1
    632a:	89 f0       	breq	.+34     	; 0x634e <HICU_voidOpration+0x3e>
    632c:	81 30       	cpi	r24, 0x01	; 1
    632e:	20 f0       	brcs	.+8      	; 0x6338 <HICU_voidOpration+0x28>
    6330:	82 30       	cpi	r24, 0x02	; 2
    6332:	09 f0       	breq	.+2      	; 0x6336 <HICU_voidOpration+0x26>
    6334:	95 c0       	rjmp	.+298    	; 0x6460 <HICU_voidOpration+0x150>
    6336:	32 c0       	rjmp	.+100    	; 0x639c <HICU_voidOpration+0x8c>
	case FIRST_RISING:
#if( HICU_ATTACHED_EXTI==ATTACHED_TO_EXTI0)
		EXTI_u8SetInt0SenseControl(FALLING_EDGE);
    6338:	80 e0       	ldi	r24, 0x00	; 0
    633a:	0e 94 3c 2a 	call	0x5478	; 0x5478 <EXTI_u8SetInt0SenseControl>
#error "Wrong configuration For EXTI"
#endif
#if( HICU_ATTACHED_TIMER==ATTACHED_TO_TIM0)
		local_u16ReadCycleVarabile=(u8)TIMER0_u8GetTimerCounterValue();
#elif( HICU_ATTACHED_TIMER==ATTACHED_TO_TIM1)
		local_u16ReadCycleVarabile=TIMER1_u8GetTimerCounterValue();
    633e:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <TIMER1_u8GetTimerCounterValue>
    6342:	90 93 2d 02 	sts	0x022D, r25
    6346:	80 93 2c 02 	sts	0x022C, r24
#elif( HICU_ATTACHED_TIMER==ATTACHED_TO_TIM2)
		local_u16ReadCycleVarabile=(u8)TIMER2_u8GetTimerCounterValue();
#else
#error "Wrong configuration For TIMER"
#endif
		states=FALLING;
    634a:	81 e0       	ldi	r24, 0x01	; 1
    634c:	24 c0       	rjmp	.+72     	; 0x6396 <HICU_voidOpration+0x86>
		break;
	case FALLING:
#if( HICU_ATTACHED_EXTI==ATTACHED_TO_EXTI0)
		EXTI_u8SetInt0SenseControl(RISING_EDGE);
    634e:	81 e0       	ldi	r24, 0x01	; 1
    6350:	0e 94 3c 2a 	call	0x5478	; 0x5478 <EXTI_u8SetInt0SenseControl>
		EXTI_u8Int0SetCallBack(&HICU_voidOpration);
    6354:	88 e8       	ldi	r24, 0x88	; 136
    6356:	91 e3       	ldi	r25, 0x31	; 49
    6358:	0e 94 8f 2a 	call	0x551e	; 0x551e <EXTI_u8Int0SetCallBack>
#if( HICU_ATTACHED_TIMER==ATTACHED_TO_TIM0)
		local_u16ReadCycleBuffer=(u8)TIMER0_u8GetTimerCounterValue();
		t_on_us=((u8)(local_u16ReadCycleBuffer-local_u16ReadCycleVarabile))*TICK_TIME_US;
		local_u16ReadCycleVarabile=local_u16ReadCycleBuffer;
#elif( HICU_ATTACHED_TIMER==ATTACHED_TO_TIM1)
		local_u16ReadCycleBuffer=TIMER1_u8GetTimerCounterValue();
    635c:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <TIMER1_u8GetTimerCounterValue>
    6360:	90 93 2b 02 	sts	0x022B, r25
    6364:	80 93 2a 02 	sts	0x022A, r24
		t_on_us=((local_u16ReadCycleBuffer-local_u16ReadCycleVarabile))*TICK_TIME_US;
    6368:	80 91 2a 02 	lds	r24, 0x022A
    636c:	90 91 2b 02 	lds	r25, 0x022B
    6370:	20 91 2c 02 	lds	r18, 0x022C
    6374:	30 91 2d 02 	lds	r19, 0x022D
    6378:	82 1b       	sub	r24, r18
    637a:	93 0b       	sbc	r25, r19
    637c:	90 93 29 02 	sts	0x0229, r25
    6380:	80 93 28 02 	sts	0x0228, r24
		local_u16ReadCycleVarabile = local_u16ReadCycleBuffer;
    6384:	80 91 2a 02 	lds	r24, 0x022A
    6388:	90 91 2b 02 	lds	r25, 0x022B
    638c:	90 93 2d 02 	sts	0x022D, r25
    6390:	80 93 2c 02 	sts	0x022C, r24
		t_on_us=((u8)(local_u16ReadCycleBuffer-local_u16ReadCycleVarabile))*TICK_TIME_US;
		local_u16ReadCycleVarabile=local_u16ReadCycleBuffer;
#else
#error "Wrong configuration For TIMER"
#endif
		states=SECOND_RISING;
    6394:	82 e0       	ldi	r24, 0x02	; 2
    6396:	80 93 2e 02 	sts	0x022E, r24
    639a:	62 c0       	rjmp	.+196    	; 0x6460 <HICU_voidOpration+0x150>
	case SECOND_RISING:
#if( HICU_ATTACHED_TIMER==ATTACHED_TO_TIM0)
		local_u16ReadCycleBuffer=(u8)TIMER0_u8GetTimerCounterValue();
		t_off_us=((u8)(local_u16ReadCycleBuffer-local_u16ReadCycleVarabile))*TICK_TIME_US;
#elif( HICU_ATTACHED_TIMER==ATTACHED_TO_TIM1)
		local_u16ReadCycleBuffer=TIMER1_u8GetTimerCounterValue();
    639c:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <TIMER1_u8GetTimerCounterValue>
    63a0:	90 93 2b 02 	sts	0x022B, r25
    63a4:	80 93 2a 02 	sts	0x022A, r24
		t_off_us=((local_u16ReadCycleBuffer-local_u16ReadCycleVarabile))*TICK_TIME_US;
    63a8:	80 91 2a 02 	lds	r24, 0x022A
    63ac:	90 91 2b 02 	lds	r25, 0x022B
    63b0:	20 91 2c 02 	lds	r18, 0x022C
    63b4:	30 91 2d 02 	lds	r19, 0x022D
    63b8:	82 1b       	sub	r24, r18
    63ba:	93 0b       	sbc	r25, r19
    63bc:	90 93 27 02 	sts	0x0227, r25
    63c0:	80 93 26 02 	sts	0x0226, r24
		local_u16ReadCycleBuffer=(u8)TIMER2_u8GetTimerCounterValue();
		t_off_us=((u8)(local_u16ReadCycleBuffer-local_u16ReadCycleVarabile))*TICK_TIME_US;
#else
#error "Wrong configuration For TIMER"
#endif
		frequence=1000000/(t_on_us+t_off_us);
    63c4:	80 91 28 02 	lds	r24, 0x0228
    63c8:	90 91 29 02 	lds	r25, 0x0229
    63cc:	20 91 26 02 	lds	r18, 0x0226
    63d0:	30 91 27 02 	lds	r19, 0x0227
    63d4:	28 0f       	add	r18, r24
    63d6:	39 1f       	adc	r19, r25
    63d8:	40 e0       	ldi	r20, 0x00	; 0
    63da:	50 e0       	ldi	r21, 0x00	; 0
    63dc:	60 e4       	ldi	r22, 0x40	; 64
    63de:	72 e4       	ldi	r23, 0x42	; 66
    63e0:	8f e0       	ldi	r24, 0x0F	; 15
    63e2:	90 e0       	ldi	r25, 0x00	; 0
    63e4:	0e 94 19 34 	call	0x6832	; 0x6832 <__divmodsi4>
    63e8:	ca 01       	movw	r24, r20
    63ea:	b9 01       	movw	r22, r18
    63ec:	0e 94 be 21 	call	0x437c	; 0x437c <__floatsisf>
    63f0:	60 93 1e 02 	sts	0x021E, r22
    63f4:	70 93 1f 02 	sts	0x021F, r23
    63f8:	80 93 20 02 	sts	0x0220, r24
    63fc:	90 93 21 02 	sts	0x0221, r25
		DC=((f32)t_on_us/(t_on_us+t_off_us))*100;
    6400:	60 91 28 02 	lds	r22, 0x0228
    6404:	70 91 29 02 	lds	r23, 0x0229
    6408:	80 90 28 02 	lds	r8, 0x0228
    640c:	90 90 29 02 	lds	r9, 0x0229
    6410:	e0 90 26 02 	lds	r14, 0x0226
    6414:	f0 90 27 02 	lds	r15, 0x0227
    6418:	80 e0       	ldi	r24, 0x00	; 0
    641a:	90 e0       	ldi	r25, 0x00	; 0
    641c:	0e 94 70 22 	call	0x44e0	; 0x44e0 <__floatunsisf>
    6420:	5b 01       	movw	r10, r22
    6422:	6c 01       	movw	r12, r24
    6424:	e8 0c       	add	r14, r8
    6426:	f9 1c       	adc	r15, r9
    6428:	00 e0       	ldi	r16, 0x00	; 0
    642a:	10 e0       	ldi	r17, 0x00	; 0
    642c:	c8 01       	movw	r24, r16
    642e:	b7 01       	movw	r22, r14
    6430:	0e 94 70 22 	call	0x44e0	; 0x44e0 <__floatunsisf>
    6434:	9b 01       	movw	r18, r22
    6436:	ac 01       	movw	r20, r24
    6438:	c6 01       	movw	r24, r12
    643a:	b5 01       	movw	r22, r10
    643c:	0e 94 e2 20 	call	0x41c4	; 0x41c4 <__divsf3>
    6440:	20 e0       	ldi	r18, 0x00	; 0
    6442:	30 e0       	ldi	r19, 0x00	; 0
    6444:	48 ec       	ldi	r20, 0xC8	; 200
    6446:	52 e4       	ldi	r21, 0x42	; 66
    6448:	0e 94 e8 1f 	call	0x3fd0	; 0x3fd0 <__mulsf3>
    644c:	60 93 22 02 	sts	0x0222, r22
    6450:	70 93 23 02 	sts	0x0223, r23
    6454:	80 93 24 02 	sts	0x0224, r24
    6458:	90 93 25 02 	sts	0x0225, r25
		states=FIRST_RISING;
    645c:	10 92 2e 02 	sts	0x022E, r1
		break;
	default:
		break;
	}

}
    6460:	1f 91       	pop	r17
    6462:	0f 91       	pop	r16
    6464:	ff 90       	pop	r15
    6466:	ef 90       	pop	r14
    6468:	df 90       	pop	r13
    646a:	cf 90       	pop	r12
    646c:	bf 90       	pop	r11
    646e:	af 90       	pop	r10
    6470:	9f 90       	pop	r9
    6472:	8f 90       	pop	r8
    6474:	08 95       	ret

00006476 <EEPROM_u8ReadDataByte>:
	/* 5)Sending stop condition*/
	TWI_voidSendStopCondition();
}

u8 EEPROM_u8ReadDataByte(u16 Copy_u16Adderss)
{
    6476:	0f 93       	push	r16
    6478:	1f 93       	push	r17
    647a:	df 93       	push	r29
    647c:	cf 93       	push	r28
    647e:	0f 92       	push	r0
    6480:	cd b7       	in	r28, 0x3d	; 61
    6482:	de b7       	in	r29, 0x3e	; 62
	u8 Local_u8Address;

	//1010 fixed
	//A2 pin configurable (either high or low)
	//last two bits is for page access
	Local_u8Address = (((EEPROM_FIXED_ADDRESS) |(A2_PIN_CONNECTION<<2) | ((Copy_u16Adderss >> 8) & 3)));
    6484:	8c 01       	movw	r16, r24
    6486:	13 70       	andi	r17, 0x03	; 3
    6488:	10 65       	ori	r17, 0x50	; 80

	/* 1)Sending start condition on the bus*/
	TWI_enSendStartCondition();
    648a:	0e 94 63 26 	call	0x4cc6	; 0x4cc6 <TWI_enSendStartCondition>

	/* 2)Sending address of EEPROM with target page and write command*/
	TWI_enSendSlaveAddressWithWriteCmd(Local_u8Address);
    648e:	81 2f       	mov	r24, r17
    6490:	0e 94 77 26 	call	0x4cee	; 0x4cee <TWI_enSendSlaveAddressWithWriteCmd>

	/* 3)Sending target location of the EEPROM*/
	TWI_enSendByte((u8)Copy_u16Adderss);
    6494:	80 2f       	mov	r24, r16
    6496:	0e 94 96 26 	call	0x4d2c	; 0x4d2c <TWI_enSendByte>

	/* 4)Sending repeated start condition*/
	TWI_enSendStartCondition();
    649a:	0e 94 63 26 	call	0x4cc6	; 0x4cc6 <TWI_enSendStartCondition>

	/* 5)Sending address of EEPROM with target page and read command*/
	TWI_enSendSlaveAddressWithReadCmd(Local_u8Address);
    649e:	81 2f       	mov	r24, r17
    64a0:	0e 94 86 26 	call	0x4d0c	; 0x4d0c <TWI_enSendSlaveAddressWithReadCmd>

	/* 6)Reading from target location*/
	TWI_enReceiveByteNoAck(&Local_u8Data);
    64a4:	ce 01       	movw	r24, r28
    64a6:	01 96       	adiw	r24, 0x01	; 1
    64a8:	0e 94 b4 26 	call	0x4d68	; 0x4d68 <TWI_enReceiveByteNoAck>

	/* 5)Sending stop condition*/
	TWI_voidSendStopCondition();
    64ac:	0e 94 c7 26 	call	0x4d8e	; 0x4d8e <TWI_voidSendStopCondition>

	return Local_u8Data;
}
    64b0:	89 81       	ldd	r24, Y+1	; 0x01
    64b2:	0f 90       	pop	r0
    64b4:	cf 91       	pop	r28
    64b6:	df 91       	pop	r29
    64b8:	1f 91       	pop	r17
    64ba:	0f 91       	pop	r16
    64bc:	08 95       	ret

000064be <EEPROM_voidSendDataByte>:
{
	TWI_voidInit();
}

void EEPROM_voidSendDataByte(u8 Copy_u8DataByte , u16 Copy_u16Address)
{
    64be:	ff 92       	push	r15
    64c0:	0f 93       	push	r16
    64c2:	1f 93       	push	r17
    64c4:	f8 2e       	mov	r15, r24
    64c6:	8b 01       	movw	r16, r22
	//A2 pin configurable (either high or low)
	//last two bits is for page access
	Local_u8Address = (((EEPROM_FIXED_ADDRESS) |(A2_PIN_CONNECTION<<2) |((Copy_u16Address>> 8) & 3)));

	/* 1)Sending start condition on the bus*/
	TWI_enSendStartCondition();
    64c8:	0e 94 63 26 	call	0x4cc6	; 0x4cc6 <TWI_enSendStartCondition>

	/* 2)Sending address of EEPROM with target page and write command*/
	TWI_enSendSlaveAddressWithWriteCmd(Local_u8Address);
    64cc:	13 70       	andi	r17, 0x03	; 3
    64ce:	81 2f       	mov	r24, r17
    64d0:	80 65       	ori	r24, 0x50	; 80
    64d2:	0e 94 77 26 	call	0x4cee	; 0x4cee <TWI_enSendSlaveAddressWithWriteCmd>


	/* 3)Sending target location of the EEPROM*/
	TWI_enSendByte((u8)Copy_u16Address);
    64d6:	80 2f       	mov	r24, r16
    64d8:	0e 94 96 26 	call	0x4d2c	; 0x4d2c <TWI_enSendByte>

	/* 4)Sending target data to the specified location*/
	TWI_enSendByte(Copy_u8DataByte);
    64dc:	8f 2d       	mov	r24, r15
    64de:	0e 94 96 26 	call	0x4d2c	; 0x4d2c <TWI_enSendByte>

	/* 5)Sending stop condition*/
	TWI_voidSendStopCondition();
    64e2:	0e 94 c7 26 	call	0x4d8e	; 0x4d8e <TWI_voidSendStopCondition>
}
    64e6:	1f 91       	pop	r17
    64e8:	0f 91       	pop	r16
    64ea:	ff 90       	pop	r15
    64ec:	08 95       	ret

000064ee <EEPROM_voidInit>:
/*********************************************************************************/
/*							FUNCTIONS DEFINITIONS								 */
/*********************************************************************************/
void EEPROM_voidInit(void)
{
	TWI_voidInit();
    64ee:	0e 94 5b 26 	call	0x4cb6	; 0x4cb6 <TWI_voidInit>
}
    64f2:	08 95       	ret

000064f4 <MOTOR_voidStop>:
	 DIO_u8SetPinValue(MOTOR_PORT,MOTOR_CCW_PIN,DIO_PIN_LOW);

}
void MOTOR_voidStop(void)
{
	DIO_u8SetPinValue(MOTOR_PORT,MOTOR_CW_PIN,DIO_PIN_LOW);
    64f4:	80 e0       	ldi	r24, 0x00	; 0
    64f6:	61 e0       	ldi	r22, 0x01	; 1
    64f8:	40 e0       	ldi	r20, 0x00	; 0
    64fa:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
	 DIO_u8SetPinValue(MOTOR_PORT,MOTOR_CCW_PIN,DIO_PIN_LOW);
    64fe:	80 e0       	ldi	r24, 0x00	; 0
    6500:	60 e0       	ldi	r22, 0x00	; 0
    6502:	40 e0       	ldi	r20, 0x00	; 0
    6504:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>

}
    6508:	08 95       	ret

0000650a <MOTOR_voidClockWise>:


}
void MOTOR_voidClockWise(void)
{
	DIO_u8SetPinValue(MOTOR_PORT,MOTOR_CW_PIN,DIO_PIN_HIGH);
    650a:	80 e0       	ldi	r24, 0x00	; 0
    650c:	61 e0       	ldi	r22, 0x01	; 1
    650e:	41 e0       	ldi	r20, 0x01	; 1
    6510:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
	 DIO_u8SetPinValue(MOTOR_PORT,MOTOR_CCW_PIN,DIO_PIN_LOW);
    6514:	80 e0       	ldi	r24, 0x00	; 0
    6516:	60 e0       	ldi	r22, 0x00	; 0
    6518:	40 e0       	ldi	r20, 0x00	; 0
    651a:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>

}
    651e:	08 95       	ret

00006520 <MOTOR_voidCounterClockWise>:


}
void MOTOR_voidCounterClockWise(void)
{
 DIO_u8SetPinValue(MOTOR_PORT,MOTOR_CW_PIN,DIO_PIN_LOW);
    6520:	80 e0       	ldi	r24, 0x00	; 0
    6522:	61 e0       	ldi	r22, 0x01	; 1
    6524:	40 e0       	ldi	r20, 0x00	; 0
    6526:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>
 DIO_u8SetPinValue(MOTOR_PORT,MOTOR_CCW_PIN,DIO_PIN_HIGH);
    652a:	80 e0       	ldi	r24, 0x00	; 0
    652c:	60 e0       	ldi	r22, 0x00	; 0
    652e:	41 e0       	ldi	r20, 0x01	; 1
    6530:	0e 94 6c 2b 	call	0x56d8	; 0x56d8 <DIO_u8SetPinValue>


}
    6534:	08 95       	ret

00006536 <MOTOR_voidInit>:


/*********FUNCTIONS DEFINITIONS********/
void MOTOR_voidInit(void)
{
	DIO_u8SetPinDirection(MOTOR_PORT,MOTOR_CCW_PIN,DIO_PIN_OUTPUT);
    6536:	80 e0       	ldi	r24, 0x00	; 0
    6538:	60 e0       	ldi	r22, 0x00	; 0
    653a:	41 e0       	ldi	r20, 0x01	; 1
    653c:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection(MOTOR_PORT,MOTOR_CW_PIN,DIO_PIN_OUTPUT);
    6540:	80 e0       	ldi	r24, 0x00	; 0
    6542:	61 e0       	ldi	r22, 0x01	; 1
    6544:	41 e0       	ldi	r20, 0x01	; 1
    6546:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <DIO_u8SetPinDirection>



}
    654a:	08 95       	ret

0000654c <main>:
/***********GENERAL VARIABLES************/

/*************HANDLERS*******************/

int main(void)
{
    654c:	6f 92       	push	r6
    654e:	7f 92       	push	r7
    6550:	8f 92       	push	r8
    6552:	9f 92       	push	r9
    6554:	af 92       	push	r10
    6556:	bf 92       	push	r11
    6558:	cf 92       	push	r12
    655a:	df 92       	push	r13
    655c:	ef 92       	push	r14
    655e:	ff 92       	push	r15
    6560:	0f 93       	push	r16
    6562:	1f 93       	push	r17
    6564:	df 93       	push	r29
    6566:	cf 93       	push	r28
    6568:	cd b7       	in	r28, 0x3d	; 61
    656a:	de b7       	in	r29, 0x3e	; 62
    656c:	2f 97       	sbiw	r28, 0x0f	; 15
    656e:	0f b6       	in	r0, 0x3f	; 63
    6570:	f8 94       	cli
    6572:	de bf       	out	0x3e, r29	; 62
    6574:	0f be       	out	0x3f, r0	; 63
    6576:	cd bf       	out	0x3d, r28	; 61
	/**************************************************************************/
	/*						1- LOCAL VARIABLES								  */
	/**************************************************************************/
	u8 Local_u8ReadData[5]= "";
	u8 Local_u8CreatePass[5] = "";
    6578:	1e 82       	std	Y+6, r1	; 0x06
    657a:	1f 82       	std	Y+7, r1	; 0x07
    657c:	18 86       	std	Y+8, r1	; 0x08
    657e:	19 86       	std	Y+9, r1	; 0x09
    6580:	1a 86       	std	Y+10, r1	; 0x0a

	/**************************************************************************/
	/*					2- MODULES INITIALIZATIONS							  */
	/**************************************************************************/

	EEPROM_voidInit();
    6582:	0e 94 77 32 	call	0x64ee	; 0x64ee <EEPROM_voidInit>
	LCD_voidInit();
    6586:	0e 94 51 30 	call	0x60a2	; 0x60a2 <LCD_voidInit>
	KPD_Init();
    658a:	0e 94 fb 30 	call	0x61f6	; 0x61f6 <KPD_Init>

	DIO_u8SetPinDirection(DIO_PORTC,DIO_PIN0,DIO_PIN_OUTPUT);
    658e:	82 e0       	ldi	r24, 0x02	; 2
    6590:	60 e0       	ldi	r22, 0x00	; 0
    6592:	41 e0       	ldi	r20, 0x01	; 1
    6594:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection(DIO_PORTC,DIO_PIN1,DIO_PIN_OUTPUT);
    6598:	82 e0       	ldi	r24, 0x02	; 2
    659a:	61 e0       	ldi	r22, 0x01	; 1
    659c:	41 e0       	ldi	r20, 0x01	; 1
    659e:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection(DIO_PORTC,DIO_PIN5,DIO_PIN_OUTPUT);
    65a2:	82 e0       	ldi	r24, 0x02	; 2
    65a4:	65 e0       	ldi	r22, 0x05	; 5
    65a6:	41 e0       	ldi	r20, 0x01	; 1
    65a8:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection(DIO_PORTC,DIO_PIN6,DIO_PIN_OUTPUT);
    65ac:	82 e0       	ldi	r24, 0x02	; 2
    65ae:	66 e0       	ldi	r22, 0x06	; 6
    65b0:	41 e0       	ldi	r20, 0x01	; 1
    65b2:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection(DIO_PORTC,DIO_PIN7,DIO_PIN_OUTPUT);
    65b6:	82 e0       	ldi	r24, 0x02	; 2
    65b8:	67 e0       	ldi	r22, 0x07	; 7
    65ba:	41 e0       	ldi	r20, 0x01	; 1
    65bc:	0e 94 e5 2b 	call	0x57ca	; 0x57ca <DIO_u8SetPinDirection>

	DIO_u8SetPortDirection(DIO_PORTD,DIO_PORT_OUTPUT);
    65c0:	83 e0       	ldi	r24, 0x03	; 3
    65c2:	6f ef       	ldi	r22, 0xFF	; 255
    65c4:	0e 94 3c 2b 	call	0x5678	; 0x5678 <DIO_u8SetPortDirection>
	DIO_u8SetPortDirection(DIO_PORTB,DIO_PORT_OUTPUT);
    65c8:	81 e0       	ldi	r24, 0x01	; 1
    65ca:	6f ef       	ldi	r22, 0xFF	; 255
    65cc:	0e 94 3c 2b 	call	0x5678	; 0x5678 <DIO_u8SetPortDirection>
	DIO_u8SetPortDirection(DIO_PORTA,DIO_PORT_OUTPUT);
    65d0:	80 e0       	ldi	r24, 0x00	; 0
    65d2:	6f ef       	ldi	r22, 0xFF	; 255
    65d4:	0e 94 3c 2b 	call	0x5678	; 0x5678 <DIO_u8SetPortDirection>

	/**************************************************************************/
	/*				 			3- APPLICATION								  */
	/**************************************************************************/

	LCD_voidClearScreen();
    65d8:	0e 94 14 30 	call	0x6028	; 0x6028 <LCD_voidClearScreen>
	LCD_voidSetPosition(0,0);
    65dc:	80 e0       	ldi	r24, 0x00	; 0
    65de:	60 e0       	ldi	r22, 0x00	; 0
    65e0:	0e 94 18 30 	call	0x6030	; 0x6030 <LCD_voidSetPosition>
	LCD_voidSendString((u8*) "CREATE PASSWORD");
    65e4:	80 e6       	ldi	r24, 0x60	; 96
    65e6:	90 e0       	ldi	r25, 0x00	; 0
    65e8:	0e 94 e1 2f 	call	0x5fc2	; 0x5fc2 <LCD_voidSendString>
	LCD_voidSetPosition(1,0);
    65ec:	81 e0       	ldi	r24, 0x01	; 1
    65ee:	60 e0       	ldi	r22, 0x00	; 0
    65f0:	0e 94 18 30 	call	0x6030	; 0x6030 <LCD_voidSetPosition>
	LCD_voidSendString((u8*) "PASS:");
    65f4:	80 e7       	ldi	r24, 0x70	; 112
    65f6:	90 e0       	ldi	r25, 0x00	; 0
    65f8:	0e 94 e1 2f 	call	0x5fc2	; 0x5fc2 <LCD_voidSendString>
    65fc:	56 e0       	ldi	r21, 0x06	; 6
    65fe:	e5 2e       	mov	r14, r21
    6600:	f1 2c       	mov	r15, r1
    6602:	ec 0e       	add	r14, r28
    6604:	fd 1e       	adc	r15, r29
    6606:	15 e0       	ldi	r17, 0x05	; 5
    6608:	48 ec       	ldi	r20, 0xC8	; 200
    660a:	c4 2e       	mov	r12, r20
    660c:	d1 2c       	mov	r13, r1
	for(u8 i = 0;i<4;i++)
	{
		Local_u8CreatePass[i] = KPD_u8GetPressed();
    660e:	0e 94 77 30 	call	0x60ee	; 0x60ee <KPD_u8GetPressed>
    6612:	08 2f       	mov	r16, r24
		while(Local_u8CreatePass[i] == 0xff);
    6614:	8f 3f       	cpi	r24, 0xFF	; 255
    6616:	09 f4       	brne	.+2      	; 0x661a <main+0xce>
    6618:	0b c1       	rjmp	.+534    	; 0x6830 <main+0x2e4>
		LCD_voidSetPosition(1,5+i);
    661a:	81 e0       	ldi	r24, 0x01	; 1
    661c:	61 2f       	mov	r22, r17
    661e:	0e 94 18 30 	call	0x6030	; 0x6030 <LCD_voidSetPosition>
		LCD_voidSendString((u8*) "*");
    6622:	86 e7       	ldi	r24, 0x76	; 118
    6624:	90 e0       	ldi	r25, 0x00	; 0
    6626:	0e 94 e1 2f 	call	0x5fc2	; 0x5fc2 <LCD_voidSendString>
    662a:	84 ef       	ldi	r24, 0xF4	; 244
    662c:	91 e0       	ldi	r25, 0x01	; 1
    662e:	f6 01       	movw	r30, r12
    6630:	31 97       	sbiw	r30, 0x01	; 1
    6632:	f1 f7       	brne	.-4      	; 0x6630 <main+0xe4>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6634:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6636:	d9 f7       	brne	.-10     	; 0x662e <main+0xe2>
	LCD_voidSendString((u8*) "CREATE PASSWORD");
	LCD_voidSetPosition(1,0);
	LCD_voidSendString((u8*) "PASS:");
	for(u8 i = 0;i<4;i++)
	{
		Local_u8CreatePass[i] = KPD_u8GetPressed();
    6638:	f7 01       	movw	r30, r14
    663a:	01 93       	st	Z+, r16
    663c:	7f 01       	movw	r14, r30
    663e:	1f 5f       	subi	r17, 0xFF	; 255
	LCD_voidClearScreen();
	LCD_voidSetPosition(0,0);
	LCD_voidSendString((u8*) "CREATE PASSWORD");
	LCD_voidSetPosition(1,0);
	LCD_voidSendString((u8*) "PASS:");
	for(u8 i = 0;i<4;i++)
    6640:	19 30       	cpi	r17, 0x09	; 9
    6642:	29 f7       	brne	.-54     	; 0x660e <main+0xc2>
		while(Local_u8CreatePass[i] == 0xff);
		LCD_voidSetPosition(1,5+i);
		LCD_voidSendString((u8*) "*");
		_delay_ms(50);
	}
	Local_u8CreatePass[4] = '\0';
    6644:	1a 86       	std	Y+10, r1	; 0x0a



	do {
		Local_u8keyPressed = KPD_u8GetPressed();
    6646:	0e 94 77 30 	call	0x60ee	; 0x60ee <KPD_u8GetPressed>
	} while (Local_u8keyPressed != '=');
    664a:	8d 33       	cpi	r24, 0x3D	; 61
    664c:	e1 f7       	brne	.-8      	; 0x6646 <main+0xfa>
    664e:	00 e0       	ldi	r16, 0x00	; 0
    6650:	10 e0       	ldi	r17, 0x00	; 0


	for(int i=0 ; i<5 ; i++)
	{
		EEPROM_voidSendDataByte(Local_u8CreatePass[i],i);
    6652:	36 e0       	ldi	r19, 0x06	; 6
    6654:	c3 2e       	mov	r12, r19
    6656:	d1 2c       	mov	r13, r1
    6658:	cc 0e       	add	r12, r28
    665a:	dd 1e       	adc	r13, r29
    665c:	28 ec       	ldi	r18, 0xC8	; 200
    665e:	e2 2e       	mov	r14, r18
    6660:	f1 2c       	mov	r15, r1
    6662:	f6 01       	movw	r30, r12
    6664:	e0 0f       	add	r30, r16
    6666:	f1 1f       	adc	r31, r17
    6668:	80 81       	ld	r24, Z
    666a:	b8 01       	movw	r22, r16
    666c:	0e 94 5f 32 	call	0x64be	; 0x64be <EEPROM_voidSendDataByte>
    6670:	84 ef       	ldi	r24, 0xF4	; 244
    6672:	91 e0       	ldi	r25, 0x01	; 1
    6674:	f7 01       	movw	r30, r14
    6676:	31 97       	sbiw	r30, 0x01	; 1
    6678:	f1 f7       	brne	.-4      	; 0x6676 <main+0x12a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    667a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    667c:	d9 f7       	brne	.-10     	; 0x6674 <main+0x128>
	do {
		Local_u8keyPressed = KPD_u8GetPressed();
	} while (Local_u8keyPressed != '=');


	for(int i=0 ; i<5 ; i++)
    667e:	0f 5f       	subi	r16, 0xFF	; 255
    6680:	1f 4f       	sbci	r17, 0xFF	; 255
    6682:	05 30       	cpi	r16, 0x05	; 5
    6684:	11 05       	cpc	r17, r1
    6686:	69 f7       	brne	.-38     	; 0x6662 <main+0x116>
	{
		EEPROM_voidSendDataByte(Local_u8CreatePass[i],i);
		_delay_ms(50);
	}
	LCD_voidClearScreen();
    6688:	0e 94 14 30 	call	0x6028	; 0x6028 <LCD_voidClearScreen>
	LCD_voidSetPosition(0,0);
    668c:	80 e0       	ldi	r24, 0x00	; 0
    668e:	60 e0       	ldi	r22, 0x00	; 0
    6690:	0e 94 18 30 	call	0x6030	; 0x6030 <LCD_voidSetPosition>
	LCD_voidSendString((u8*) "PASSWORD SAVED");
    6694:	88 e7       	ldi	r24, 0x78	; 120
    6696:	90 e0       	ldi	r25, 0x00	; 0
    6698:	0e 94 e1 2f 	call	0x5fc2	; 0x5fc2 <LCD_voidSendString>
    669c:	80 e2       	ldi	r24, 0x20	; 32
    669e:	9e e4       	ldi	r25, 0x4E	; 78
    66a0:	28 ec       	ldi	r18, 0xC8	; 200
    66a2:	30 e0       	ldi	r19, 0x00	; 0
    66a4:	f9 01       	movw	r30, r18
    66a6:	31 97       	sbiw	r30, 0x01	; 1
    66a8:	f1 f7       	brne	.-4      	; 0x66a6 <main+0x15a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    66aa:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    66ac:	d9 f7       	brne	.-10     	; 0x66a4 <main+0x158>
int main(void)
{
	/**************************************************************************/
	/*						1- LOCAL VARIABLES								  */
	/**************************************************************************/
	u8 Local_u8ReadData[5]= "";
    66ae:	19 82       	std	Y+1, r1	; 0x01
    66b0:	1a 82       	std	Y+2, r1	; 0x02
    66b2:	1b 82       	std	Y+3, r1	; 0x03
    66b4:	1c 82       	std	Y+4, r1	; 0x04
    66b6:	1d 82       	std	Y+5, r1	; 0x05
	u8 Local_u8CreatePass[5] = "";
	u8 Local_u8EnteredPass[5] = "";
    66b8:	1b 86       	std	Y+11, r1	; 0x0b
    66ba:	1c 86       	std	Y+12, r1	; 0x0c
    66bc:	1d 86       	std	Y+13, r1	; 0x0d
    66be:	1e 86       	std	Y+14, r1	; 0x0e
    66c0:	1f 86       	std	Y+15, r1	; 0x0f
    66c2:	cc 24       	eor	r12, r12
    66c4:	dd 24       	eor	r13, r13

		LCD_voidClearScreen();
		LCD_voidSetPosition(0,0);
		LCD_voidSendString((u8*) "ENTER PASSWORD");
		LCD_voidSetPosition(1,0);
		LCD_voidSendString((u8*) "PASS:");
    66c6:	9b e0       	ldi	r25, 0x0B	; 11
    66c8:	69 2e       	mov	r6, r25
    66ca:	71 2c       	mov	r7, r1
    66cc:	6c 0e       	add	r6, r28
    66ce:	7d 1e       	adc	r7, r29
    66d0:	88 ec       	ldi	r24, 0xC8	; 200
    66d2:	a8 2e       	mov	r10, r24
    66d4:	b1 2c       	mov	r11, r1
			Local_u8keyPressed = KPD_u8GetPressed();
		}
		while (Local_u8keyPressed != '=');

		for(int i=0 ; i<5 ; i++){
			Local_u8ReadData[i]=EEPROM_u8ReadDataByte(i);
    66d6:	4e 01       	movw	r8, r28
    66d8:	08 94       	sec
    66da:	81 1c       	adc	r8, r1
    66dc:	91 1c       	adc	r9, r1
    66de:	02 c0       	rjmp	.+4      	; 0x66e4 <main+0x198>
	/**************************************************************************/
	/*						1- LOCAL VARIABLES								  */
	/**************************************************************************/
	u8 Local_u8ReadData[5]= "";
	u8 Local_u8CreatePass[5] = "";
	u8 Local_u8EnteredPass[5] = "";
    66e0:	cc 24       	eor	r12, r12
    66e2:	dd 24       	eor	r13, r13
	_delay_ms(2000);
	while(1){



		LCD_voidClearScreen();
    66e4:	0e 94 14 30 	call	0x6028	; 0x6028 <LCD_voidClearScreen>
		LCD_voidSetPosition(0,0);
    66e8:	80 e0       	ldi	r24, 0x00	; 0
    66ea:	60 e0       	ldi	r22, 0x00	; 0
    66ec:	0e 94 18 30 	call	0x6030	; 0x6030 <LCD_voidSetPosition>
		LCD_voidSendString((u8*) "ENTER PASSWORD");
    66f0:	87 e8       	ldi	r24, 0x87	; 135
    66f2:	90 e0       	ldi	r25, 0x00	; 0
    66f4:	0e 94 e1 2f 	call	0x5fc2	; 0x5fc2 <LCD_voidSendString>
		LCD_voidSetPosition(1,0);
    66f8:	81 e0       	ldi	r24, 0x01	; 1
    66fa:	60 e0       	ldi	r22, 0x00	; 0
    66fc:	0e 94 18 30 	call	0x6030	; 0x6030 <LCD_voidSetPosition>
		LCD_voidSendString((u8*) "PASS:");
    6700:	80 e7       	ldi	r24, 0x70	; 112
    6702:	90 e0       	ldi	r25, 0x00	; 0
    6704:	0e 94 e1 2f 	call	0x5fc2	; 0x5fc2 <LCD_voidSendString>
    6708:	73 01       	movw	r14, r6
    670a:	15 e0       	ldi	r17, 0x05	; 5
		for(u8 i = 0;i<4;i++)
		{

			Local_u8EnteredPass[i] = KPD_u8GetPressed();
    670c:	0e 94 77 30 	call	0x60ee	; 0x60ee <KPD_u8GetPressed>
    6710:	08 2f       	mov	r16, r24
			while(Local_u8EnteredPass[i] == 0xff);
    6712:	8f 3f       	cpi	r24, 0xFF	; 255
    6714:	09 f4       	brne	.+2      	; 0x6718 <main+0x1cc>
    6716:	8b c0       	rjmp	.+278    	; 0x682e <main+0x2e2>
			LCD_voidSetPosition(1,5+i);
    6718:	81 e0       	ldi	r24, 0x01	; 1
    671a:	61 2f       	mov	r22, r17
    671c:	0e 94 18 30 	call	0x6030	; 0x6030 <LCD_voidSetPosition>
			LCD_voidSendString((u8*) "*");
    6720:	86 e7       	ldi	r24, 0x76	; 118
    6722:	90 e0       	ldi	r25, 0x00	; 0
    6724:	0e 94 e1 2f 	call	0x5fc2	; 0x5fc2 <LCD_voidSendString>
    6728:	84 ef       	ldi	r24, 0xF4	; 244
    672a:	91 e0       	ldi	r25, 0x01	; 1
    672c:	f5 01       	movw	r30, r10
    672e:	31 97       	sbiw	r30, 0x01	; 1
    6730:	f1 f7       	brne	.-4      	; 0x672e <main+0x1e2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6732:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6734:	d9 f7       	brne	.-10     	; 0x672c <main+0x1e0>
		LCD_voidSetPosition(1,0);
		LCD_voidSendString((u8*) "PASS:");
		for(u8 i = 0;i<4;i++)
		{

			Local_u8EnteredPass[i] = KPD_u8GetPressed();
    6736:	f7 01       	movw	r30, r14
    6738:	01 93       	st	Z+, r16
    673a:	7f 01       	movw	r14, r30
    673c:	1f 5f       	subi	r17, 0xFF	; 255
		LCD_voidClearScreen();
		LCD_voidSetPosition(0,0);
		LCD_voidSendString((u8*) "ENTER PASSWORD");
		LCD_voidSetPosition(1,0);
		LCD_voidSendString((u8*) "PASS:");
		for(u8 i = 0;i<4;i++)
    673e:	19 30       	cpi	r17, 0x09	; 9
    6740:	29 f7       	brne	.-54     	; 0x670c <main+0x1c0>
			while(Local_u8EnteredPass[i] == 0xff);
			LCD_voidSetPosition(1,5+i);
			LCD_voidSendString((u8*) "*");
			_delay_ms(50);
		}
		Local_u8EnteredPass[4] = '\0';
    6742:	1f 86       	std	Y+15, r1	; 0x0f


		do
		{
			Local_u8keyPressed = KPD_u8GetPressed();
    6744:	0e 94 77 30 	call	0x60ee	; 0x60ee <KPD_u8GetPressed>
		}
		while (Local_u8keyPressed != '=');
    6748:	8d 33       	cpi	r24, 0x3D	; 61
    674a:	e1 f7       	brne	.-8      	; 0x6744 <main+0x1f8>
    674c:	00 e0       	ldi	r16, 0x00	; 0
    674e:	10 e0       	ldi	r17, 0x00	; 0

		for(int i=0 ; i<5 ; i++){
			Local_u8ReadData[i]=EEPROM_u8ReadDataByte(i);
    6750:	c8 01       	movw	r24, r16
    6752:	0e 94 3b 32 	call	0x6476	; 0x6476 <EEPROM_u8ReadDataByte>
    6756:	f4 01       	movw	r30, r8
    6758:	e0 0f       	add	r30, r16
    675a:	f1 1f       	adc	r31, r17
    675c:	80 83       	st	Z, r24
    675e:	84 ef       	ldi	r24, 0xF4	; 244
    6760:	91 e0       	ldi	r25, 0x01	; 1
    6762:	f5 01       	movw	r30, r10
    6764:	31 97       	sbiw	r30, 0x01	; 1
    6766:	f1 f7       	brne	.-4      	; 0x6764 <main+0x218>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6768:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    676a:	d9 f7       	brne	.-10     	; 0x6762 <main+0x216>
		{
			Local_u8keyPressed = KPD_u8GetPressed();
		}
		while (Local_u8keyPressed != '=');

		for(int i=0 ; i<5 ; i++){
    676c:	0f 5f       	subi	r16, 0xFF	; 255
    676e:	1f 4f       	sbci	r17, 0xFF	; 255
    6770:	05 30       	cpi	r16, 0x05	; 5
    6772:	11 05       	cpc	r17, r1
    6774:	69 f7       	brne	.-38     	; 0x6750 <main+0x204>
			Local_u8ReadData[i]=EEPROM_u8ReadDataByte(i);
			_delay_ms(50);
		}

		if(Local_u32Tries<2)
    6776:	f2 e0       	ldi	r31, 0x02	; 2
    6778:	cf 16       	cp	r12, r31
    677a:	d1 04       	cpc	r13, r1
    677c:	68 f5       	brcc	.+90     	; 0x67d8 <main+0x28c>
		{

			if(strcmp(Local_u8EnteredPass,Local_u8ReadData)==0)
    677e:	c3 01       	movw	r24, r6
    6780:	b4 01       	movw	r22, r8
    6782:	0e 94 ac 34 	call	0x6958	; 0x6958 <strcmp>
    6786:	00 97       	sbiw	r24, 0x00	; 0
    6788:	71 f4       	brne	.+28     	; 0x67a6 <main+0x25a>
			{
				LCD_voidClearScreen();
    678a:	0e 94 14 30 	call	0x6028	; 0x6028 <LCD_voidClearScreen>
				LCD_voidSendString((u8*) "WELCOME HOME");
    678e:	86 e9       	ldi	r24, 0x96	; 150
    6790:	90 e0       	ldi	r25, 0x00	; 0
    6792:	0e 94 e1 2f 	call	0x5fc2	; 0x5fc2 <LCD_voidSendString>
    6796:	80 e2       	ldi	r24, 0x20	; 32
    6798:	9e e4       	ldi	r25, 0x4E	; 78
    679a:	f5 01       	movw	r30, r10
    679c:	31 97       	sbiw	r30, 0x01	; 1
    679e:	f1 f7       	brne	.-4      	; 0x679c <main+0x250>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    67a0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    67a2:	d9 f7       	brne	.-10     	; 0x679a <main+0x24e>
    67a4:	9f cf       	rjmp	.-194    	; 0x66e4 <main+0x198>
				_delay_ms(2000);
			}

			else{
				LCD_voidClearScreen();
    67a6:	0e 94 14 30 	call	0x6028	; 0x6028 <LCD_voidClearScreen>
				LCD_voidSendString((u8*) "WRONG PASSWORD");
    67aa:	83 ea       	ldi	r24, 0xA3	; 163
    67ac:	90 e0       	ldi	r25, 0x00	; 0
    67ae:	0e 94 e1 2f 	call	0x5fc2	; 0x5fc2 <LCD_voidSendString>
				LCD_voidSetPosition(0,4);
    67b2:	80 e0       	ldi	r24, 0x00	; 0
    67b4:	64 e0       	ldi	r22, 0x04	; 4
    67b6:	0e 94 18 30 	call	0x6030	; 0x6030 <LCD_voidSetPosition>
				LCD_voidSendString((u8*) "TRY AGAIN");
    67ba:	82 eb       	ldi	r24, 0xB2	; 178
    67bc:	90 e0       	ldi	r25, 0x00	; 0
    67be:	0e 94 e1 2f 	call	0x5fc2	; 0x5fc2 <LCD_voidSendString>
    67c2:	80 e2       	ldi	r24, 0x20	; 32
    67c4:	9e e4       	ldi	r25, 0x4E	; 78
    67c6:	f5 01       	movw	r30, r10
    67c8:	31 97       	sbiw	r30, 0x01	; 1
    67ca:	f1 f7       	brne	.-4      	; 0x67c8 <main+0x27c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    67cc:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    67ce:	d9 f7       	brne	.-10     	; 0x67c6 <main+0x27a>
				_delay_ms(2000);
				Local_u32Tries++;
    67d0:	08 94       	sec
    67d2:	c1 1c       	adc	r12, r1
    67d4:	d1 1c       	adc	r13, r1
    67d6:	86 cf       	rjmp	.-244    	; 0x66e4 <main+0x198>
			}
		}

		else
		{
			LCD_voidClearScreen();
    67d8:	0e 94 14 30 	call	0x6028	; 0x6028 <LCD_voidClearScreen>
			LCD_voidSetPosition(0,0);
    67dc:	80 e0       	ldi	r24, 0x00	; 0
    67de:	60 e0       	ldi	r22, 0x00	; 0
    67e0:	0e 94 18 30 	call	0x6030	; 0x6030 <LCD_voidSetPosition>
			LCD_voidSendString((u8*) "WRONG PASSWORD");
    67e4:	83 ea       	ldi	r24, 0xA3	; 163
    67e6:	90 e0       	ldi	r25, 0x00	; 0
    67e8:	0e 94 e1 2f 	call	0x5fc2	; 0x5fc2 <LCD_voidSendString>
			LCD_voidSetPosition(0,0);
    67ec:	80 e0       	ldi	r24, 0x00	; 0
    67ee:	60 e0       	ldi	r22, 0x00	; 0
    67f0:	0e 94 18 30 	call	0x6030	; 0x6030 <LCD_voidSetPosition>
			LCD_voidSendString((u8*) "ATTEMPTS ARE OVER");
    67f4:	8c eb       	ldi	r24, 0xBC	; 188
    67f6:	90 e0       	ldi	r25, 0x00	; 0
    67f8:	0e 94 e1 2f 	call	0x5fc2	; 0x5fc2 <LCD_voidSendString>
    67fc:	80 e3       	ldi	r24, 0x30	; 48
    67fe:	95 e7       	ldi	r25, 0x75	; 117
    6800:	f5 01       	movw	r30, r10
    6802:	31 97       	sbiw	r30, 0x01	; 1
    6804:	f1 f7       	brne	.-4      	; 0x6802 <main+0x2b6>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6806:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6808:	d9 f7       	brne	.-10     	; 0x6800 <main+0x2b4>
			_delay_ms(3000);

			LCD_voidClearScreen();
    680a:	0e 94 14 30 	call	0x6028	; 0x6028 <LCD_voidClearScreen>
			LCD_voidSetPosition(0,0);
    680e:	80 e0       	ldi	r24, 0x00	; 0
    6810:	60 e0       	ldi	r22, 0x00	; 0
    6812:	0e 94 18 30 	call	0x6030	; 0x6030 <LCD_voidSetPosition>
			LCD_voidSendString((u8*) "WAIT 5 SECONDS");
    6816:	8e ec       	ldi	r24, 0xCE	; 206
    6818:	90 e0       	ldi	r25, 0x00	; 0
    681a:	0e 94 e1 2f 	call	0x5fc2	; 0x5fc2 <LCD_voidSendString>
    681e:	80 e5       	ldi	r24, 0x50	; 80
    6820:	93 ec       	ldi	r25, 0xC3	; 195
    6822:	f5 01       	movw	r30, r10
    6824:	31 97       	sbiw	r30, 0x01	; 1
    6826:	f1 f7       	brne	.-4      	; 0x6824 <main+0x2d8>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6828:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    682a:	d9 f7       	brne	.-10     	; 0x6822 <main+0x2d6>
    682c:	59 cf       	rjmp	.-334    	; 0x66e0 <main+0x194>
    682e:	ff cf       	rjmp	.-2      	; 0x682e <main+0x2e2>
    6830:	ff cf       	rjmp	.-2      	; 0x6830 <main+0x2e4>

00006832 <__divmodsi4>:
    6832:	97 fb       	bst	r25, 7
    6834:	09 2e       	mov	r0, r25
    6836:	05 26       	eor	r0, r21
    6838:	0e d0       	rcall	.+28     	; 0x6856 <__divmodsi4_neg1>
    683a:	57 fd       	sbrc	r21, 7
    683c:	04 d0       	rcall	.+8      	; 0x6846 <__divmodsi4_neg2>
    683e:	33 d0       	rcall	.+102    	; 0x68a6 <__udivmodsi4>
    6840:	0a d0       	rcall	.+20     	; 0x6856 <__divmodsi4_neg1>
    6842:	00 1c       	adc	r0, r0
    6844:	38 f4       	brcc	.+14     	; 0x6854 <__divmodsi4_exit>

00006846 <__divmodsi4_neg2>:
    6846:	50 95       	com	r21
    6848:	40 95       	com	r20
    684a:	30 95       	com	r19
    684c:	21 95       	neg	r18
    684e:	3f 4f       	sbci	r19, 0xFF	; 255
    6850:	4f 4f       	sbci	r20, 0xFF	; 255
    6852:	5f 4f       	sbci	r21, 0xFF	; 255

00006854 <__divmodsi4_exit>:
    6854:	08 95       	ret

00006856 <__divmodsi4_neg1>:
    6856:	f6 f7       	brtc	.-4      	; 0x6854 <__divmodsi4_exit>
    6858:	90 95       	com	r25
    685a:	80 95       	com	r24
    685c:	70 95       	com	r23
    685e:	61 95       	neg	r22
    6860:	7f 4f       	sbci	r23, 0xFF	; 255
    6862:	8f 4f       	sbci	r24, 0xFF	; 255
    6864:	9f 4f       	sbci	r25, 0xFF	; 255
    6866:	08 95       	ret

00006868 <__mulsi3>:
    6868:	62 9f       	mul	r22, r18
    686a:	d0 01       	movw	r26, r0
    686c:	73 9f       	mul	r23, r19
    686e:	f0 01       	movw	r30, r0
    6870:	82 9f       	mul	r24, r18
    6872:	e0 0d       	add	r30, r0
    6874:	f1 1d       	adc	r31, r1
    6876:	64 9f       	mul	r22, r20
    6878:	e0 0d       	add	r30, r0
    687a:	f1 1d       	adc	r31, r1
    687c:	92 9f       	mul	r25, r18
    687e:	f0 0d       	add	r31, r0
    6880:	83 9f       	mul	r24, r19
    6882:	f0 0d       	add	r31, r0
    6884:	74 9f       	mul	r23, r20
    6886:	f0 0d       	add	r31, r0
    6888:	65 9f       	mul	r22, r21
    688a:	f0 0d       	add	r31, r0
    688c:	99 27       	eor	r25, r25
    688e:	72 9f       	mul	r23, r18
    6890:	b0 0d       	add	r27, r0
    6892:	e1 1d       	adc	r30, r1
    6894:	f9 1f       	adc	r31, r25
    6896:	63 9f       	mul	r22, r19
    6898:	b0 0d       	add	r27, r0
    689a:	e1 1d       	adc	r30, r1
    689c:	f9 1f       	adc	r31, r25
    689e:	bd 01       	movw	r22, r26
    68a0:	cf 01       	movw	r24, r30
    68a2:	11 24       	eor	r1, r1
    68a4:	08 95       	ret

000068a6 <__udivmodsi4>:
    68a6:	a1 e2       	ldi	r26, 0x21	; 33
    68a8:	1a 2e       	mov	r1, r26
    68aa:	aa 1b       	sub	r26, r26
    68ac:	bb 1b       	sub	r27, r27
    68ae:	fd 01       	movw	r30, r26
    68b0:	0d c0       	rjmp	.+26     	; 0x68cc <__udivmodsi4_ep>

000068b2 <__udivmodsi4_loop>:
    68b2:	aa 1f       	adc	r26, r26
    68b4:	bb 1f       	adc	r27, r27
    68b6:	ee 1f       	adc	r30, r30
    68b8:	ff 1f       	adc	r31, r31
    68ba:	a2 17       	cp	r26, r18
    68bc:	b3 07       	cpc	r27, r19
    68be:	e4 07       	cpc	r30, r20
    68c0:	f5 07       	cpc	r31, r21
    68c2:	20 f0       	brcs	.+8      	; 0x68cc <__udivmodsi4_ep>
    68c4:	a2 1b       	sub	r26, r18
    68c6:	b3 0b       	sbc	r27, r19
    68c8:	e4 0b       	sbc	r30, r20
    68ca:	f5 0b       	sbc	r31, r21

000068cc <__udivmodsi4_ep>:
    68cc:	66 1f       	adc	r22, r22
    68ce:	77 1f       	adc	r23, r23
    68d0:	88 1f       	adc	r24, r24
    68d2:	99 1f       	adc	r25, r25
    68d4:	1a 94       	dec	r1
    68d6:	69 f7       	brne	.-38     	; 0x68b2 <__udivmodsi4_loop>
    68d8:	60 95       	com	r22
    68da:	70 95       	com	r23
    68dc:	80 95       	com	r24
    68de:	90 95       	com	r25
    68e0:	9b 01       	movw	r18, r22
    68e2:	ac 01       	movw	r20, r24
    68e4:	bd 01       	movw	r22, r26
    68e6:	cf 01       	movw	r24, r30
    68e8:	08 95       	ret

000068ea <__prologue_saves__>:
    68ea:	2f 92       	push	r2
    68ec:	3f 92       	push	r3
    68ee:	4f 92       	push	r4
    68f0:	5f 92       	push	r5
    68f2:	6f 92       	push	r6
    68f4:	7f 92       	push	r7
    68f6:	8f 92       	push	r8
    68f8:	9f 92       	push	r9
    68fa:	af 92       	push	r10
    68fc:	bf 92       	push	r11
    68fe:	cf 92       	push	r12
    6900:	df 92       	push	r13
    6902:	ef 92       	push	r14
    6904:	ff 92       	push	r15
    6906:	0f 93       	push	r16
    6908:	1f 93       	push	r17
    690a:	cf 93       	push	r28
    690c:	df 93       	push	r29
    690e:	cd b7       	in	r28, 0x3d	; 61
    6910:	de b7       	in	r29, 0x3e	; 62
    6912:	ca 1b       	sub	r28, r26
    6914:	db 0b       	sbc	r29, r27
    6916:	0f b6       	in	r0, 0x3f	; 63
    6918:	f8 94       	cli
    691a:	de bf       	out	0x3e, r29	; 62
    691c:	0f be       	out	0x3f, r0	; 63
    691e:	cd bf       	out	0x3d, r28	; 61
    6920:	09 94       	ijmp

00006922 <__epilogue_restores__>:
    6922:	2a 88       	ldd	r2, Y+18	; 0x12
    6924:	39 88       	ldd	r3, Y+17	; 0x11
    6926:	48 88       	ldd	r4, Y+16	; 0x10
    6928:	5f 84       	ldd	r5, Y+15	; 0x0f
    692a:	6e 84       	ldd	r6, Y+14	; 0x0e
    692c:	7d 84       	ldd	r7, Y+13	; 0x0d
    692e:	8c 84       	ldd	r8, Y+12	; 0x0c
    6930:	9b 84       	ldd	r9, Y+11	; 0x0b
    6932:	aa 84       	ldd	r10, Y+10	; 0x0a
    6934:	b9 84       	ldd	r11, Y+9	; 0x09
    6936:	c8 84       	ldd	r12, Y+8	; 0x08
    6938:	df 80       	ldd	r13, Y+7	; 0x07
    693a:	ee 80       	ldd	r14, Y+6	; 0x06
    693c:	fd 80       	ldd	r15, Y+5	; 0x05
    693e:	0c 81       	ldd	r16, Y+4	; 0x04
    6940:	1b 81       	ldd	r17, Y+3	; 0x03
    6942:	aa 81       	ldd	r26, Y+2	; 0x02
    6944:	b9 81       	ldd	r27, Y+1	; 0x01
    6946:	ce 0f       	add	r28, r30
    6948:	d1 1d       	adc	r29, r1
    694a:	0f b6       	in	r0, 0x3f	; 63
    694c:	f8 94       	cli
    694e:	de bf       	out	0x3e, r29	; 62
    6950:	0f be       	out	0x3f, r0	; 63
    6952:	cd bf       	out	0x3d, r28	; 61
    6954:	ed 01       	movw	r28, r26
    6956:	08 95       	ret

00006958 <strcmp>:
    6958:	fb 01       	movw	r30, r22
    695a:	dc 01       	movw	r26, r24
    695c:	8d 91       	ld	r24, X+
    695e:	01 90       	ld	r0, Z+
    6960:	80 19       	sub	r24, r0
    6962:	01 10       	cpse	r0, r1
    6964:	d9 f3       	breq	.-10     	; 0x695c <strcmp+0x4>
    6966:	99 0b       	sbc	r25, r25
    6968:	08 95       	ret

0000696a <_exit>:
    696a:	f8 94       	cli

0000696c <__stop_program>:
    696c:	ff cf       	rjmp	.-2      	; 0x696c <__stop_program>
